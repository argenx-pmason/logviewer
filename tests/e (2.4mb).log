1                                                          The SAS System                        Tuesday, April 11, 2023 02:36:00 AM

NOTE: Copyright (c) 2016 by SAS Institute Inc., Cary, NC, USA.
NOTE: SAS (r) Proprietary Software 9.4 (TS1M7 MBCS3170)
      Licensed to ARGENX VIA OCS_SAS LSAF_SAAS, Site 70265777.
NOTE: This session is executing on the Linux 4.18.0-305.19.1.el8_4.x86_64 (LIN X64) platform.



NOTE: Analytical products:

      SAS/STAT 15.2
      SAS/IML 15.2

NOTE: Additional host information:

 Linux LIN X64 4.18.0-305.19.1.el8_4.x86_64 #1 SMP Tue Sep 7 07:07:31 EDT 2021 x86_64 Red Hat Enterprise Linux release 8.4 (Ootpa)

You are running SAS 9. Some SAS 8 files will be automatically converted
by the V9 engine; others are incompatible.  Please see
http://support.sas.com/rnd/migration/planning/platform/64bit.html

PROC MIGRATE will preserve current SAS file attributes and is
recommended for converting all your SAS libraries from any
SAS 8 release to SAS 9.  For details and examples, please see
http://support.sas.com/rnd/migration/index.html


This message is contained in the SAS news file, and is presented upon
initialization.  Edit the file "news" in the "misc/base" directory to
display site-specific news and information in the program log.
The command line option "-nonews" will prevent this display.




NOTE: SAS Initialization used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds

NOTE: The autoexec file, /sso/biconfig/940/Lev1/LSAFApp/WorkspaceServer/autoexec.sas, was executed at server initialization.
1          options nofmterr;
2          options dtreset;
3          options locale=EN_US;
4          %let _SDDUSR_=%bquote(mbusselen);
5          %let _SASWS_ = %nrstr("/lsafshared/SASWorkspaces/.transient/dashboard2.job-4a37a855-ba33-4b52-9ced-c0df0b457280");
6          %let _SASWS_ = %qsubstr(&_SASWS_, 2, %length(&_SASWS_) - 2);
7          %let _SASUSRWS_ =
7        ! %nrstr("/lsafshared/SASWorkspaces/.transient/dashboard2.job-4a37a855-ba33-4b52-9ced-c0df0b457280/Users/mbusselen");
8          %let _SASUSRWS_ = %qsubstr(&_SASUSRWS_, 2, %length(&_SASUSRWS_) - 2);
9          %let _SASINSTANCE_ = %nrstr("xarprod.ondemand.sas.com");
10         %let _SASINSTANCE_ = %qsubstr(&_SASINSTANCE_, 2, %length(&_SASINSTANCE_) - 2);
11         options nosource;

NOTE: DATA statement used (Total process time):
      real time           1.02 seconds
      cpu time            0.00 seconds


18

/**********************************************************************************************************************
 * Submission Start: dashboard2.sas
 * Apr 11, 2023 02:36:04 GMT by mbusselen
 *********************************************************************************************************************/
2                                                          The SAS System                        Tuesday, April 11, 2023 02:36:04 AM

19         options nosyntaxcheck errorcheck=strict notes;
20         ;*';*";*/;*); run; quit;
21
22         %let _SASFILELOCATION_ = %nrstr("/general/biostat/jobs/dashboard/dev/programs");
23         %let _SASFILELOCATION_ = %qsubstr(&_SASFILELOCATION_, 2, %length(&_SASFILELOCATION_) - 2);
24         %let _SASFILEPATH_ = %nrstr("/general/biostat/jobs/dashboard/dev/programs/dashboard2.sas");
25         %let _SASFILEPATH_ = %qsubstr(&_SASFILEPATH_, 2, %length(&_SASFILEPATH_) - 2);
26
27         /********************************************************************************************************************/
28         proc scaproc; record "&_SASWS_/.sessions/1/sca_55176012-3f68-4f3a-96fa-5818d51238e9.txt" EXPANDMACROS; run;

NOTE: PROCEDURE SCAPROC used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds


29
30         options nomprint;
31         /********************************************************************************************************************/
32
33         /************************************************************************************************************************
33       ! *******************
34         @file
35         @brief      refreshes all dashboards
36         @details    Does the following:
37         - Refresh dashboards of active reporting events
38         - Collect last update info of all reporting events
39         - Retrieve dashboard info for all active reporting events
40         - Create dashboard
41         - Set development projects to final that have not changed in >30 days defined_min_days
42
43         @author     mbusselen
44         @date       2022-04-23
45
46         @returns
46       ! https://xarprod.ondemand.sas.com/lsaf/filedownload/sdd%3A///general/biostat/jobs/dashboard/dev/output/dashboard.html
47         @todo       Make links open in a new tab
48
49         #### Update History ####
50
51             Date             Name                        Description
52             ------------     --------------------------
52       ! -------------------------------------------------------------------------------------------
53             2022-04-23       mbusselen                   Initial program
54             2023-01-18       pmason                      links to logviewer and project status app to see all study dashboards
54       ! (including old ones)
55                                                          also tried to make links open in a new tab, but it's not yet working as
55       ! it should.
56             2023-01-18       pmason                      Added title and icon to browser tab
57
58         *************************************************************************************************************************
58       ! ******************/
59
60
61         /* %let reportingeventpath = /clinical/argx-113/mg/argx-113-1704/biostat/staging/gba; */
62         %setenv (ini=0);
MPRINT(SETENV):   source source2 nofmterr notes spool nodate nonumber MAUTOCOMPLOC NOMAUTOLOCDISPLAY;
MPRINT(SETENV):   * in case run in batch;
                                                           The SAS System

(SETENV): _SASFILEPATH_ = /general/biostat/jobs/dashboard/dev/programs/dashboard2.sas
(SETENV): path1 = /general/biostat/jobs/dashboard/dev/programs/dashboard2.sas
(SETENV): _sasws_ = /lsafshared/SASWorkspaces/.transient/dashboard2.job-4a37a855-ba33-4b52-9ced-c0df0b457280
(SETENV): runenvironment = repository
MPRINT(SETENV):   *libname projmeta "&projectsmetapath" access=readonly;
MPRINT(SETENV):   data gen_setenv(keep=fname ver maxver);
MPRINT(SETENV):   length fref $8 dirname fname $400;
MPRINT(SETENV):   direxists = 0;
MPRINT(SETENV):   found = 0;
MPRINT(SETENV):   maxver = .;
MPRINT(SETENV):
dirname="/lsafshared/SASWorkspaces/.transient/dashboard2.job-4a37a855-ba33-4b52-9ced-c0df0b457280/general/biostat/macros/_library";
MPRINT(SETENV):   rc=filename(fref, dirname);
MPRINT(SETENV):   did=dopen(fref);
MPRINT(SETENV):   if did > 0 then do;
MPRINT(SETENV):   direxists=1;
MPRINT(SETENV):   memcount=dnum(did);
MPRINT(SETENV):   do i = 1 to memcount;
MPRINT(SETENV):   fname=dread(did, i);
MPRINT(SETENV):   if prxmatch('/^setenv\d+\.sas$/', cats(fname)) then do;
MPRINT(SETENV):   found+1;
MPRINT(SETENV):   ver = input(prxchange('s/^setenv(\d+)\.sas$/\1/', 1, cats(fname)), best32.);
MPRINT(SETENV):   if ver > maxver then maxver = ver;
MPRINT(SETENV):   put "(SETENV):" found= fname= ver= rc= did= fref= dirname=;
MPRINT(SETENV):   output;
MPRINT(SETENV):   end;
MPRINT(SETENV):   *put "(&sysmacroname):" found= fname= ver= rc= did= fref= dirname=;
MPRINT(SETENV):   end;
MPRINT(SETENV):   rc=dclose(did);
MPRINT(SETENV):   end;
MPRINT(SETENV):   else do;
MPRINT(SETENV):   msg = put(sysmsg(), $400.);
MPRINT(SETENV):   put "Failed to open directory: " rc= did= fref= dirname= "sysmsg=" msg;
MPRINT(SETENV):   end;
MPRINT(SETENV):   rc=filename(fref);
MPRINT(SETENV):   run;

(SETENV):found=1 fname=setenv01.sas ver=1 rc=0 did=1 fref=#LN00016
dirname=/lsafshared/SASWorkspaces/.transient/dashboard2.job-4a37a855-ba33-4b52-9ced-c0df0b457280/general/biostat/macros/_library
(SETENV):found=2 fname=setenv02.sas ver=2 rc=0 did=1 fref=#LN00016
dirname=/lsafshared/SASWorkspaces/.transient/dashboard2.job-4a37a855-ba33-4b52-9ced-c0df0b457280/general/biostat/macros/_library
NOTE: The data set WORK.GEN_SETENV has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds


MPRINT(SETENV):   proc sql noprint;
MPRINT(SETENV):   select fname into :gen_setenv trimmed from gen_setenv having ver = max(ver) ;
NOTE: The query requires remerging summary statistics back with the original data.
MPRINT(SETENV):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds


gen_setenv = setenv02.sas
MPRINT(SETENV):   data repev_setenv(keep=fname ver maxver);
                                                           The SAS System

MPRINT(SETENV):   length fref frefsrc $8 setenv $32 d dirname fname msg $400;
MPRINT(SETENV):   direxists = 0;
MPRINT(SETENV):   found = 0;
MPRINT(SETENV):   maxver = .;
MPRINT(SETENV):   do
d="/lsafshared/SASWorkspaces/.transient/dashboard2.job-4a37a855-ba33-4b52-9ced-c0df0b457280/general/biostat/jobs/dashboard/dev/macro
s/global_macros",
"/lsafshared/SASWorkspaces/.transient/dashboard2.job-4a37a855-ba33-4b52-9ced-c0df0b457280/general/biostat/jobs/dashboard/dev/macros/
global-macros" while(direxists=0);
MPRINT(SETENV):   put d=;
MPRINT(SETENV):   rc=filename(fref, d);
MPRINT(SETENV):   did=dopen(fref);
MPRINT(SETENV):   if did > 0 then do;
MPRINT(SETENV):   direxists=1;
MPRINT(SETENV):   dirname=d;
MPRINT(SETENV):   memcount=dnum(did);
MPRINT(SETENV):   do i = 1 to memcount;
MPRINT(SETENV):   fname=dread(did, i);
MPRINT(SETENV):   if prxmatch('/^setenv\d+\.sas$/', cats(fname)) then do;
MPRINT(SETENV):   found+1;
MPRINT(SETENV):   ver = input(prxchange('s/^setenv(\d+)\.sas$/\1/', 1, cats(fname)), best32.);
MPRINT(SETENV):   if ver > maxver then do;
MPRINT(SETENV):   maxver = ver;
MPRINT(SETENV):   setenv = fname;
MPRINT(SETENV):   end;
MPRINT(SETENV):   put "(SETENV):" found= fname= ver= rc= did= fref= dirname=;
MPRINT(SETENV):   output;
MPRINT(SETENV):   end;
MPRINT(SETENV):   *put "(&sysmacroname):" found= fname= ver= rc= did= fref= dirname=;
MPRINT(SETENV):   end;
MPRINT(SETENV):   rc=dclose(did);
MPRINT(SETENV):   end;
MPRINT(SETENV):   else do;
MPRINT(SETENV):   put "Failed to open directory: " rc= did= fref= dirname=;
MPRINT(SETENV):   end;
MPRINT(SETENV):   rc=filename(fref);
MPRINT(SETENV):   end;
MPRINT(SETENV):   if direxists=0 then do;
MPRINT(SETENV):   *- JMBodart 2021-10-13 - create macros folder if it does not exist (START) -*;
MPRINT(SETENV):   rc=filename(fref,
"/lsafshared/SASWorkspaces/.transient/dashboard2.job-4a37a855-ba33-4b52-9ced-c0df0b457280/general/biostat/jobs/dashboard/dev/macros"
);
MPRINT(SETENV):   did=dopen(fref);
MPRINT(SETENV):   if did > 0 then do;
MPRINT(SETENV):   rc=dclose(did);
MPRINT(SETENV):   end;
MPRINT(SETENV):   else do;
MPRINT(SETENV):   dirname = dcreate("macros",
"/lsafshared/SASWorkspaces/.transient/dashboard2.job-4a37a855-ba33-4b52-9ced-c0df0b457280/general/biostat/jobs/dashboard/dev/");
MPRINT(SETENV):   dirname = ' ';
MPRINT(SETENV):   end;
MPRINT(SETENV):   rc=filename(fref);
MPRINT(SETENV):   *- JMBodart 2021-10-13 - create macros folder if it does not exist (END) -*;
MPRINT(SETENV):   dirname=dcreate("global_macros",
"/lsafshared/SASWorkspaces/.transient/dashboard2.job-4a37a855-ba33-4b52-9ced-c0df0b457280/general/biostat/jobs/dashboard/dev/macros"
);
MPRINT(SETENV):   if dirname ^= ' ' then do;
MPRINT(SETENV):   rc=filename(fref, dirname);
                                                           The SAS System

MPRINT(SETENV):   did=dopen(fref);
MPRINT(SETENV):   if did > 0 then do;
MPRINT(SETENV):   direxists=1;
MPRINT(SETENV):   rc=dclose(did);
MPRINT(SETENV):   end;
MPRINT(SETENV):   rc=filename(fref);
MPRINT(SETENV):   end;
MPRINT(SETENV):   end;
MPRINT(SETENV):   put dirname= direxists=;
MPRINT(SETENV):   if direxists then do;
MPRINT(SETENV):   call execute("option insert=(sasautos="||quote(cats(dirname))||");");
MPRINT(SETENV):   if found = 0 then do;
MPRINT(SETENV):   cumrc = 0;
MPRINT(SETENV):   rc=filename(frefsrc,
"/lsafshared/SASWorkspaces/.transient/dashboard2.job-4a37a855-ba33-4b52-9ced-c0df0b457280/general/biostat/macros/_library/setenv02.s
as");
MPRINT(SETENV):   if rc ne 0 then do;
MPRINT(SETENV):   msg = sysmsg();
MPRINT(SETENV):   put msg;
MPRINT(SETENV):   cumrc=rc;
MPRINT(SETENV):   end;
MPRINT(SETENV):   rc=filename(fref, cats(dirname, "/setenv02.sas"));
MPRINT(SETENV):   if rc ne 0 then do;
MPRINT(SETENV):   msg = sysmsg();
MPRINT(SETENV):   put msg;
MPRINT(SETENV):   cumrc=rc;
MPRINT(SETENV):   end;
MPRINT(SETENV):   if cumrc = 0 then do;
MPRINT(SETENV):   put "Copying
""/lsafshared/SASWorkspaces/.transient/dashboard2.job-4a37a855-ba33-4b52-9ced-c0df0b457280/general/biostat/macros/_library/setenv02.
sas"" to" dirname $quote. ;
MPRINT(SETENV):   rc = fcopy(frefsrc, fref);
MPRINT(SETENV):   if rc ne 0 then do;
MPRINT(SETENV):   put "Failed.";
MPRINT(SETENV):   msg = sysmsg();
MPRINT(SETENV):   put msg;
MPRINT(SETENV):   cumrc=rc;
MPRINT(SETENV):   end;
MPRINT(SETENV):   else put "Success.";
MPRINT(SETENV):   end;
MPRINT(SETENV):   rc=filename(frefsrc);
MPRINT(SETENV):   rc=filename(fref);
MPRINT(SETENV):   if cumrc = 0 then setenv = "setenv02.sas";
MPRINT(SETENV):   end;
MPRINT(SETENV):   end;
MPRINT(SETENV):   call symput("setenv", cats(setenv));
MPRINT(SETENV):   put setenv=;
MPRINT(SETENV):   run;

d=/lsafshared/SASWorkspaces/.transient/dashboard2.job-4a37a855-ba33-4b52-9ced-c0df0b457280/general/biostat/jobs/dashboard/dev/macros
/global_macros
Failed to open directory: rc=0 did=0 fref=#LN00017 dirname=
d=/lsafshared/SASWorkspaces/.transient/dashboard2.job-4a37a855-ba33-4b52-9ced-c0df0b457280/general/biostat/jobs/dashboard/dev/macros
/global-macros
Failed to open directory: rc=0 did=0 fref=#LN00018 dirname=
dirname=/lsafshared/SASWorkspaces/.transient/dashboard2.job-4a37a855-ba33-4b52-9ced-c0df0b457280/general/biostat/jobs/dashboard/dev/
macros/global_macros direxists=1
MPRINT(SETENV):   option
                                                           The SAS System

insert=(sasautos="/lsafshared/SASWorkspaces/.transient/dashboard2.job-4a37a855-ba33-4b52-9ced-c0df0b457280/general/biostat/jobs/dash
board/dev/macros/global_macros");
Copying  "/lsafshared/SASWorkspaces/.transient/dashboard2.job-4a37a855-ba33-4b52-9ced-c0df0b457280/general/biostat/macros/_library/s
etenv02.sas" to
"/lsafshared/SASWorkspaces/.transient/dashboard2.job-4a37a855-ba33-4b52-9ced-c0df0b457280/general/biostat/jobs/dashboard/dev/macros/
global_macros"


Success.
setenv=setenv02.sas
NOTE: The data set WORK.REPEV_SETENV has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.02 seconds


NOTE: CALL EXECUTE generated line.
1         + option
insert=(sasautos="/lsafshared/SASWorkspaces/.transient/dashboard2.job-4a37a855-ba33-4b52-9ced-c0df0b457280/general/biostat/jobs/dash
board/dev/macros/global_macros");
setenv=setenv02.sas
(SETENV): Calling %setenv02(ini=0, tabno=, default_debug=1)
MAUTOCOMPLOC:  The autocall macro SETENV02 is compiling using the autocall source file
            /lsafshared/SASWorkspaces/.transient/dashboard2.job-4a37a855-ba33-4b52-9ced-c0df0b457280/general/biostat/jobs/dashboard/
            dev/macros/global_macros/setenv02.sas.
MPRINT(SETENV.SETENV02):   options mprint nofmterr spool nodate nonumber MAUTOCOMPLOC NOMAUTOLOCDISPLAY;
MPRINT(SETENV.SETENV02):   *- Clean previously compiled macros from WORK.SASMAC* -*;
MPRINT(SETENV.SETENV02):   data _NULL_;
MPRINT(SETENV.SETENV02):   length save $500;
MPRINT(SETENV.SETENV02):   retain save;
MPRINT(SETENV.SETENV02):   set sashelp.vcatalg(where=(libname="WORK" and memname=:'SASMAC' and objtype="MACRO")) end=last;
MPRINT(SETENV.SETENV02):   by memname notsorted;
MPRINT(SETENV.SETENV02):   if first.memname then do;
MPRINT(SETENV.SETENV02):   if index(" "||save, " "||strip(memname)||".") eq 0 then save = catx(" ", save,
strip(memname)||"."||objname);
MPRINT(SETENV.SETENV02):   end;
MPRINT(SETENV.SETENV02):   if last;
MPRINT(SETENV.SETENV02):   call symputx('save_macr', save);
MPRINT(SETENV.SETENV02):   run;

NOTE: There were 2 observations read from the data set SASHELP.VCATALG.
      WHERE (libname='WORK') and (memname=:'SASMAC') and (objtype='MACRO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds


save_macr = SASMAC1.SETENV
MPRINT(SETENV.SETENV02):   proc catalog catalog=work.SASMAC1 force;
MPRINT(SETENV.SETENV02):   *save &sysmacroname /et=macro;
MPRINT(SETENV.SETENV02):   save SETENV SETENV02 /et=macro;
MPRINT(SETENV.SETENV02):   run;

NOTE: Saving entry SETENV.MACRO in catalog WORK.SASMAC1.
NOTE: Saving entry SETENV02.MACRO in catalog WORK.SASMAC1.
MPRINT(SETENV.SETENV02):   quit;

NOTE: PROCEDURE CATALOG used (Total process time):
                                                           The SAS System

      real time           0.01 seconds
      cpu time            0.02 seconds


MPRINT(SETENV.SETENV02):   *- Clear filenames and delete previous scaprocrecord.txt (J-M Bodart 2021-03-25) -*;
MPRINT(SETENV.SETENV02):   filename _all_ clear;
MPRINT(SETENV.SETENV02):   * in case run in batch;
(SETENV02): _SASFILEPATH_ = /general/biostat/jobs/dashboard/dev/programs/dashboard2.sas
(SETENV02): path1 = /general/biostat/jobs/dashboard/dev/programs/dashboard2.sas
(SETENV02): _sasws_ = /lsafshared/SASWorkspaces/.transient/dashboard2.job-4a37a855-ba33-4b52-9ced-c0df0b457280
(SETENV02): runenvironment = repository
MPRINT(SETENV.SETENV02):   libname projmeta
"/lsafshared/SASWorkspaces/.transient/dashboard2.job-4a37a855-ba33-4b52-9ced-c0df0b457280/general/biostat/metadata/projects/"
access=readonly;
NOTE: Libref PROJMETA was successfully assigned as follows:
      Engine:        V9
      Physical Name:
      /lsafshared/SASWorkspaces/.transient/dashboard2.job-4a37a855-ba33-4b52-9ced-c0df0b457280/general/biostat/metadata/projects
runenvironment=repository
progpath=/general/biostat/jobs/dashboard/dev/programs/
repevpath=/lsafshared/SASWorkspaces/.transient/dashboard2.job-4a37a855-ba33-4b52-9ced-c0df0b457280/general/biostat/jobs/dashboard/de
v/
relrepevpath=/general/biostat/jobs/dashboard/dev/
progname=dashboard2.sas
pgmname=dashboard2
general=/lsafshared/SASWorkspaces/.transient/dashboard2.job-4a37a855-ba33-4b52-9ced-c0df0b457280/general/biostat/
debug=1
compound=biostat
indication=jobs
study=dashboard
revent=
NOTE: %INCLUDE (level 1) file
      /lsafshared/SASWorkspaces/.transient/dashboard2.job-4a37a855-ba33-4b52-9ced-c0df0b457280/general/biostat/macros/_library/setsa
      sautos.sas is file
      /lsafshared/SASWorkspaces/.transient/dashboard2.job-4a37a855-ba33-4b52-9ced-c0df0b457280/general/biostat/macros/_library/setsa
      sautos.sas.
63        +/**
64        +@file
65        +@author     Martijn Busselen
66        +@date       2020-11-23
67        +@brief      set the macro sasautos so it uses first the maros defined on reporting event level and secondly those from
67       !+the global level
68        +
69        +@pre        Need to run %setenv
70        +
71        +#### Update History ####
72        +
73        +      Date           Name                       Description
74        +      ------------   ------------------------
74       !+-----------------------------------------------------------------------------
75        +      2021-07-21     S Shipp                    Update for global_macros folder.
76        +      2022-02-27     J-M Bodart                 Include /general/gadam/_library when last level of &repevpath =
76       !+generic_adam.
77        +      2022-03-01     J-M Bodart                 Add \ as delimiter in %scan(&repevpath, -1, /\) as it is not part of
77       !+default delimiters
78        +                                                (needed when run locally on Windows).
79        +      2022-06-30     J-M Bodart                 Add gsdtm/_library.
80        +      2022-12-07     J-M Bodart                 Add user workspace macros to SASAUTOS for development purposes, if
                                                           The SAS System

80       !+applicable.
81        +      2022-12-08     J-M Bodart                 Increase l3 size to avoid truncations.
82        +                                                Only add workspace macros to SASAUTOS if environment variable
82       !+USE_SAS_WORKSPACE_MACROS
83        +                                                is defined as Y, or global macro-variable &USE_SAS_WORKSPACE_MACROS=Y.
84        +      2022-12-11     J-M Bodart                 Fix regex !^/general/biostat/jobs/(gadam|gsdtm)_\w+/dev(/|$)!.
85        +      2023-02-09     J-M Bodart                 Issue a Notice: (instead of War-ning:) message when adding WORKSPACE
85       !+paths to SASAUTOS
86        +                                                for development purposes.
87        +
88        +
89        +#### Examples ####
90        +@code
91        +   option mautosource mcompilenote=all;
92        +   %setSasAutos();
93        +@endcode
94        +**/
95        +
96        +%macro setSasAutos();
97        +   %local firstset last3 nb_dirs user_workspace_macros;
98        +   %let firstset = 1;
99        +   %if %symexist(runenvironment)=0 %then %local runenvironment;
100       +
101       +   %*- Determine if WORKSPACE macros should be used (in case available) -*;
102       +   %if %symexist(USE_SAS_WORKSPACE_MACROS)=0 %then %do;
103       +      %global USE_SAS_WORKSPACE_MACROS;
104       +   %end;
105       +   %if %sysfunc(sysexist(USE_SAS_WORKSPACE_MACROS)) %then %do;
106       +      %let USE_SAS_WORKSPACE_MACROS = %sysget(USE_SAS_WORKSPACE_MACROS);
107       +   %end;
108       +   %if %sysfunc(sysexist(USE_SAS_WORKSPACE_MACROS))=0 and %qsysfunc(upcase(%superq(USE_SAS_WORKSPACE_MACROS)), $1.)=Y
108      !+%then %do;
109       +      *- Set environment variable -*;
110       +      option set=USE_SAS_WORKSPACE_MACROS "Y";  /*- to unset environment variable use: option
110      !+set=USE_SAS_WORKSPACE_MACROS ""; -*/
111       +   %end;
112       +   %put &=USE_SAS_WORKSPACE_MACROS;
113       +   %put %str(Not)ice: Environment variable USE_SAS_WORKSPACE_MACROS is
113      !+%sysfunc(ifc(%sysfunc(sysexist(USE_SAS_WORKSPACE_MACROS)), DEFINED, NOT DEFINED)).;
114       +
115       +   /*in LSAF there are 3 default directories in sasautos and these need to be kept*/
116       +   %if &runenvironment=repository or &runenvironment=workspace %then %do;
117       +      data _null_;
118       +         length a b c dirs l3 $4000;  /*- jbodart - 2022-12-08 - increase l3 size to avoid truncations -*/
119       +         a= strip(getoption("sasautos"));
120       +         put a=;
121       +         len = length(a);
122       +         nobrack = substr(a,2,len-2);
123       +         b = tranwrd(nobrack,'"',"");
124       +         c = compbl(strip(tranwrd(b,"'","")));
125       +         e = countw(c," ");
126       +         call symputx("nb_dirs",strip(put(e,8.)));
127       +         do i = 1 to e;
128       +            last3 = (e-i<3);
129       +            dirs = scan(c,i," ");
130       +            output;
131       +            if last3 then l3 = strip(l3)||' "'||strip(dirs)||'"';
132       +            if e then call symputx ('last3',strip(l3));
                                                           The SAS System

133       +         end;
134       +      run;
135       +      %put nb sasautos dirs = &nb_dirs;
136       +      %put last3 = &last3;
137       +   %end;
138       +   %if ( %sysfunc(fileexist(&general.macros&sepchar._library&sepchar)) or %sysfunc(fileexist(&repevpath.macros&sepchar))
138      !+) %then %do;
139       +      %if %sysfunc(fileexist(&repevpath.macros&sepchar)) %then %do;
140       +
141       +         %let gmdfolder=%sysfunc(fileexist(&repevpath.macros&sepchar.global-macros));
142       +         %let gmufolder=%sysfunc(fileexist(&repevpath.macros&sepchar.global_macros));
143       +
144       +         %put &=gmdfolder;
145       +         %put &=gmufolder;
146       +
147       +         options dlcreatedir;
148       +         %if &gmdfolder=1 %then %do;
149       +            libname globmac ("&repevpath.macros&sepchar.global-macros");
150       +         %end;
151       +         %else %do;
152       +            libname globmac ("&repevpath.macros&sepchar.global_macros");
153       +         %end;
154       +      %end;
155       +
156       +      %*- 2022-12-07 - jbodart - Add user workspace macros to SASAUTOS for development purposes, if applicable -*;
157       +      %let user_workspace_macros = ;
158       +
159       +      %if &runenvironment=repository and %symexist(_SDDUSR_) %then %do;
160       +
161       +         %if ("&revent"="generic_adam" or "%scan(&repevpath, -1, /\)"="generic_adam")
162       +            and %sysfunc(prxmatch(!^/clinical/test/gadam-tests/!, %superq(relrepevpath)))
163       +            and %sysfunc(fileexist(/lsafshared/SASWorkspaces/&_SDDUSR_/general/biostat/gadam/_library/%str(*).sas))
164       +            and %qsysfunc(upcase(%superq(USE_SAS_WORKSPACE_MACROS)), $1.)=Y
165       +            %then %let user_workspace_macros = &user_workspace_macros
165      !+"/lsafshared/SASWorkspaces/&_SDDUSR_/general/biostat/gadam/_library";
166       +
167       +         %else %if ("&revent"="generic_sdtm" or "%scan(&repevpath, -1, /\)"="generic_sdtm")
168       +            and %sysfunc(prxmatch(!^/clinical/test/gsdtm-tests/!, %superq(relrepevpath)))
169       +            and %sysfunc(fileexist(/lsafshared/SASWorkspaces/&_SDDUSR_/general/biostat/gsdtm/_library/%str(*).sas))
170       +            and %qsysfunc(upcase(%superq(USE_SAS_WORKSPACE_MACROS)), $1.)=Y
171       +            %then %let user_workspace_macros = &user_workspace_macros
171      !+"/lsafshared/SASWorkspaces/&_SDDUSR_/general/biostat/gsdtm/_library";
172       +
173       +         %if (    "&revent"="generic_adam" or "%scan(&repevpath, -1, /\)"="generic_adam"
174       +               or "&revent"="generic_sdtm" or "%scan(&repevpath, -1, /\)"="generic_sdtm"
175       +               or %sysfunc(prxmatch(!^/general/biostat/jobs/(gadam|gsdtm)_\w+/dev(/|$)!, %superq(relrepevpath)))
176       +               )
177       +            and %sysfunc(fileexist(/lsafshared/SASWorkspaces/&_SDDUSR_/general/biostat/macros/_library/%str(*).sas))
178       +            and %qsysfunc(upcase(%superq(USE_SAS_WORKSPACE_MACROS)), $1.)=Y
179       +            %then %let user_workspace_macros = &user_workspace_macros
179      !+"/lsafshared/SASWorkspaces/&_SDDUSR_/general/biostat/macros/_library";
180       +
181       +         %if %length(%superq(user_workspace_macros)) %then %do;
182       +            %put %str(Not)ice: === Adding WORKSPACE paths to SASAUTOS for development purposes, please check macros
182      !+versions in your workspace: === ;
183       +            %put %str(   )&user_workspace_macros;
184       +            %put;
185       +         %end;
                                                           The SAS System

186       +
187       +         %put &=runenvironment &=_SDDUSR_ &=relrepevpath &=user_workspace_macros;
188       +
189       +      %end;
190       +
191       +      %*- Use autocall to compile any macro in Macros subfolder on demand -*;
192       +      options mautosource sasautos = (
193       +            %if %sysfunc(fileexist(&repevpath.macros&sepchar))                         %then "&repevpath.macros";
194       +                                                                                             &user_workspace_macros
195       +            %if "&revent"="generic_adam" or "%scan(&repevpath, -1, /\)"="generic_adam" %then
195      !+"&general.gadam&sepchar._library";
196       +            %if "&revent"="generic_sdtm" or "%scan(&repevpath, -1, /\)"="generic_sdtm" %then
196      !+"&general.gsdtm&sepchar._library";  /*- jbodart 2022-06-30 -*/
197       +            %if %sysfunc(fileexist(&repevpath.macros&sepchar.global-macros))           %then
197      !+"&repevpath.macros&sepchar.global-macros";
198       +            %if %sysfunc(fileexist(&repevpath.macros&sepchar.global_macros))           %then
198      !+"&repevpath.macros&sepchar.global_macros";
199       +            %if %sysfunc(fileexist(&general.macros&sepchar._library&sepchar))          %then
199      !+"&general.macros&sepchar._library" ;
200       +            %if &runenvironment=local or &runenvironment=batch or %length(%superq(runenvironment))=0
201       +                                                                                       %then sasautos;
202       +                                                                                       %else &last3;
203       +            ) MRECALL=YES;
204       +   %end;
205       +   %let sa = %sysfunc(getoption(sasautos));
206       +   %put sa=&sa;
207       +%mend setSasAutos;
NOTE: %INCLUDE (level 1) ending.
USE_SAS_WORKSPACE_MACROS=
Notice: Environment variable USE_SAS_WORKSPACE_MACROS is NOT DEFINED.
MPRINT(SETENV.SETENV02.SETSASAUTOS):   data _null_;
MPRINT(SETENV.SETENV02.SETSASAUTOS):   length a b c dirs l3 $4000;
MPRINT(SETENV.SETENV02.SETSASAUTOS):   a= strip(getoption("sasautos"));
MPRINT(SETENV.SETENV02.SETSASAUTOS):   put a=;
MPRINT(SETENV.SETENV02.SETSASAUTOS):   len = length(a);
MPRINT(SETENV.SETENV02.SETSASAUTOS):   nobrack = substr(a,2,len-2);
MPRINT(SETENV.SETENV02.SETSASAUTOS):   b = tranwrd(nobrack,'"',"");
MPRINT(SETENV.SETENV02.SETSASAUTOS):   c = compbl(strip(tranwrd(b,"'","")));
MPRINT(SETENV.SETENV02.SETSASAUTOS):   e = countw(c," ");
MPRINT(SETENV.SETENV02.SETSASAUTOS):   call symputx("nb_dirs",strip(put(e,8.)));
MPRINT(SETENV.SETENV02.SETSASAUTOS):   do i = 1 to e;
MPRINT(SETENV.SETENV02.SETSASAUTOS):   last3 = (e-i<3);
MPRINT(SETENV.SETENV02.SETSASAUTOS):   dirs = scan(c,i," ");
MPRINT(SETENV.SETENV02.SETSASAUTOS):   output;
MPRINT(SETENV.SETENV02.SETSASAUTOS):   if last3 then l3 = strip(l3)||' "'||strip(dirs)||'"';
MPRINT(SETENV.SETENV02.SETSASAUTOS):   if e then call symputx ('last3',strip(l3));
MPRINT(SETENV.SETENV02.SETSASAUTOS):   end;
MPRINT(SETENV.SETENV02.SETSASAUTOS):   run;

a=('/lsafshared/SASWorkspaces/.transient/dashboard2.job-4a37a855-ba33-4b52-9ced-c0df0b457280/general/biostat/jobs/dashboard/dev/macr
os/global_macros' "SASEnvironment/SASMacro" '!SASROOT/sasautos' "/sso/sfw/sas/940/SASFoundation/9.4/lsafapi/lsaf-sas-macro-2.6.1/sas
macros" "/lsafshared/SASWorkspaces/global_macros")
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds


nb sasautos dirs = 5
                                                           The SAS System

last3 = "!SASROOT/sasautos" "/sso/sfw/sas/940/SASFoundation/9.4/lsafapi/lsaf-sas-macro-2.6.1/sasmacros"
"/lsafshared/SASWorkspaces/global_macros"
GMDFOLDER=0
GMUFOLDER=1
MPRINT(SETENV.SETENV02.SETSASAUTOS):   options dlcreatedir;
MPRINT(SETENV.SETENV02.SETSASAUTOS):   libname globmac
("/lsafshared/SASWorkspaces/.transient/dashboard2.job-4a37a855-ba33-4b52-9ced-c0df0b457280/general/biostat/jobs/dashboard/dev/macros
/global_macros");
NOTE: Libref GLOBMAC was successfully assigned as follows:
      Levels:           1
      Engine(1):        V9
      Physical Name(1):
      /lsafshared/SASWorkspaces/.transient/dashboard2.job-4a37a855-ba33-4b52-9ced-c0df0b457280/general/biostat/jobs/dashboard/dev/ma
      cros/global_macros
RUNENVIRONMENT=repository _SDDUSR_=mbusselen RELREPEVPATH=/general/biostat/jobs/dashboard/dev/ USER_WORKSPACE_MACROS=
MPRINT(SETENV.SETENV02.SETSASAUTOS):   options mautosource sasautos = (
"/lsafshared/SASWorkspaces/.transient/dashboard2.job-4a37a855-ba33-4b52-9ced-c0df0b457280/general/biostat/jobs/dashboard/dev/macros"

"/lsafshared/SASWorkspaces/.transient/dashboard2.job-4a37a855-ba33-4b52-9ced-c0df0b457280/general/biostat/jobs/dashboard/dev/macros/
global_macros"
"/lsafshared/SASWorkspaces/.transient/dashboard2.job-4a37a855-ba33-4b52-9ced-c0df0b457280/general/biostat/macros/_library"
"!SASROOT/sasautos" "/sso/sfw/sas/940/SASFoundation/9.4/lsafapi/lsaf-sas-macro-2.6.1/sasmacros"
"/lsafshared/SASWorkspaces/global_macros" ) MRECALL=YES;
sa=("/lsafshared/SASWorkspaces/.transient/dashboard2.job-4a37a855-ba33-4b52-9ced-c0df0b457280/general/biostat/jobs/dashboard/dev/mac
ros"
"/lsafshared/SASWorkspaces/.transient/dashboard2.job-4a37a855-ba33-4b52-9ced-c0df0b457280/general/biostat/jobs/dashboard/dev/macros/
global_macros"
"/lsafshared/SASWorkspaces/.transient/dashboard2.job-4a37a855-ba33-4b52-9ced-c0df0b457280/general/biostat/macros/_library"
"!SASROOT/sasautos" "/sso/sfw/sas/940/SASFoundation/9.4/lsafapi/lsaf-sas-macro-2.6.1/sasmacros"
"/lsafshared/SASWorkspaces/global_macros")
MPRINT(SETENV.SETENV02):  ;
MPRINT(SETENV.SETENV02):  ;
MPRINT(SETENV.SETENV02):   ;
MAUTOCOMPLOC:  The autocall macro GET_JOB_PROG_INFO is compiling using the autocall source file
            /lsafshared/SASWorkspaces/.transient/dashboard2.job-4a37a855-ba33-4b52-9ced-c0df0b457280/general/biostat/jobs/dashboard/
            dev/macros/get_job_prog_info.sas.
MPRINT(SETENV.SETENV02.GET_JOB_PROG_INFO):   options nomprint;

NOTE: The infile
      "/lsafshared/SASWorkspaces/.transient/dashboard2.job-4a37a855-ba33-4b52-9ced-c0df0b457280/general/biostat/jobs/dashboard/dev/j
      obs/dashboard2.job" is:

      Filename=/lsafshared/SASWorkspaces/.transient/dashboard2.job-4a37a855-ba33-4b52-9ced-c0df0b457280/general/biostat/jobs/dashboa
      rd/dev/jobs/dashboard2.job,
      Owner Name=webtrust,Group Name=webtrust,
      Access Permission=-rw-rw-rw-,
      Last Modified=17May2022:12:33:26,
      File Size (bytes)=1116

progversion=*
NOTE: 24 records were read from the infile
      "/lsafshared/SASWorkspaces/.transient/dashboard2.job-4a37a855-ba33-4b52-9ced-c0df0b457280/general/biostat/jobs/dashboard/dev/j
      obs/dashboard2.job".
      The minimum record length was 0.
      The maximum record length was 118.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
                                                           The SAS System



MAUTOCOMPLOC:  The autocall macro LSAF_GET_VERSION is compiling using the autocall source file
            /lsafshared/SASWorkspaces/.transient/dashboard2.job-4a37a855-ba33-4b52-9ced-c0df0b457280/general/biostat/macros/_library
            /lsaf_get_version.sas.
MAUTOCOMPLOC:  The autocall macro LOCAL_LSAF is compiling using the autocall source file
            /lsafshared/SASWorkspaces/.transient/dashboard2.job-4a37a855-ba33-4b52-9ced-c0df0b457280/general/biostat/macros/_library
            /local_lsaf.sas.
MAUTOCOMPLOC:  The autocall macro LSAF_GETPROPERTIES is compiling using the autocall source file
            /sso/sfw/sas/940/SASFoundation/9.4/lsafapi/lsaf-sas-macro-2.6.1/sasmacros/lsaf_getproperties.sas.
MAUTOCOMPLOC:  The autocall macro LSAF_GETPRODUCTNAME is compiling using the autocall source file
            /sso/sfw/sas/940/SASFoundation/9.4/lsafapi/lsaf-sas-macro-2.6.1/sasmacros/lsaf_getproductname.sas.


NOTE: SAS Life Science Analytics Framework Macro: *
List of properties were returned for /general/biostat/jobs/dashboard/dev/programs/dashboard2.sas
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_getproperties
NOTE: SAS Life Science Analytics Framework Macro: *  21  records written to data set work.lsafGetProperties
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: The data set WORK.LSAFGETPROPERTIES has 21 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           1.26 seconds
      cpu time            0.02 seconds



NOTE: There were 1 observations read from the data set WORK.LSAFGETPROPERTIES.
      WHERE name='version';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds


progversion = 1.5
(SETENV): Done.
208
209        %let dbstartdatetime = %sysfunc(datetime());
210        %let defined_min_days=30;
211
212        libname jobout "&_sasws_/general/biostat/jobs/dashboard/dev/output";
NOTE: Libref JOBOUT was successfully assigned as follows:
      Engine:        V9
      Physical Name:
      /lsafshared/SASWorkspaces/.transient/dashboard2.job-4a37a855-ba33-4b52-9ced-c0df0b457280/general/biostat/jobs/dashboard/dev/ou
      tput
213        %let dbg=Y;
214
215        %getprojmeta;
MAUTOCOMPLOC:  The autocall macro GETPROJMETA is compiling using the autocall source file
            /lsafshared/SASWorkspaces/.transient/dashboard2.job-4a37a855-ba33-4b52-9ced-c0df0b457280/general/biostat/jobs/dashboard/
            dev/macros/getprojmeta.sas.
METAEXISTS=yes
NOTE: Libref PRJMETA refers to the same physical library as PROJMETA.
NOTE: Libref PRJMETA was successfully assigned as follows:
      Engine:        V9
      Physical Name:
      /lsafshared/SASWorkspaces/.transient/dashboard2.job-4a37a855-ba33-4b52-9ced-c0df0b457280/general/biostat/metadata/projects
                                                           The SAS System

NOTE: There were 383 observations read from the data set PRJMETA.META.
NOTE: The data set WORK.META has 383 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds


216
217        proc sort data=meta;
218             by Reporting_Event_Path;
219        run;

NOTE: There were 383 observations read from the data set WORK.META.
NOTE: The data set WORK.META has 383 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds


220
221        data development final gadam;
222             set meta;
223             if status="gadam" then output gadam;
224             else if status="final" then output final;
225             else if status="development" then output development;
226             else put "W" "ARNING: unexpected status value in /general/biostat/metadata/projects/meta.sas7bdat " status=
226      ! Reporting_Event_Path ;
227        run;

NOTE: There were 383 observations read from the data set WORK.META.
NOTE: The data set WORK.DEVELOPMENT has 47 observations and 5 variables.
NOTE: The data set WORK.FINAL has 222 observations and 5 variables.
NOTE: The data set WORK.GADAM has 114 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds


228
229        data metaplus;
230             set meta;
231        run;

NOTE: There were 383 observations read from the data set WORK.META.
NOTE: The data set WORK.METAPLUS has 383 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds


232
233        %macro clock (msg);
234        %global hours minutes seconds;
235        %let dbfinishdatetime = %sysfunc(datetime());
236        %let startdate=%sysfunc(datepart(&dbstartdatetime),weekdatx.);
237        %let starttime=%sysfunc(timepart(&dbstartdatetime),tod11.);
238        %let finishdate=%sysfunc(datepart(&dbfinishdatetime),weekdatx.);
239        %let finishtime=%sysfunc(timepart(&dbfinishdatetime),tod11.);
                                                           The SAS System

240
241        %let runtime        = %sysevalf(&dbfinishdatetime - &dbstartdatetime); * seconds ;
242        %let days           = %sysfunc(int(&runtime/(24*60*60))); * convert seconds to days ;
243        %let time           = %sysevalf(&runtime - &days*24*60*60); * subtract days from run time ;
244        %let hours          = %sysfunc(int(&time/(60*60)));
245        %let minutes        = %sysfunc(int(&time/60-&hours*60));
246        %let seconds        = %sysevalf(&time - &hours*(60*60) - &minutes*(60));
247
248        %put COMPUTATION TIME for &msg : &days days &hours hours &minutes minutes %sysfunc(putn(&seconds,4.2)) seconds;
249        %put =================================================================================================================;
250        %mend clock;
251
252        /* 1) Refresh dashboards of active reporting events */
253        %macro launchDashboard;
254             %let nbre=0;
255             data _null_;
256                  set development end=last;
257                  call symputx("re"||strip(put(_n_,8.)),strip(Reporting_Event_Path));
258                  if last then call symputx("nbre",strip(put(_n_,8.)));
259             run;
260             %put &=nbre;
261             /*     %let nbre=5;*/
262             %do di = 1 %to &nbre;
263                  options nomprint;
264                  %lsaf_exists(lsaf_path=&&re&di);
265                  options mprint;
266                  %if &_lsafExists_=1 %then %do;
267                       data jobparam;
268                            length name type fileversion  $20 value $100 includeSubFolders 8;
269                            fileversion = "";
270                            includeSubFolders = 1;
271                            name = "refolder";
272                            type = "FOLDER";
273                            value = "&&re&di";
274                            output;
275                       run;
276                       options nomprint;
277                       %lsaf_submitjob(lsaf_path=/general/biostat/jobs/dashboard/dev/jobs/pp.job, sas_dsname=jobparam);
278                       options mprint;
279                       %let jobid&di = &_lsafJobSubmissionId_;
280                        options nomprint;
281                       %lsaf_getsubmissionstatus(lsaf_jobsubmission_id=&_lsafJobSubmissionId_);
282                       %put &&re&di -> &_lsafJobSubmissionId_ -> &_lsafJobSubmissionStatus_ ;
283                       options mprint;
284                       /*giv each job some time*/
285                       data _null_;
286                            call sleep(1000,.01); * 10 seconds;
287                       run;
288                  %end;
289                  %else %do;
290                       %let jobid&di = 0;
291                  %end;
292             %end;
293             %do ck = 1 %to 4;
294                  data _null_;
295                       call sleep(2000,.01); * 20 seconds;
296                  run;
297                  %do z = 1 %to &nbre;
                                                           The SAS System

298                       options nomprint;
299                       %lsaf_getsubmissionstatus(lsaf_jobsubmission_id=&&jobid&z);
300                       %put z=&z -> &&re&z -> &&jobid&z -> &_lsafJobSubmissionStatus_ ;
301                       options mprint;
302                  %end;
303             %end;
304        %mend launchDashboard;
305
306        /*%macro bu;*/
307
308        %launchDashboard;

NOTE: There were 47 observations read from the data set WORK.DEVELOPMENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds


NBRE=47
MAUTOCOMPLOC:  The autocall macro LSAF_EXISTS is compiling using the autocall source file
            /sso/sfw/sas/940/SASFoundation/9.4/lsafapi/lsaf-sas-macro-2.6.1/sasmacros/lsaf_exists.sas.


NOTE: SAS Life Science Analytics Framework Macro: *
The item exists: /clinical/argx-113/bp/argx-113-2009/biostat/staging/patient_profiles
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_exists
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafExists_= 1
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds


MPRINT(LAUNCHDASHBOARD):   data jobparam;
MPRINT(LAUNCHDASHBOARD):   length name type fileversion $20 value $100 includeSubFolders 8;
MPRINT(LAUNCHDASHBOARD):   fileversion = "";
MPRINT(LAUNCHDASHBOARD):   includeSubFolders = 1;
MPRINT(LAUNCHDASHBOARD):   name = "refolder";
MPRINT(LAUNCHDASHBOARD):   type = "FOLDER";
MPRINT(LAUNCHDASHBOARD):   value = "/clinical/argx-113/bp/argx-113-2009/biostat/staging/patient_profiles";
MPRINT(LAUNCHDASHBOARD):   output;
MPRINT(LAUNCHDASHBOARD):   run;

NOTE: The data set WORK.JOBPARAM has 1 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds


MPRINT(LAUNCHDASHBOARD):   options nomprint;
MAUTOCOMPLOC:  The autocall macro LSAF_SUBMITJOB is compiling using the autocall source file
            /sso/sfw/sas/940/SASFoundation/9.4/lsafapi/lsaf-sas-macro-2.6.1/sasmacros/lsaf_submitjob.sas.
MAUTOCOMPLOC:  The autocall macro CMPRES is compiling using the autocall source file
            /sso/sfw/sas/940/SASFoundation/9.4/sasautos/cmpres.sas.
MAUTOCOMPLOC:  The autocall macro LEFT is compiling using the autocall source file
            /sso/sfw/sas/940/SASFoundation/9.4/sasautos/left.sas.
MAUTOCOMPLOC:  The autocall macro QTRIM is compiling using the autocall source file
                                                           The SAS System

            /sso/sfw/sas/940/SASFoundation/9.4/sasautos/qtrim.sas.
MAUTOCOMPLOC:  The autocall macro VERIFY is compiling using the autocall source file
            /sso/sfw/sas/940/SASFoundation/9.4/sasautos/verify.sas.
MAUTOCOMPLOC:  The autocall macro LSAF_VALIDATE_PARAMETERS_DATASET is compiling using the autocall source file
            /sso/sfw/sas/940/SASFoundation/9.4/lsafapi/lsaf-sas-macro-2.6.1/sasmacros/lsaf_validate_parameters_dataset.sas.
NOTE: lsaf_submitjob: Validating dataset jobparam
MAUTOCOMPLOC:  The autocall macro LSAF_VALIDATE_SASDATASET is compiling using the autocall source file
            /sso/sfw/sas/940/SASFoundation/9.4/lsafapi/lsaf-sas-macro-2.6.1/sasmacros/lsaf_validate_sasdataset.sas.
MAUTOCOMPLOC:  The autocall macro LSAF_VALIDATE_SASDATASET_NAME is compiling using the autocall source file
            /sso/sfw/sas/940/SASFoundation/9.4/lsafapi/lsaf-sas-macro-2.6.1/sasmacros/lsaf_validate_sasdataset_name.sas.
MAUTOCOMPLOC:  The autocall macro QCMPRES is compiling using the autocall source file
            /sso/sfw/sas/940/SASFoundation/9.4/sasautos/qcmpres.sas.
MAUTOCOMPLOC:  The autocall macro QLEFT is compiling using the autocall source file
            /sso/sfw/sas/940/SASFoundation/9.4/sasautos/qleft.sas.


NOTE: SAS Life Science Analytics Framework Macro: *  Submitted job /general/biostat/jobs/dashboard/dev/jobs/pp.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_submitjob
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: SAS Life Science Analytics Framework Macro: * sas_dsname = jobparam
NOTE: SAS Life Science Analytics Framework Macro: * _lsafJobSubmissionId_= 1887e400-376e-4015-94a1-3459480b5709
NOTE: There were 1 observations read from the data set WORK.JOBPARAM.
NOTE: DATA statement used (Total process time):
      real time           1.35 seconds
      cpu time            0.00 seconds


MPRINT(LAUNCHDASHBOARD):   options nomprint;
MAUTOCOMPLOC:  The autocall macro LSAF_GETSUBMISSIONSTATUS is compiling using the autocall source file
            /sso/sfw/sas/940/SASFoundation/9.4/lsafapi/lsaf-sas-macro-2.6.1/sasmacros/lsaf_getsubmissionstatus.sas.
/clinical/argx-113/bp/argx-113-2009/biostat/staging/patient_profiles -> 1887e400-376e-4015-94a1-3459480b5709 -> STARTED
MPRINT(LAUNCHDASHBOARD):   data _null_;
MPRINT(LAUNCHDASHBOARD):   call sleep(1000,.01);
MPRINT(LAUNCHDASHBOARD):   * 10 seconds;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/figures_ba
MPRINT(LAUNCHDASHBOARD):   data jobparam;
MPRINT(LAUNCHDASHBOARD):   length name type fileversion $20 value $100 includeSubFolders 8;
MPRINT(LAUNCHDASHBOARD):   fileversion = "";
MPRINT(LAUNCHDASHBOARD):   includeSubFolders = 1;
MPRINT(LAUNCHDASHBOARD):   name = "refolder";
MPRINT(LAUNCHDASHBOARD):   type = "FOLDER";
MPRINT(LAUNCHDASHBOARD):   value = "/clinical/argx-113/cidp/argx-113-1802/biostat/staging/figures_ba";
MPRINT(LAUNCHDASHBOARD):   output;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;


NOTE: SAS Life Science Analytics Framework Macro: *  Submitted job /general/biostat/jobs/dashboard/dev/jobs/pp.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_submitjob
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: SAS Life Science Analytics Framework Macro: * sas_dsname = jobparam
NOTE: SAS Life Science Analytics Framework Macro: * _lsafJobSubmissionId_= 3c7587db-4782-4ecf-a878-aa6801473830
                                                           The SAS System

NOTE: There were 1 observations read from the data set WORK.JOBPARAM.
NOTE: DATA statement used (Total process time):
      real time           1.34 seconds
      cpu time            0.01 seconds


MPRINT(LAUNCHDASHBOARD):   options nomprint;
/clinical/argx-113/cidp/argx-113-1802/biostat/staging/figures_ba -> 3c7587db-4782-4ecf-a878-aa6801473830 -> STARTED
MPRINT(LAUNCHDASHBOARD):   data _null_;
MPRINT(LAUNCHDASHBOARD):   call sleep(1000,.01);
MPRINT(LAUNCHDASHBOARD):   * 10 seconds;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/patient-profiles
MPRINT(LAUNCHDASHBOARD):   data jobparam;
MPRINT(LAUNCHDASHBOARD):   length name type fileversion $20 value $100 includeSubFolders 8;
MPRINT(LAUNCHDASHBOARD):   fileversion = "";
MPRINT(LAUNCHDASHBOARD):   includeSubFolders = 1;
MPRINT(LAUNCHDASHBOARD):   name = "refolder";
MPRINT(LAUNCHDASHBOARD):   type = "FOLDER";
MPRINT(LAUNCHDASHBOARD):   value = "/clinical/argx-113/cidp/argx-113-1802/biostat/staging/patient-profiles";
MPRINT(LAUNCHDASHBOARD):   output;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;


NOTE: SAS Life Science Analytics Framework Macro: *  Submitted job /general/biostat/jobs/dashboard/dev/jobs/pp.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_submitjob
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: SAS Life Science Analytics Framework Macro: * sas_dsname = jobparam
NOTE: SAS Life Science Analytics Framework Macro: * _lsafJobSubmissionId_= 06fc2c87-ec1a-4d8c-aa7e-1abbc798214d
NOTE: There were 1 observations read from the data set WORK.JOBPARAM.
NOTE: DATA statement used (Total process time):
      real time           1.36 seconds
      cpu time            0.01 seconds


MPRINT(LAUNCHDASHBOARD):   options nomprint;
/clinical/argx-113/cidp/argx-113-1802/biostat/staging/patient-profiles -> 06fc2c87-ec1a-4d8c-aa7e-1abbc798214d -> STARTED
MPRINT(LAUNCHDASHBOARD):   data _null_;
MPRINT(LAUNCHDASHBOARD):   call sleep(1000,.01);
MPRINT(LAUNCHDASHBOARD):   * 10 seconds;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun1/qc_adam
MPRINT(LAUNCHDASHBOARD):   data jobparam;
MPRINT(LAUNCHDASHBOARD):   length name type fileversion $20 value $100 includeSubFolders 8;
MPRINT(LAUNCHDASHBOARD):   fileversion = "";
MPRINT(LAUNCHDASHBOARD):   includeSubFolders = 1;
MPRINT(LAUNCHDASHBOARD):   name = "refolder";
MPRINT(LAUNCHDASHBOARD):   type = "FOLDER";
MPRINT(LAUNCHDASHBOARD):   value = "/clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun1/qc_adam";
MPRINT(LAUNCHDASHBOARD):   output;
                                                           The SAS System

MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;


NOTE: SAS Life Science Analytics Framework Macro: *  Submitted job /general/biostat/jobs/dashboard/dev/jobs/pp.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_submitjob
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: SAS Life Science Analytics Framework Macro: * sas_dsname = jobparam
NOTE: SAS Life Science Analytics Framework Macro: * _lsafJobSubmissionId_= 6f863665-58c9-4aa0-820c-393ec730b6af
NOTE: There were 1 observations read from the data set WORK.JOBPARAM.
NOTE: DATA statement used (Total process time):
      real time           1.36 seconds
      cpu time            0.00 seconds


MPRINT(LAUNCHDASHBOARD):   options nomprint;
/clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun1/qc_adam -> 6f863665-58c9-4aa0-820c-393ec730b6af -> STARTED
MPRINT(LAUNCHDASHBOARD):   data _null_;
MPRINT(LAUNCHDASHBOARD):   call sleep(1000,.01);
MPRINT(LAUNCHDASHBOARD):   * 10 seconds;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/figures_ba
MPRINT(LAUNCHDASHBOARD):   data jobparam;
MPRINT(LAUNCHDASHBOARD):   length name type fileversion $20 value $100 includeSubFolders 8;
MPRINT(LAUNCHDASHBOARD):   fileversion = "";
MPRINT(LAUNCHDASHBOARD):   includeSubFolders = 1;
MPRINT(LAUNCHDASHBOARD):   name = "refolder";
MPRINT(LAUNCHDASHBOARD):   type = "FOLDER";
MPRINT(LAUNCHDASHBOARD):   value = "/clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/figures_ba";
MPRINT(LAUNCHDASHBOARD):   output;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;


NOTE: SAS Life Science Analytics Framework Macro: *  Submitted job /general/biostat/jobs/dashboard/dev/jobs/pp.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_submitjob
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: SAS Life Science Analytics Framework Macro: * sas_dsname = jobparam
NOTE: SAS Life Science Analytics Framework Macro: * _lsafJobSubmissionId_= 5d26b5af-29c7-4c88-a16c-4c34acc09531
NOTE: There were 1 observations read from the data set WORK.JOBPARAM.
NOTE: DATA statement used (Total process time):
      real time           1.34 seconds
      cpu time            0.00 seconds


MPRINT(LAUNCHDASHBOARD):   options nomprint;
/clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/figures_ba -> 5d26b5af-29c7-4c88-a16c-4c34acc09531 -> STARTED
MPRINT(LAUNCHDASHBOARD):   data _null_;
MPRINT(LAUNCHDASHBOARD):   call sleep(1000,.01);
MPRINT(LAUNCHDASHBOARD):   * 10 seconds;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;
                                                           The SAS System

The item exists: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_adam
MPRINT(LAUNCHDASHBOARD):   data jobparam;
MPRINT(LAUNCHDASHBOARD):   length name type fileversion $20 value $100 includeSubFolders 8;
MPRINT(LAUNCHDASHBOARD):   fileversion = "";
MPRINT(LAUNCHDASHBOARD):   includeSubFolders = 1;
MPRINT(LAUNCHDASHBOARD):   name = "refolder";
MPRINT(LAUNCHDASHBOARD):   type = "FOLDER";
MPRINT(LAUNCHDASHBOARD):   value = "/clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_adam";
MPRINT(LAUNCHDASHBOARD):   output;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;


NOTE: SAS Life Science Analytics Framework Macro: *  Submitted job /general/biostat/jobs/dashboard/dev/jobs/pp.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_submitjob
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: SAS Life Science Analytics Framework Macro: * sas_dsname = jobparam
NOTE: SAS Life Science Analytics Framework Macro: * _lsafJobSubmissionId_= 9b779a85-5b6d-4ac8-afac-342335fa95fc
NOTE: There were 1 observations read from the data set WORK.JOBPARAM.
NOTE: DATA statement used (Total process time):
      real time           1.32 seconds
      cpu time            0.00 seconds


MPRINT(LAUNCHDASHBOARD):   options nomprint;
/clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_adam -> 9b779a85-5b6d-4ac8-afac-342335fa95fc -> STARTED
MPRINT(LAUNCHDASHBOARD):   data _null_;
MPRINT(LAUNCHDASHBOARD):   call sleep(1000,.01);
MPRINT(LAUNCHDASHBOARD):   * 10 seconds;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_tlf
MPRINT(LAUNCHDASHBOARD):   data jobparam;
MPRINT(LAUNCHDASHBOARD):   length name type fileversion $20 value $100 includeSubFolders 8;
MPRINT(LAUNCHDASHBOARD):   fileversion = "";
MPRINT(LAUNCHDASHBOARD):   includeSubFolders = 1;
MPRINT(LAUNCHDASHBOARD):   name = "refolder";
MPRINT(LAUNCHDASHBOARD):   type = "FOLDER";
MPRINT(LAUNCHDASHBOARD):   value = "/clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_tlf";
MPRINT(LAUNCHDASHBOARD):   output;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;


NOTE: SAS Life Science Analytics Framework Macro: *  Submitted job /general/biostat/jobs/dashboard/dev/jobs/pp.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_submitjob
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: SAS Life Science Analytics Framework Macro: * sas_dsname = jobparam
NOTE: SAS Life Science Analytics Framework Macro: * _lsafJobSubmissionId_= d9c63c8c-8139-476a-a4eb-d1f3db9051a3
NOTE: There were 1 observations read from the data set WORK.JOBPARAM.
NOTE: DATA statement used (Total process time):
      real time           1.34 seconds
      cpu time            0.01 seconds
                                                           The SAS System



MPRINT(LAUNCHDASHBOARD):   options nomprint;
/clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_tlf -> d9c63c8c-8139-476a-a4eb-d1f3db9051a3 -> STARTED
MPRINT(LAUNCHDASHBOARD):   data _null_;
MPRINT(LAUNCHDASHBOARD):   call sleep(1000,.01);
MPRINT(LAUNCHDASHBOARD):   * 10 seconds;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;
MPRINT(LAUNCHDASHBOARD):   data jobparam;
MPRINT(LAUNCHDASHBOARD):   length name type fileversion $20 value $100 includeSubFolders 8;
MPRINT(LAUNCHDASHBOARD):   fileversion = "";
MPRINT(LAUNCHDASHBOARD):   includeSubFolders = 1;
MPRINT(LAUNCHDASHBOARD):   name = "refolder";
MPRINT(LAUNCHDASHBOARD):   type = "FOLDER";
MPRINT(LAUNCHDASHBOARD):   value = "/clinical/argx-113/cidp/argx-113-1902/biostat/staging/figures";
MPRINT(LAUNCHDASHBOARD):   output;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;


NOTE: SAS Life Science Analytics Framework Macro: *  Submitted job /general/biostat/jobs/dashboard/dev/jobs/pp.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_submitjob
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: SAS Life Science Analytics Framework Macro: * sas_dsname = jobparam
NOTE: SAS Life Science Analytics Framework Macro: * _lsafJobSubmissionId_= 911f2a07-ff63-43a1-9606-841628701d01
NOTE: There were 1 observations read from the data set WORK.JOBPARAM.
NOTE: DATA statement used (Total process time):
      real time           1.32 seconds
      cpu time            0.01 seconds


MPRINT(LAUNCHDASHBOARD):   options nomprint;
/clinical/argx-113/cidp/argx-113-1902/biostat/staging/figures -> 911f2a07-ff63-43a1-9606-841628701d01 -> STARTED
MPRINT(LAUNCHDASHBOARD):   data _null_;
MPRINT(LAUNCHDASHBOARD):   call sleep(1000,.01);
MPRINT(LAUNCHDASHBOARD):   * 10 seconds;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_adam
MPRINT(LAUNCHDASHBOARD):   data jobparam;
MPRINT(LAUNCHDASHBOARD):   length name type fileversion $20 value $100 includeSubFolders 8;
MPRINT(LAUNCHDASHBOARD):   fileversion = "";
MPRINT(LAUNCHDASHBOARD):   includeSubFolders = 1;
MPRINT(LAUNCHDASHBOARD):   name = "refolder";
MPRINT(LAUNCHDASHBOARD):   type = "FOLDER";
MPRINT(LAUNCHDASHBOARD):   value = "/clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_adam";
MPRINT(LAUNCHDASHBOARD):   output;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;


NOTE: SAS Life Science Analytics Framework Macro: *  Submitted job /general/biostat/jobs/dashboard/dev/jobs/pp.job
                                                           The SAS System

NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_submitjob
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: SAS Life Science Analytics Framework Macro: * sas_dsname = jobparam
NOTE: SAS Life Science Analytics Framework Macro: * _lsafJobSubmissionId_= b46758fe-2c7c-404c-9596-dbb780e09fa9
NOTE: There were 1 observations read from the data set WORK.JOBPARAM.
NOTE: DATA statement used (Total process time):
      real time           1.35 seconds
      cpu time            0.00 seconds


MPRINT(LAUNCHDASHBOARD):   options nomprint;
/clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_adam -> b46758fe-2c7c-404c-9596-dbb780e09fa9 -> STARTED
MPRINT(LAUNCHDASHBOARD):   data _null_;
MPRINT(LAUNCHDASHBOARD):   call sleep(1000,.01);
MPRINT(LAUNCHDASHBOARD):   * 10 seconds;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_tlf
MPRINT(LAUNCHDASHBOARD):   data jobparam;
MPRINT(LAUNCHDASHBOARD):   length name type fileversion $20 value $100 includeSubFolders 8;
MPRINT(LAUNCHDASHBOARD):   fileversion = "";
MPRINT(LAUNCHDASHBOARD):   includeSubFolders = 1;
MPRINT(LAUNCHDASHBOARD):   name = "refolder";
MPRINT(LAUNCHDASHBOARD):   type = "FOLDER";
MPRINT(LAUNCHDASHBOARD):   value = "/clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_tlf";
MPRINT(LAUNCHDASHBOARD):   output;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;


NOTE: SAS Life Science Analytics Framework Macro: *  Submitted job /general/biostat/jobs/dashboard/dev/jobs/pp.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_submitjob
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: SAS Life Science Analytics Framework Macro: * sas_dsname = jobparam
NOTE: SAS Life Science Analytics Framework Macro: * _lsafJobSubmissionId_= 73ad341f-536a-4069-80f3-c5d404559ac0
NOTE: There were 1 observations read from the data set WORK.JOBPARAM.
NOTE: DATA statement used (Total process time):
      real time           1.35 seconds
      cpu time            0.01 seconds


MPRINT(LAUNCHDASHBOARD):   options nomprint;
/clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_tlf -> 73ad341f-536a-4069-80f3-c5d404559ac0 -> STARTED
MPRINT(LAUNCHDASHBOARD):   data _null_;
MPRINT(LAUNCHDASHBOARD):   call sleep(1000,.01);
MPRINT(LAUNCHDASHBOARD):   * 10 seconds;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20231206/qc_adam
MPRINT(LAUNCHDASHBOARD):   data jobparam;
MPRINT(LAUNCHDASHBOARD):   length name type fileversion $20 value $100 includeSubFolders 8;
MPRINT(LAUNCHDASHBOARD):   fileversion = "";
                                                           The SAS System

MPRINT(LAUNCHDASHBOARD):   includeSubFolders = 1;
MPRINT(LAUNCHDASHBOARD):   name = "refolder";
MPRINT(LAUNCHDASHBOARD):   type = "FOLDER";
MPRINT(LAUNCHDASHBOARD):   value = "/clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20231206/qc_adam";
MPRINT(LAUNCHDASHBOARD):   output;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;


NOTE: SAS Life Science Analytics Framework Macro: *  Submitted job /general/biostat/jobs/dashboard/dev/jobs/pp.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_submitjob
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: SAS Life Science Analytics Framework Macro: * sas_dsname = jobparam
NOTE: SAS Life Science Analytics Framework Macro: * _lsafJobSubmissionId_= 887903a5-ddcf-4a7b-978e-31758211e8af
NOTE: There were 1 observations read from the data set WORK.JOBPARAM.
NOTE: DATA statement used (Total process time):
      real time           1.36 seconds
      cpu time            0.01 seconds


MPRINT(LAUNCHDASHBOARD):   options nomprint;
/clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20231206/qc_adam -> 887903a5-ddcf-4a7b-978e-31758211e8af -> STARTED
MPRINT(LAUNCHDASHBOARD):   data _null_;
MPRINT(LAUNCHDASHBOARD):   call sleep(1000,.01);
MPRINT(LAUNCHDASHBOARD):   * 10 seconds;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20231206/qc_tlf
MPRINT(LAUNCHDASHBOARD):   data jobparam;
MPRINT(LAUNCHDASHBOARD):   length name type fileversion $20 value $100 includeSubFolders 8;
MPRINT(LAUNCHDASHBOARD):   fileversion = "";
MPRINT(LAUNCHDASHBOARD):   includeSubFolders = 1;
MPRINT(LAUNCHDASHBOARD):   name = "refolder";
MPRINT(LAUNCHDASHBOARD):   type = "FOLDER";
MPRINT(LAUNCHDASHBOARD):   value = "/clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20231206/qc_tlf";
MPRINT(LAUNCHDASHBOARD):   output;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;


NOTE: SAS Life Science Analytics Framework Macro: *  Submitted job /general/biostat/jobs/dashboard/dev/jobs/pp.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_submitjob
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: SAS Life Science Analytics Framework Macro: * sas_dsname = jobparam
NOTE: SAS Life Science Analytics Framework Macro: * _lsafJobSubmissionId_= a5bf8709-b0a6-45b5-b8da-ef2413adee5e
NOTE: There were 1 observations read from the data set WORK.JOBPARAM.
NOTE: DATA statement used (Total process time):
      real time           1.33 seconds
      cpu time            0.01 seconds


MPRINT(LAUNCHDASHBOARD):   options nomprint;
/clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20231206/qc_tlf -> a5bf8709-b0a6-45b5-b8da-ef2413adee5e -> STARTED
                                                           The SAS System

MPRINT(LAUNCHDASHBOARD):   data _null_;
MPRINT(LAUNCHDASHBOARD):   call sleep(1000,.01);
MPRINT(LAUNCHDASHBOARD):   * 10 seconds;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-1902/biostat/staging/patient-profiles
MPRINT(LAUNCHDASHBOARD):   data jobparam;
MPRINT(LAUNCHDASHBOARD):   length name type fileversion $20 value $100 includeSubFolders 8;
MPRINT(LAUNCHDASHBOARD):   fileversion = "";
MPRINT(LAUNCHDASHBOARD):   includeSubFolders = 1;
MPRINT(LAUNCHDASHBOARD):   name = "refolder";
MPRINT(LAUNCHDASHBOARD):   type = "FOLDER";
MPRINT(LAUNCHDASHBOARD):   value = "/clinical/argx-113/cidp/argx-113-1902/biostat/staging/patient-profiles";
MPRINT(LAUNCHDASHBOARD):   output;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;


NOTE: SAS Life Science Analytics Framework Macro: *  Submitted job /general/biostat/jobs/dashboard/dev/jobs/pp.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_submitjob
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: SAS Life Science Analytics Framework Macro: * sas_dsname = jobparam
NOTE: SAS Life Science Analytics Framework Macro: * _lsafJobSubmissionId_= 783f4cfc-0ba4-456f-b215-2590208573e2
NOTE: There were 1 observations read from the data set WORK.JOBPARAM.
NOTE: DATA statement used (Total process time):
      real time           1.52 seconds
      cpu time            0.01 seconds


MPRINT(LAUNCHDASHBOARD):   options nomprint;
/clinical/argx-113/cidp/argx-113-1902/biostat/staging/patient-profiles -> 783f4cfc-0ba4-456f-b215-2590208573e2 -> STARTED
MPRINT(LAUNCHDASHBOARD):   data _null_;
MPRINT(LAUNCHDASHBOARD):   call sleep(1000,.01);
MPRINT(LAUNCHDASHBOARD):   * 10 seconds;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-1902/biostat/staging/testrun1/figures
MPRINT(LAUNCHDASHBOARD):   data jobparam;
MPRINT(LAUNCHDASHBOARD):   length name type fileversion $20 value $100 includeSubFolders 8;
MPRINT(LAUNCHDASHBOARD):   fileversion = "";
MPRINT(LAUNCHDASHBOARD):   includeSubFolders = 1;
MPRINT(LAUNCHDASHBOARD):   name = "refolder";
MPRINT(LAUNCHDASHBOARD):   type = "FOLDER";
MPRINT(LAUNCHDASHBOARD):   value = "/clinical/argx-113/cidp/argx-113-1902/biostat/staging/testrun1/figures";
MPRINT(LAUNCHDASHBOARD):   output;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;


NOTE: SAS Life Science Analytics Framework Macro: *  Submitted job /general/biostat/jobs/dashboard/dev/jobs/pp.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_submitjob
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: SAS Life Science Analytics Framework Macro: * sas_dsname = jobparam
                                                           The SAS System

NOTE: SAS Life Science Analytics Framework Macro: * _lsafJobSubmissionId_= 87b33b33-7217-4692-bdfe-b1b112ccadca
NOTE: There were 1 observations read from the data set WORK.JOBPARAM.
NOTE: DATA statement used (Total process time):
      real time           1.33 seconds
      cpu time            0.00 seconds


MPRINT(LAUNCHDASHBOARD):   options nomprint;
/clinical/argx-113/cidp/argx-113-1902/biostat/staging/testrun1/figures -> 87b33b33-7217-4692-bdfe-b1b112ccadca -> STARTED
MPRINT(LAUNCHDASHBOARD):   data _null_;
MPRINT(LAUNCHDASHBOARD):   call sleep(1000,.01);
MPRINT(LAUNCHDASHBOARD):   * 10 seconds;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-9303/biostat/staging/testrun1/figures_ba
MPRINT(LAUNCHDASHBOARD):   data jobparam;
MPRINT(LAUNCHDASHBOARD):   length name type fileversion $20 value $100 includeSubFolders 8;
MPRINT(LAUNCHDASHBOARD):   fileversion = "";
MPRINT(LAUNCHDASHBOARD):   includeSubFolders = 1;
MPRINT(LAUNCHDASHBOARD):   name = "refolder";
MPRINT(LAUNCHDASHBOARD):   type = "FOLDER";
MPRINT(LAUNCHDASHBOARD):   value = "/clinical/argx-113/cidp/argx-113-9303/biostat/staging/testrun1/figures_ba";
MPRINT(LAUNCHDASHBOARD):   output;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;


NOTE: SAS Life Science Analytics Framework Macro: *  Submitted job /general/biostat/jobs/dashboard/dev/jobs/pp.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_submitjob
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: SAS Life Science Analytics Framework Macro: * sas_dsname = jobparam
NOTE: SAS Life Science Analytics Framework Macro: * _lsafJobSubmissionId_= 9c01f918-d595-43d9-9f6a-2843ab6f2891
NOTE: There were 1 observations read from the data set WORK.JOBPARAM.
NOTE: DATA statement used (Total process time):
      real time           1.32 seconds
      cpu time            0.00 seconds


MPRINT(LAUNCHDASHBOARD):   options nomprint;
/clinical/argx-113/cidp/argx-113-9303/biostat/staging/testrun1/figures_ba -> 9c01f918-d595-43d9-9f6a-2843ab6f2891 -> STARTED
MPRINT(LAUNCHDASHBOARD):   data _null_;
MPRINT(LAUNCHDASHBOARD):   call sleep(1000,.01);
MPRINT(LAUNCHDASHBOARD):   * 10 seconds;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-9303/biostat/staging/testrun1/qc_adam
MPRINT(LAUNCHDASHBOARD):   data jobparam;
MPRINT(LAUNCHDASHBOARD):   length name type fileversion $20 value $100 includeSubFolders 8;
MPRINT(LAUNCHDASHBOARD):   fileversion = "";
MPRINT(LAUNCHDASHBOARD):   includeSubFolders = 1;
MPRINT(LAUNCHDASHBOARD):   name = "refolder";
MPRINT(LAUNCHDASHBOARD):   type = "FOLDER";
MPRINT(LAUNCHDASHBOARD):   value = "/clinical/argx-113/cidp/argx-113-9303/biostat/staging/testrun1/qc_adam";
                                                           The SAS System

MPRINT(LAUNCHDASHBOARD):   output;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;


NOTE: SAS Life Science Analytics Framework Macro: *  Submitted job /general/biostat/jobs/dashboard/dev/jobs/pp.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_submitjob
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: SAS Life Science Analytics Framework Macro: * sas_dsname = jobparam
NOTE: SAS Life Science Analytics Framework Macro: * _lsafJobSubmissionId_= c1caf5b1-5a60-4dc2-9fc6-023de6c2fa72
NOTE: There were 1 observations read from the data set WORK.JOBPARAM.
NOTE: DATA statement used (Total process time):
      real time           1.34 seconds
      cpu time            0.01 seconds


MPRINT(LAUNCHDASHBOARD):   options nomprint;
/clinical/argx-113/cidp/argx-113-9303/biostat/staging/testrun1/qc_adam -> c1caf5b1-5a60-4dc2-9fc6-023de6c2fa72 -> STARTED
MPRINT(LAUNCHDASHBOARD):   data _null_;
MPRINT(LAUNCHDASHBOARD):   call sleep(1000,.01);
MPRINT(LAUNCHDASHBOARD):   * 10 seconds;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-1801/biostat/staging/patient_profiles
MPRINT(LAUNCHDASHBOARD):   data jobparam;
MPRINT(LAUNCHDASHBOARD):   length name type fileversion $20 value $100 includeSubFolders 8;
MPRINT(LAUNCHDASHBOARD):   fileversion = "";
MPRINT(LAUNCHDASHBOARD):   includeSubFolders = 1;
MPRINT(LAUNCHDASHBOARD):   name = "refolder";
MPRINT(LAUNCHDASHBOARD):   type = "FOLDER";
MPRINT(LAUNCHDASHBOARD):   value = "/clinical/argx-113/itp/argx-113-1801/biostat/staging/patient_profiles";
MPRINT(LAUNCHDASHBOARD):   output;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;


NOTE: SAS Life Science Analytics Framework Macro: *  Submitted job /general/biostat/jobs/dashboard/dev/jobs/pp.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_submitjob
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: SAS Life Science Analytics Framework Macro: * sas_dsname = jobparam
NOTE: SAS Life Science Analytics Framework Macro: * _lsafJobSubmissionId_= 260d3430-c688-47e7-89b1-de25b42ae9a4
NOTE: There were 1 observations read from the data set WORK.JOBPARAM.
NOTE: DATA statement used (Total process time):
      real time           1.35 seconds
      cpu time            0.01 seconds


MPRINT(LAUNCHDASHBOARD):   options nomprint;
/clinical/argx-113/itp/argx-113-1801/biostat/staging/patient_profiles -> 260d3430-c688-47e7-89b1-de25b42ae9a4 -> STARTED
MPRINT(LAUNCHDASHBOARD):   data _null_;
MPRINT(LAUNCHDASHBOARD):   call sleep(1000,.01);
MPRINT(LAUNCHDASHBOARD):   * 10 seconds;
MPRINT(LAUNCHDASHBOARD):   run;
                                                           The SAS System

MPRINT(LAUNCHDASHBOARD):   options nomprint;
MPRINT(LAUNCHDASHBOARD):   data jobparam;
MPRINT(LAUNCHDASHBOARD):   length name type fileversion $20 value $100 includeSubFolders 8;
MPRINT(LAUNCHDASHBOARD):   fileversion = "";
MPRINT(LAUNCHDASHBOARD):   includeSubFolders = 1;
MPRINT(LAUNCHDASHBOARD):   name = "refolder";
MPRINT(LAUNCHDASHBOARD):   type = "FOLDER";
MPRINT(LAUNCHDASHBOARD):   value = "/clinical/argx-113/itp/argx-113-1801/biostat/staging/posthoc";
MPRINT(LAUNCHDASHBOARD):   output;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;


NOTE: SAS Life Science Analytics Framework Macro: *  Submitted job /general/biostat/jobs/dashboard/dev/jobs/pp.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_submitjob
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: SAS Life Science Analytics Framework Macro: * sas_dsname = jobparam
NOTE: SAS Life Science Analytics Framework Macro: * _lsafJobSubmissionId_= adf9d6d3-c87e-4a7a-9859-c315bf324dab
NOTE: There were 1 observations read from the data set WORK.JOBPARAM.
NOTE: DATA statement used (Total process time):
      real time           1.47 seconds
      cpu time            0.01 seconds


MPRINT(LAUNCHDASHBOARD):   options nomprint;
/clinical/argx-113/itp/argx-113-1801/biostat/staging/posthoc -> adf9d6d3-c87e-4a7a-9859-c315bf324dab -> STARTED
MPRINT(LAUNCHDASHBOARD):   data _null_;
MPRINT(LAUNCHDASHBOARD):   call sleep(1000,.01);
MPRINT(LAUNCHDASHBOARD):   * 10 seconds;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-1803/biostat/staging/patient_profiles
MPRINT(LAUNCHDASHBOARD):   data jobparam;
MPRINT(LAUNCHDASHBOARD):   length name type fileversion $20 value $100 includeSubFolders 8;
MPRINT(LAUNCHDASHBOARD):   fileversion = "";
MPRINT(LAUNCHDASHBOARD):   includeSubFolders = 1;
MPRINT(LAUNCHDASHBOARD):   name = "refolder";
MPRINT(LAUNCHDASHBOARD):   type = "FOLDER";
MPRINT(LAUNCHDASHBOARD):   value = "/clinical/argx-113/itp/argx-113-1803/biostat/staging/patient_profiles";
MPRINT(LAUNCHDASHBOARD):   output;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;


NOTE: SAS Life Science Analytics Framework Macro: *  Submitted job /general/biostat/jobs/dashboard/dev/jobs/pp.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_submitjob
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: SAS Life Science Analytics Framework Macro: * sas_dsname = jobparam
NOTE: SAS Life Science Analytics Framework Macro: * _lsafJobSubmissionId_= 5d2847a9-e48a-4d42-aa43-6807a552bc80
NOTE: There were 1 observations read from the data set WORK.JOBPARAM.
NOTE: DATA statement used (Total process time):
      real time           1.33 seconds
      cpu time            0.01 seconds
                                                           The SAS System



MPRINT(LAUNCHDASHBOARD):   options nomprint;
/clinical/argx-113/itp/argx-113-1803/biostat/staging/patient_profiles -> 5d2847a9-e48a-4d42-aa43-6807a552bc80 -> STARTED
MPRINT(LAUNCHDASHBOARD):   data _null_;
MPRINT(LAUNCHDASHBOARD):   call sleep(1000,.01);
MPRINT(LAUNCHDASHBOARD):   * 10 seconds;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;
MPRINT(LAUNCHDASHBOARD):   data jobparam;
MPRINT(LAUNCHDASHBOARD):   length name type fileversion $20 value $100 includeSubFolders 8;
MPRINT(LAUNCHDASHBOARD):   fileversion = "";
MPRINT(LAUNCHDASHBOARD):   includeSubFolders = 1;
MPRINT(LAUNCHDASHBOARD):   name = "refolder";
MPRINT(LAUNCHDASHBOARD):   type = "FOLDER";
MPRINT(LAUNCHDASHBOARD):   value = "/clinical/argx-113/itp/argx-113-1803/biostat/staging/posthoc";
MPRINT(LAUNCHDASHBOARD):   output;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;


NOTE: SAS Life Science Analytics Framework Macro: *  Submitted job /general/biostat/jobs/dashboard/dev/jobs/pp.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_submitjob
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: SAS Life Science Analytics Framework Macro: * sas_dsname = jobparam
NOTE: SAS Life Science Analytics Framework Macro: * _lsafJobSubmissionId_= 0956ff24-fe70-4ccd-9b4f-3094f5a57674
NOTE: There were 1 observations read from the data set WORK.JOBPARAM.
NOTE: DATA statement used (Total process time):
      real time           1.32 seconds
      cpu time            0.00 seconds


MPRINT(LAUNCHDASHBOARD):   options nomprint;
/clinical/argx-113/itp/argx-113-1803/biostat/staging/posthoc -> 0956ff24-fe70-4ccd-9b4f-3094f5a57674 -> STARTED
MPRINT(LAUNCHDASHBOARD):   data _null_;
MPRINT(LAUNCHDASHBOARD):   call sleep(1000,.01);
MPRINT(LAUNCHDASHBOARD):   * 10 seconds;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;
MPRINT(LAUNCHDASHBOARD):   data jobparam;
MPRINT(LAUNCHDASHBOARD):   length name type fileversion $20 value $100 includeSubFolders 8;
MPRINT(LAUNCHDASHBOARD):   fileversion = "";
MPRINT(LAUNCHDASHBOARD):   includeSubFolders = 1;
MPRINT(LAUNCHDASHBOARD):   name = "refolder";
MPRINT(LAUNCHDASHBOARD):   type = "FOLDER";
MPRINT(LAUNCHDASHBOARD):   value = "/clinical/argx-113/itp/argx-113-2004/biostat/staging/adhoc";
MPRINT(LAUNCHDASHBOARD):   output;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;


NOTE: SAS Life Science Analytics Framework Macro: *  Submitted job /general/biostat/jobs/dashboard/dev/jobs/pp.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_submitjob
                                                           The SAS System

NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: SAS Life Science Analytics Framework Macro: * sas_dsname = jobparam
NOTE: SAS Life Science Analytics Framework Macro: * _lsafJobSubmissionId_= 16038b7a-486f-455b-a832-ec9c79e6b8a9
NOTE: There were 1 observations read from the data set WORK.JOBPARAM.
NOTE: DATA statement used (Total process time):
      real time           1.33 seconds
      cpu time            0.01 seconds


MPRINT(LAUNCHDASHBOARD):   options nomprint;
/clinical/argx-113/itp/argx-113-2004/biostat/staging/adhoc -> 16038b7a-486f-455b-a832-ec9c79e6b8a9 -> STARTED
MPRINT(LAUNCHDASHBOARD):   data _null_;
MPRINT(LAUNCHDASHBOARD):   call sleep(1000,.01);
MPRINT(LAUNCHDASHBOARD):   * 10 seconds;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-2004/biostat/staging/patient_profiles
MPRINT(LAUNCHDASHBOARD):   data jobparam;
MPRINT(LAUNCHDASHBOARD):   length name type fileversion $20 value $100 includeSubFolders 8;
MPRINT(LAUNCHDASHBOARD):   fileversion = "";
MPRINT(LAUNCHDASHBOARD):   includeSubFolders = 1;
MPRINT(LAUNCHDASHBOARD):   name = "refolder";
MPRINT(LAUNCHDASHBOARD):   type = "FOLDER";
MPRINT(LAUNCHDASHBOARD):   value = "/clinical/argx-113/itp/argx-113-2004/biostat/staging/patient_profiles";
MPRINT(LAUNCHDASHBOARD):   output;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;


NOTE: SAS Life Science Analytics Framework Macro: *  Submitted job /general/biostat/jobs/dashboard/dev/jobs/pp.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_submitjob
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: SAS Life Science Analytics Framework Macro: * sas_dsname = jobparam
NOTE: SAS Life Science Analytics Framework Macro: * _lsafJobSubmissionId_= e5581aef-ca00-4dd2-8430-5b11242935d7
NOTE: There were 1 observations read from the data set WORK.JOBPARAM.
NOTE: DATA statement used (Total process time):
      real time           1.34 seconds
      cpu time            0.01 seconds


MPRINT(LAUNCHDASHBOARD):   options nomprint;
/clinical/argx-113/itp/argx-113-2004/biostat/staging/patient_profiles -> e5581aef-ca00-4dd2-8430-5b11242935d7 -> STARTED
MPRINT(LAUNCHDASHBOARD):   data _null_;
MPRINT(LAUNCHDASHBOARD):   call sleep(1000,.01);
MPRINT(LAUNCHDASHBOARD):   * 10 seconds;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/qc_adam
MPRINT(LAUNCHDASHBOARD):   data jobparam;
MPRINT(LAUNCHDASHBOARD):   length name type fileversion $20 value $100 includeSubFolders 8;
MPRINT(LAUNCHDASHBOARD):   fileversion = "";
MPRINT(LAUNCHDASHBOARD):   includeSubFolders = 1;
                                                           The SAS System

MPRINT(LAUNCHDASHBOARD):   name = "refolder";
MPRINT(LAUNCHDASHBOARD):   type = "FOLDER";
MPRINT(LAUNCHDASHBOARD):   value = "/clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/qc_adam";
MPRINT(LAUNCHDASHBOARD):   output;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;


NOTE: SAS Life Science Analytics Framework Macro: *  Submitted job /general/biostat/jobs/dashboard/dev/jobs/pp.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_submitjob
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: SAS Life Science Analytics Framework Macro: * sas_dsname = jobparam
NOTE: SAS Life Science Analytics Framework Macro: * _lsafJobSubmissionId_= f9bdaeae-d31a-436e-b343-9e7aa191dd65
NOTE: There were 1 observations read from the data set WORK.JOBPARAM.
NOTE: DATA statement used (Total process time):
      real time           1.44 seconds
      cpu time            0.00 seconds


MPRINT(LAUNCHDASHBOARD):   options nomprint;
/clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/qc_adam -> f9bdaeae-d31a-436e-b343-9e7aa191dd65 -> STARTED
MPRINT(LAUNCHDASHBOARD):   data _null_;
MPRINT(LAUNCHDASHBOARD):   call sleep(1000,.01);
MPRINT(LAUNCHDASHBOARD):   * 10 seconds;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/qc_tlf
MPRINT(LAUNCHDASHBOARD):   data jobparam;
MPRINT(LAUNCHDASHBOARD):   length name type fileversion $20 value $100 includeSubFolders 8;
MPRINT(LAUNCHDASHBOARD):   fileversion = "";
MPRINT(LAUNCHDASHBOARD):   includeSubFolders = 1;
MPRINT(LAUNCHDASHBOARD):   name = "refolder";
MPRINT(LAUNCHDASHBOARD):   type = "FOLDER";
MPRINT(LAUNCHDASHBOARD):   value = "/clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/qc_tlf";
MPRINT(LAUNCHDASHBOARD):   output;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;


NOTE: SAS Life Science Analytics Framework Macro: *  Submitted job /general/biostat/jobs/dashboard/dev/jobs/pp.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_submitjob
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: SAS Life Science Analytics Framework Macro: * sas_dsname = jobparam
NOTE: SAS Life Science Analytics Framework Macro: * _lsafJobSubmissionId_= 1e34cf24-5543-4cd5-b737-4f93f8d75c6b
NOTE: There were 1 observations read from the data set WORK.JOBPARAM.
NOTE: DATA statement used (Total process time):
      real time           1.37 seconds
      cpu time            0.00 seconds


MPRINT(LAUNCHDASHBOARD):   options nomprint;
/clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/qc_tlf -> 1e34cf24-5543-4cd5-b737-4f93f8d75c6b -> STARTED
MPRINT(LAUNCHDASHBOARD):   data _null_;
                                                           The SAS System

MPRINT(LAUNCHDASHBOARD):   call sleep(1000,.01);
MPRINT(LAUNCHDASHBOARD):   * 10 seconds;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-2005/biostat/staging/testrun1/qc_adam
MPRINT(LAUNCHDASHBOARD):   data jobparam;
MPRINT(LAUNCHDASHBOARD):   length name type fileversion $20 value $100 includeSubFolders 8;
MPRINT(LAUNCHDASHBOARD):   fileversion = "";
MPRINT(LAUNCHDASHBOARD):   includeSubFolders = 1;
MPRINT(LAUNCHDASHBOARD):   name = "refolder";
MPRINT(LAUNCHDASHBOARD):   type = "FOLDER";
MPRINT(LAUNCHDASHBOARD):   value = "/clinical/argx-113/itp/argx-113-2005/biostat/staging/testrun1/qc_adam";
MPRINT(LAUNCHDASHBOARD):   output;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;


NOTE: SAS Life Science Analytics Framework Macro: *  Submitted job /general/biostat/jobs/dashboard/dev/jobs/pp.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_submitjob
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: SAS Life Science Analytics Framework Macro: * sas_dsname = jobparam
NOTE: SAS Life Science Analytics Framework Macro: * _lsafJobSubmissionId_= 3c736aaa-4be9-466f-98dd-38b4711c22af
NOTE: There were 1 observations read from the data set WORK.JOBPARAM.
NOTE: DATA statement used (Total process time):
      real time           1.33 seconds
      cpu time            0.00 seconds


MPRINT(LAUNCHDASHBOARD):   options nomprint;
/clinical/argx-113/itp/argx-113-2005/biostat/staging/testrun1/qc_adam -> 3c736aaa-4be9-466f-98dd-38b4711c22af -> STARTED
MPRINT(LAUNCHDASHBOARD):   data _null_;
MPRINT(LAUNCHDASHBOARD):   call sleep(1000,.01);
MPRINT(LAUNCHDASHBOARD):   * 10 seconds;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;
MPRINT(LAUNCHDASHBOARD):   data jobparam;
MPRINT(LAUNCHDASHBOARD):   length name type fileversion $20 value $100 includeSubFolders 8;
MPRINT(LAUNCHDASHBOARD):   fileversion = "";
MPRINT(LAUNCHDASHBOARD):   includeSubFolders = 1;
MPRINT(LAUNCHDASHBOARD):   name = "refolder";
MPRINT(LAUNCHDASHBOARD):   type = "FOLDER";
MPRINT(LAUNCHDASHBOARD):   value = "/clinical/argx-113/itp/argx-113-9101/biostat/staging/posthoc";
MPRINT(LAUNCHDASHBOARD):   output;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;


NOTE: SAS Life Science Analytics Framework Macro: *  Submitted job /general/biostat/jobs/dashboard/dev/jobs/pp.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_submitjob
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: SAS Life Science Analytics Framework Macro: * sas_dsname = jobparam
NOTE: SAS Life Science Analytics Framework Macro: * _lsafJobSubmissionId_= 9f00b250-ca98-42a5-b2e6-a16908734265
NOTE: There were 1 observations read from the data set WORK.JOBPARAM.
                                                           The SAS System

NOTE: DATA statement used (Total process time):
      real time           1.32 seconds
      cpu time            0.00 seconds


MPRINT(LAUNCHDASHBOARD):   options nomprint;
/clinical/argx-113/itp/argx-113-9101/biostat/staging/posthoc -> 9f00b250-ca98-42a5-b2e6-a16908734265 -> STARTED
MPRINT(LAUNCHDASHBOARD):   data _null_;
MPRINT(LAUNCHDASHBOARD):   call sleep(1000,.01);
MPRINT(LAUNCHDASHBOARD):   * 10 seconds;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;
MPRINT(LAUNCHDASHBOARD):   data jobparam;
MPRINT(LAUNCHDASHBOARD):   length name type fileversion $20 value $100 includeSubFolders 8;
MPRINT(LAUNCHDASHBOARD):   fileversion = "";
MPRINT(LAUNCHDASHBOARD):   includeSubFolders = 1;
MPRINT(LAUNCHDASHBOARD):   name = "refolder";
MPRINT(LAUNCHDASHBOARD):   type = "FOLDER";
MPRINT(LAUNCHDASHBOARD):   value = "/clinical/argx-113/mg/argx-113-1602/biostat/staging/fda_irr";
MPRINT(LAUNCHDASHBOARD):   output;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;


NOTE: SAS Life Science Analytics Framework Macro: *  Submitted job /general/biostat/jobs/dashboard/dev/jobs/pp.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_submitjob
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: SAS Life Science Analytics Framework Macro: * sas_dsname = jobparam
NOTE: SAS Life Science Analytics Framework Macro: * _lsafJobSubmissionId_= 2ee7cfcf-4628-47fb-b162-ca6653393dee
NOTE: There were 1 observations read from the data set WORK.JOBPARAM.
NOTE: DATA statement used (Total process time):
      real time           1.54 seconds
      cpu time            0.02 seconds


MPRINT(LAUNCHDASHBOARD):   options nomprint;
/clinical/argx-113/mg/argx-113-1602/biostat/staging/fda_irr -> 2ee7cfcf-4628-47fb-b162-ca6653393dee -> STARTED
MPRINT(LAUNCHDASHBOARD):   data _null_;
MPRINT(LAUNCHDASHBOARD):   call sleep(1000,.01);
MPRINT(LAUNCHDASHBOARD):   * 10 seconds;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;
MPRINT(LAUNCHDASHBOARD):   data jobparam;
MPRINT(LAUNCHDASHBOARD):   length name type fileversion $20 value $100 includeSubFolders 8;
MPRINT(LAUNCHDASHBOARD):   fileversion = "";
MPRINT(LAUNCHDASHBOARD):   includeSubFolders = 1;
MPRINT(LAUNCHDASHBOARD):   name = "refolder";
MPRINT(LAUNCHDASHBOARD):   type = "FOLDER";
MPRINT(LAUNCHDASHBOARD):   value = "/clinical/argx-113/mg/argx-113-1704/biostat/staging/fda_irr";
MPRINT(LAUNCHDASHBOARD):   output;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;

                                                           The SAS System


NOTE: SAS Life Science Analytics Framework Macro: *  Submitted job /general/biostat/jobs/dashboard/dev/jobs/pp.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_submitjob
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: SAS Life Science Analytics Framework Macro: * sas_dsname = jobparam
NOTE: SAS Life Science Analytics Framework Macro: * _lsafJobSubmissionId_= 9f68451c-1efb-4d19-ac83-80f78747dd0e
NOTE: There were 1 observations read from the data set WORK.JOBPARAM.
NOTE: DATA statement used (Total process time):
      real time           1.42 seconds
      cpu time            0.00 seconds


MPRINT(LAUNCHDASHBOARD):   options nomprint;
/clinical/argx-113/mg/argx-113-1704/biostat/staging/fda_irr -> 9f68451c-1efb-4d19-ac83-80f78747dd0e -> STARTED
MPRINT(LAUNCHDASHBOARD):   data _null_;
MPRINT(LAUNCHDASHBOARD):   call sleep(1000,.01);
MPRINT(LAUNCHDASHBOARD):   * 10 seconds;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;
MPRINT(LAUNCHDASHBOARD):   data jobparam;
MPRINT(LAUNCHDASHBOARD):   length name type fileversion $20 value $100 includeSubFolders 8;
MPRINT(LAUNCHDASHBOARD):   fileversion = "";
MPRINT(LAUNCHDASHBOARD):   includeSubFolders = 1;
MPRINT(LAUNCHDASHBOARD):   name = "refolder";
MPRINT(LAUNCHDASHBOARD):   type = "FOLDER";
MPRINT(LAUNCHDASHBOARD):   value = "/clinical/argx-113/mg/argx-113-1705/biostat/staging/fda_irr";
MPRINT(LAUNCHDASHBOARD):   output;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;


NOTE: SAS Life Science Analytics Framework Macro: *  Submitted job /general/biostat/jobs/dashboard/dev/jobs/pp.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_submitjob
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: SAS Life Science Analytics Framework Macro: * sas_dsname = jobparam
NOTE: SAS Life Science Analytics Framework Macro: * _lsafJobSubmissionId_= 4e5ca58b-ae10-45f5-9cd0-7863644db92e
NOTE: There were 1 observations read from the data set WORK.JOBPARAM.
NOTE: DATA statement used (Total process time):
      real time           1.38 seconds
      cpu time            0.00 seconds


MPRINT(LAUNCHDASHBOARD):   options nomprint;
/clinical/argx-113/mg/argx-113-1705/biostat/staging/fda_irr -> 4e5ca58b-ae10-45f5-9cd0-7863644db92e -> STARTED
MPRINT(LAUNCHDASHBOARD):   data _null_;
MPRINT(LAUNCHDASHBOARD):   call sleep(1000,.01);
MPRINT(LAUNCHDASHBOARD):   * 10 seconds;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-1705/biostat/staging/final/qc_tlf
MPRINT(LAUNCHDASHBOARD):   data jobparam;
MPRINT(LAUNCHDASHBOARD):   length name type fileversion $20 value $100 includeSubFolders 8;
                                                           The SAS System

MPRINT(LAUNCHDASHBOARD):   fileversion = "";
MPRINT(LAUNCHDASHBOARD):   includeSubFolders = 1;
MPRINT(LAUNCHDASHBOARD):   name = "refolder";
MPRINT(LAUNCHDASHBOARD):   type = "FOLDER";
MPRINT(LAUNCHDASHBOARD):   value = "/clinical/argx-113/mg/argx-113-1705/biostat/staging/final/qc_tlf";
MPRINT(LAUNCHDASHBOARD):   output;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;


NOTE: SAS Life Science Analytics Framework Macro: *  Submitted job /general/biostat/jobs/dashboard/dev/jobs/pp.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_submitjob
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: SAS Life Science Analytics Framework Macro: * sas_dsname = jobparam
NOTE: SAS Life Science Analytics Framework Macro: * _lsafJobSubmissionId_= ad15f7df-218d-45f7-9281-34053ec0eee6
NOTE: There were 1 observations read from the data set WORK.JOBPARAM.
NOTE: DATA statement used (Total process time):
      real time           1.38 seconds
      cpu time            0.00 seconds


MPRINT(LAUNCHDASHBOARD):   options nomprint;
/clinical/argx-113/mg/argx-113-1705/biostat/staging/final/qc_tlf -> ad15f7df-218d-45f7-9281-34053ec0eee6 -> STARTED
MPRINT(LAUNCHDASHBOARD):   data _null_;
MPRINT(LAUNCHDASHBOARD):   call sleep(1000,.01);
MPRINT(LAUNCHDASHBOARD):   * 10 seconds;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-1705/biostat/staging/final_posthoc
MPRINT(LAUNCHDASHBOARD):   data jobparam;
MPRINT(LAUNCHDASHBOARD):   length name type fileversion $20 value $100 includeSubFolders 8;
MPRINT(LAUNCHDASHBOARD):   fileversion = "";
MPRINT(LAUNCHDASHBOARD):   includeSubFolders = 1;
MPRINT(LAUNCHDASHBOARD):   name = "refolder";
MPRINT(LAUNCHDASHBOARD):   type = "FOLDER";
MPRINT(LAUNCHDASHBOARD):   value = "/clinical/argx-113/mg/argx-113-1705/biostat/staging/final_posthoc";
MPRINT(LAUNCHDASHBOARD):   output;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;


NOTE: SAS Life Science Analytics Framework Macro: *  Submitted job /general/biostat/jobs/dashboard/dev/jobs/pp.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_submitjob
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: SAS Life Science Analytics Framework Macro: * sas_dsname = jobparam
NOTE: SAS Life Science Analytics Framework Macro: * _lsafJobSubmissionId_= 0e618438-b49d-435c-9234-860ee3ad148a
NOTE: There were 1 observations read from the data set WORK.JOBPARAM.
NOTE: DATA statement used (Total process time):
      real time           1.37 seconds
      cpu time            0.01 seconds


MPRINT(LAUNCHDASHBOARD):   options nomprint;
                                                           The SAS System

/clinical/argx-113/mg/argx-113-1705/biostat/staging/final_posthoc -> 0e618438-b49d-435c-9234-860ee3ad148a -> STARTED
MPRINT(LAUNCHDASHBOARD):   data _null_;
MPRINT(LAUNCHDASHBOARD):   call sleep(1000,.01);
MPRINT(LAUNCHDASHBOARD):   * 10 seconds;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;
MPRINT(LAUNCHDASHBOARD):   data jobparam;
MPRINT(LAUNCHDASHBOARD):   length name type fileversion $20 value $100 includeSubFolders 8;
MPRINT(LAUNCHDASHBOARD):   fileversion = "";
MPRINT(LAUNCHDASHBOARD):   includeSubFolders = 1;
MPRINT(LAUNCHDASHBOARD):   name = "refolder";
MPRINT(LAUNCHDASHBOARD):   type = "FOLDER";
MPRINT(LAUNCHDASHBOARD):   value = "/clinical/argx-113/mg/argx-113-1705/biostat/staging/ma2023";
MPRINT(LAUNCHDASHBOARD):   output;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;


NOTE: SAS Life Science Analytics Framework Macro: *  Submitted job /general/biostat/jobs/dashboard/dev/jobs/pp.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_submitjob
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: SAS Life Science Analytics Framework Macro: * sas_dsname = jobparam
NOTE: SAS Life Science Analytics Framework Macro: * _lsafJobSubmissionId_= cf6abbbf-9428-4231-908e-8859c497937c
NOTE: There were 1 observations read from the data set WORK.JOBPARAM.
NOTE: DATA statement used (Total process time):
      real time           1.33 seconds
      cpu time            0.00 seconds


MPRINT(LAUNCHDASHBOARD):   options nomprint;
/clinical/argx-113/mg/argx-113-1705/biostat/staging/ma2023 -> cf6abbbf-9428-4231-908e-8859c497937c -> STARTED
MPRINT(LAUNCHDASHBOARD):   data _null_;
MPRINT(LAUNCHDASHBOARD):   call sleep(1000,.01);
MPRINT(LAUNCHDASHBOARD):   * 10 seconds;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;
MPRINT(LAUNCHDASHBOARD):   data jobparam;
MPRINT(LAUNCHDASHBOARD):   length name type fileversion $20 value $100 includeSubFolders 8;
MPRINT(LAUNCHDASHBOARD):   fileversion = "";
MPRINT(LAUNCHDASHBOARD):   includeSubFolders = 1;
MPRINT(LAUNCHDASHBOARD):   name = "refolder";
MPRINT(LAUNCHDASHBOARD):   type = "FOLDER";
MPRINT(LAUNCHDASHBOARD):   value = "/clinical/argx-113/mg/argx-113-2001/biostat/staging/ema";
MPRINT(LAUNCHDASHBOARD):   output;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;


NOTE: SAS Life Science Analytics Framework Macro: *  Submitted job /general/biostat/jobs/dashboard/dev/jobs/pp.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_submitjob
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: SAS Life Science Analytics Framework Macro: * sas_dsname = jobparam
NOTE: SAS Life Science Analytics Framework Macro: * _lsafJobSubmissionId_= 32318abf-53ba-4fdd-9e98-cf3b1748cce8
                                                           The SAS System

NOTE: There were 1 observations read from the data set WORK.JOBPARAM.
NOTE: DATA statement used (Total process time):
      real time           1.35 seconds
      cpu time            0.00 seconds


MPRINT(LAUNCHDASHBOARD):   options nomprint;
/clinical/argx-113/mg/argx-113-2001/biostat/staging/ema -> 32318abf-53ba-4fdd-9e98-cf3b1748cce8 -> STARTED
MPRINT(LAUNCHDASHBOARD):   data _null_;
MPRINT(LAUNCHDASHBOARD):   call sleep(1000,.01);
MPRINT(LAUNCHDASHBOARD):   * 10 seconds;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;
MPRINT(LAUNCHDASHBOARD):   data jobparam;
MPRINT(LAUNCHDASHBOARD):   length name type fileversion $20 value $100 includeSubFolders 8;
MPRINT(LAUNCHDASHBOARD):   fileversion = "";
MPRINT(LAUNCHDASHBOARD):   includeSubFolders = 1;
MPRINT(LAUNCHDASHBOARD):   name = "refolder";
MPRINT(LAUNCHDASHBOARD):   type = "FOLDER";
MPRINT(LAUNCHDASHBOARD):   value = "/clinical/argx-113/mg/argx-113-2002/biostat/staging/ema";
MPRINT(LAUNCHDASHBOARD):   output;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;


NOTE: SAS Life Science Analytics Framework Macro: *  Submitted job /general/biostat/jobs/dashboard/dev/jobs/pp.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_submitjob
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: SAS Life Science Analytics Framework Macro: * sas_dsname = jobparam
NOTE: SAS Life Science Analytics Framework Macro: * _lsafJobSubmissionId_= b04181d1-7d00-4800-8319-49a1f7446c30
NOTE: There were 1 observations read from the data set WORK.JOBPARAM.
NOTE: DATA statement used (Total process time):
      real time           1.36 seconds
      cpu time            0.00 seconds


MPRINT(LAUNCHDASHBOARD):   options nomprint;
/clinical/argx-113/mg/argx-113-2002/biostat/staging/ema -> b04181d1-7d00-4800-8319-49a1f7446c30 -> STARTED
MPRINT(LAUNCHDASHBOARD):   data _null_;
MPRINT(LAUNCHDASHBOARD):   call sleep(1000,.01);
MPRINT(LAUNCHDASHBOARD):   * 10 seconds;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2_1yr/qc_adam
MPRINT(LAUNCHDASHBOARD):   data jobparam;
MPRINT(LAUNCHDASHBOARD):   length name type fileversion $20 value $100 includeSubFolders 8;
MPRINT(LAUNCHDASHBOARD):   fileversion = "";
MPRINT(LAUNCHDASHBOARD):   includeSubFolders = 1;
MPRINT(LAUNCHDASHBOARD):   name = "refolder";
MPRINT(LAUNCHDASHBOARD):   type = "FOLDER";
MPRINT(LAUNCHDASHBOARD):   value = "/clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2_1yr/qc_adam";
MPRINT(LAUNCHDASHBOARD):   output;
MPRINT(LAUNCHDASHBOARD):   run;
                                                           The SAS System

MPRINT(LAUNCHDASHBOARD):   options nomprint;


NOTE: SAS Life Science Analytics Framework Macro: *  Submitted job /general/biostat/jobs/dashboard/dev/jobs/pp.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_submitjob
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: SAS Life Science Analytics Framework Macro: * sas_dsname = jobparam
NOTE: SAS Life Science Analytics Framework Macro: * _lsafJobSubmissionId_= 55ea2159-d1fa-4aa0-a88a-ee63475a439a
NOTE: There were 1 observations read from the data set WORK.JOBPARAM.
NOTE: DATA statement used (Total process time):
      real time           1.31 seconds
      cpu time            0.00 seconds


MPRINT(LAUNCHDASHBOARD):   options nomprint;
/clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2_1yr/qc_adam -> 55ea2159-d1fa-4aa0-a88a-ee63475a439a -> STARTED
MPRINT(LAUNCHDASHBOARD):   data _null_;
MPRINT(LAUNCHDASHBOARD):   call sleep(1000,.01);
MPRINT(LAUNCHDASHBOARD):   * 10 seconds;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2_1yr/qc_tlf
MPRINT(LAUNCHDASHBOARD):   data jobparam;
MPRINT(LAUNCHDASHBOARD):   length name type fileversion $20 value $100 includeSubFolders 8;
MPRINT(LAUNCHDASHBOARD):   fileversion = "";
MPRINT(LAUNCHDASHBOARD):   includeSubFolders = 1;
MPRINT(LAUNCHDASHBOARD):   name = "refolder";
MPRINT(LAUNCHDASHBOARD):   type = "FOLDER";
MPRINT(LAUNCHDASHBOARD):   value = "/clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2_1yr/qc_tlf";
MPRINT(LAUNCHDASHBOARD):   output;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;


NOTE: SAS Life Science Analytics Framework Macro: *  Submitted job /general/biostat/jobs/dashboard/dev/jobs/pp.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_submitjob
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: SAS Life Science Analytics Framework Macro: * sas_dsname = jobparam
NOTE: SAS Life Science Analytics Framework Macro: * _lsafJobSubmissionId_= f838a3e1-be07-4d8c-a7ac-49c9ef6f6203
NOTE: There were 1 observations read from the data set WORK.JOBPARAM.
NOTE: DATA statement used (Total process time):
      real time           1.50 seconds
      cpu time            0.02 seconds


MPRINT(LAUNCHDASHBOARD):   options nomprint;
/clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2_1yr/qc_tlf -> f838a3e1-be07-4d8c-a7ac-49c9ef6f6203 -> STARTED
MPRINT(LAUNCHDASHBOARD):   data _null_;
MPRINT(LAUNCHDASHBOARD):   call sleep(1000,.01);
MPRINT(LAUNCHDASHBOARD):   * 10 seconds;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;
                                                           The SAS System

The item exists: /clinical/argx-113/mg/argx-113-2002/biostat/staging/patient_profiles
MPRINT(LAUNCHDASHBOARD):   data jobparam;
MPRINT(LAUNCHDASHBOARD):   length name type fileversion $20 value $100 includeSubFolders 8;
MPRINT(LAUNCHDASHBOARD):   fileversion = "";
MPRINT(LAUNCHDASHBOARD):   includeSubFolders = 1;
MPRINT(LAUNCHDASHBOARD):   name = "refolder";
MPRINT(LAUNCHDASHBOARD):   type = "FOLDER";
MPRINT(LAUNCHDASHBOARD):   value = "/clinical/argx-113/mg/argx-113-2002/biostat/staging/patient_profiles";
MPRINT(LAUNCHDASHBOARD):   output;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;


NOTE: SAS Life Science Analytics Framework Macro: *  Submitted job /general/biostat/jobs/dashboard/dev/jobs/pp.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_submitjob
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: SAS Life Science Analytics Framework Macro: * sas_dsname = jobparam
NOTE: SAS Life Science Analytics Framework Macro: * _lsafJobSubmissionId_= 78d7d15f-2e88-4242-a076-19cba1a4463f
NOTE: There were 1 observations read from the data set WORK.JOBPARAM.
NOTE: DATA statement used (Total process time):
      real time           1.34 seconds
      cpu time            0.00 seconds


MPRINT(LAUNCHDASHBOARD):   options nomprint;
/clinical/argx-113/mg/argx-113-2002/biostat/staging/patient_profiles -> 78d7d15f-2e88-4242-a076-19cba1a4463f -> STARTED
MPRINT(LAUNCHDASHBOARD):   data _null_;
MPRINT(LAUNCHDASHBOARD):   call sleep(1000,.01);
MPRINT(LAUNCHDASHBOARD):   * 10 seconds;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;
MPRINT(LAUNCHDASHBOARD):   data jobparam;
MPRINT(LAUNCHDASHBOARD):   length name type fileversion $20 value $100 includeSubFolders 8;
MPRINT(LAUNCHDASHBOARD):   fileversion = "";
MPRINT(LAUNCHDASHBOARD):   includeSubFolders = 1;
MPRINT(LAUNCHDASHBOARD):   name = "refolder";
MPRINT(LAUNCHDASHBOARD):   type = "FOLDER";
MPRINT(LAUNCHDASHBOARD):   value = "/clinical/argx-113/mg/argx-113-2002/biostat/staging/pmda_1yr";
MPRINT(LAUNCHDASHBOARD):   output;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;


NOTE: SAS Life Science Analytics Framework Macro: *  Submitted job /general/biostat/jobs/dashboard/dev/jobs/pp.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_submitjob
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: SAS Life Science Analytics Framework Macro: * sas_dsname = jobparam
NOTE: SAS Life Science Analytics Framework Macro: * _lsafJobSubmissionId_= b61387d8-1ac6-4528-b624-198a50ccc542
NOTE: There were 1 observations read from the data set WORK.JOBPARAM.
NOTE: DATA statement used (Total process time):
      real time           1.35 seconds
      cpu time            0.00 seconds


                                                           The SAS System

MPRINT(LAUNCHDASHBOARD):   options nomprint;
/clinical/argx-113/mg/argx-113-2002/biostat/staging/pmda_1yr -> b61387d8-1ac6-4528-b624-198a50ccc542 -> STARTED
MPRINT(LAUNCHDASHBOARD):   data _null_;
MPRINT(LAUNCHDASHBOARD):   call sleep(1000,.01);
MPRINT(LAUNCHDASHBOARD):   * 10 seconds;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;
MPRINT(LAUNCHDASHBOARD):   data jobparam;
MPRINT(LAUNCHDASHBOARD):   length name type fileversion $20 value $100 includeSubFolders 8;
MPRINT(LAUNCHDASHBOARD):   fileversion = "";
MPRINT(LAUNCHDASHBOARD):   includeSubFolders = 1;
MPRINT(LAUNCHDASHBOARD):   name = "refolder";
MPRINT(LAUNCHDASHBOARD):   type = "FOLDER";
MPRINT(LAUNCHDASHBOARD):   value = "/clinical/argx-113/mg/argx-113-9041/biostat/staging/final_adam";
MPRINT(LAUNCHDASHBOARD):   output;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;


NOTE: SAS Life Science Analytics Framework Macro: *  Submitted job /general/biostat/jobs/dashboard/dev/jobs/pp.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_submitjob
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: SAS Life Science Analytics Framework Macro: * sas_dsname = jobparam
NOTE: SAS Life Science Analytics Framework Macro: * _lsafJobSubmissionId_= a1444414-d405-4bba-8593-61d9d142f45b
NOTE: There were 1 observations read from the data set WORK.JOBPARAM.
NOTE: DATA statement used (Total process time):
      real time           1.36 seconds
      cpu time            0.00 seconds


MPRINT(LAUNCHDASHBOARD):   options nomprint;
/clinical/argx-113/mg/argx-113-9041/biostat/staging/final_adam -> a1444414-d405-4bba-8593-61d9d142f45b -> STARTED
MPRINT(LAUNCHDASHBOARD):   data _null_;
MPRINT(LAUNCHDASHBOARD):   call sleep(1000,.01);
MPRINT(LAUNCHDASHBOARD):   * 10 seconds;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;
The item exists: /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/patient_profiles
MPRINT(LAUNCHDASHBOARD):   data jobparam;
MPRINT(LAUNCHDASHBOARD):   length name type fileversion $20 value $100 includeSubFolders 8;
MPRINT(LAUNCHDASHBOARD):   fileversion = "";
MPRINT(LAUNCHDASHBOARD):   includeSubFolders = 1;
MPRINT(LAUNCHDASHBOARD):   name = "refolder";
MPRINT(LAUNCHDASHBOARD):   type = "FOLDER";
MPRINT(LAUNCHDASHBOARD):   value = "/clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/patient_profiles";
MPRINT(LAUNCHDASHBOARD):   output;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;


NOTE: SAS Life Science Analytics Framework Macro: *  Submitted job /general/biostat/jobs/dashboard/dev/jobs/pp.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_submitjob
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
                                                           The SAS System

NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: SAS Life Science Analytics Framework Macro: * sas_dsname = jobparam
NOTE: SAS Life Science Analytics Framework Macro: * _lsafJobSubmissionId_= b8d9a5b2-34f5-4383-8f66-203b76dce617
NOTE: There were 1 observations read from the data set WORK.JOBPARAM.
NOTE: DATA statement used (Total process time):
      real time           1.34 seconds
      cpu time            0.02 seconds


MPRINT(LAUNCHDASHBOARD):   options nomprint;
/clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/patient_profiles -> b8d9a5b2-34f5-4383-8f66-203b76dce617 -> STARTED
MPRINT(LAUNCHDASHBOARD):   data _null_;
MPRINT(LAUNCHDASHBOARD):   call sleep(1000,.01);
MPRINT(LAUNCHDASHBOARD):   * 10 seconds;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;
The item exists: /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun2/qc_adam
MPRINT(LAUNCHDASHBOARD):   data jobparam;
MPRINT(LAUNCHDASHBOARD):   length name type fileversion $20 value $100 includeSubFolders 8;
MPRINT(LAUNCHDASHBOARD):   fileversion = "";
MPRINT(LAUNCHDASHBOARD):   includeSubFolders = 1;
MPRINT(LAUNCHDASHBOARD):   name = "refolder";
MPRINT(LAUNCHDASHBOARD):   type = "FOLDER";
MPRINT(LAUNCHDASHBOARD):   value = "/clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun2/qc_adam";
MPRINT(LAUNCHDASHBOARD):   output;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;


NOTE: SAS Life Science Analytics Framework Macro: *  Submitted job /general/biostat/jobs/dashboard/dev/jobs/pp.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_submitjob
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: SAS Life Science Analytics Framework Macro: * sas_dsname = jobparam
NOTE: SAS Life Science Analytics Framework Macro: * _lsafJobSubmissionId_= ebc6d314-1c8c-4105-ac3e-67a18ab9b8ae
NOTE: There were 1 observations read from the data set WORK.JOBPARAM.
NOTE: DATA statement used (Total process time):
      real time           1.39 seconds
      cpu time            0.01 seconds


MPRINT(LAUNCHDASHBOARD):   options nomprint;
/clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun2/qc_adam -> ebc6d314-1c8c-4105-ac3e-67a18ab9b8ae -> STARTED
MPRINT(LAUNCHDASHBOARD):   data _null_;
MPRINT(LAUNCHDASHBOARD):   call sleep(1000,.01);
MPRINT(LAUNCHDASHBOARD):   * 10 seconds;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;
The item exists: /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun2/qc_tlf
MPRINT(LAUNCHDASHBOARD):   data jobparam;
MPRINT(LAUNCHDASHBOARD):   length name type fileversion $20 value $100 includeSubFolders 8;
MPRINT(LAUNCHDASHBOARD):   fileversion = "";
MPRINT(LAUNCHDASHBOARD):   includeSubFolders = 1;
MPRINT(LAUNCHDASHBOARD):   name = "refolder";
                                                           The SAS System

MPRINT(LAUNCHDASHBOARD):   type = "FOLDER";
MPRINT(LAUNCHDASHBOARD):   value = "/clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun2/qc_tlf";
MPRINT(LAUNCHDASHBOARD):   output;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;


NOTE: SAS Life Science Analytics Framework Macro: *  Submitted job /general/biostat/jobs/dashboard/dev/jobs/pp.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_submitjob
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: SAS Life Science Analytics Framework Macro: * sas_dsname = jobparam
NOTE: SAS Life Science Analytics Framework Macro: * _lsafJobSubmissionId_= 60054a63-e85b-4e5c-8b3c-22f6e0f6343d
NOTE: There were 1 observations read from the data set WORK.JOBPARAM.
NOTE: DATA statement used (Total process time):
      real time           1.34 seconds
      cpu time            0.00 seconds


MPRINT(LAUNCHDASHBOARD):   options nomprint;
/clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun2/qc_tlf -> 60054a63-e85b-4e5c-8b3c-22f6e0f6343d -> STARTED
MPRINT(LAUNCHDASHBOARD):   data _null_;
MPRINT(LAUNCHDASHBOARD):   call sleep(1000,.01);
MPRINT(LAUNCHDASHBOARD):   * 10 seconds;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;
The item exists: /clinical/argx-113/pemphigus/argx-113-1905/biostat/staging/patient_profiles
MPRINT(LAUNCHDASHBOARD):   data jobparam;
MPRINT(LAUNCHDASHBOARD):   length name type fileversion $20 value $100 includeSubFolders 8;
MPRINT(LAUNCHDASHBOARD):   fileversion = "";
MPRINT(LAUNCHDASHBOARD):   includeSubFolders = 1;
MPRINT(LAUNCHDASHBOARD):   name = "refolder";
MPRINT(LAUNCHDASHBOARD):   type = "FOLDER";
MPRINT(LAUNCHDASHBOARD):   value = "/clinical/argx-113/pemphigus/argx-113-1905/biostat/staging/patient_profiles";
MPRINT(LAUNCHDASHBOARD):   output;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;


NOTE: SAS Life Science Analytics Framework Macro: *  Submitted job /general/biostat/jobs/dashboard/dev/jobs/pp.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_submitjob
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: SAS Life Science Analytics Framework Macro: * sas_dsname = jobparam
NOTE: SAS Life Science Analytics Framework Macro: * _lsafJobSubmissionId_= 3f9eeff4-7e09-4d81-8146-6e8c97ba0b99
NOTE: There were 1 observations read from the data set WORK.JOBPARAM.
NOTE: DATA statement used (Total process time):
      real time           1.36 seconds
      cpu time            0.00 seconds


MPRINT(LAUNCHDASHBOARD):   options nomprint;
/clinical/argx-113/pemphigus/argx-113-1905/biostat/staging/patient_profiles -> 3f9eeff4-7e09-4d81-8146-6e8c97ba0b99 -> STARTED
MPRINT(LAUNCHDASHBOARD):   data _null_;
MPRINT(LAUNCHDASHBOARD):   call sleep(1000,.01);
                                                           The SAS System

MPRINT(LAUNCHDASHBOARD):   * 10 seconds;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;
The item exists: /clinical/argx-113/pemphigus/argx-113-9201/biostat/staging/testrun1/qc_adam
MPRINT(LAUNCHDASHBOARD):   data jobparam;
MPRINT(LAUNCHDASHBOARD):   length name type fileversion $20 value $100 includeSubFolders 8;
MPRINT(LAUNCHDASHBOARD):   fileversion = "";
MPRINT(LAUNCHDASHBOARD):   includeSubFolders = 1;
MPRINT(LAUNCHDASHBOARD):   name = "refolder";
MPRINT(LAUNCHDASHBOARD):   type = "FOLDER";
MPRINT(LAUNCHDASHBOARD):   value = "/clinical/argx-113/pemphigus/argx-113-9201/biostat/staging/testrun1/qc_adam";
MPRINT(LAUNCHDASHBOARD):   output;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;


NOTE: SAS Life Science Analytics Framework Macro: *  Submitted job /general/biostat/jobs/dashboard/dev/jobs/pp.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_submitjob
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: SAS Life Science Analytics Framework Macro: * sas_dsname = jobparam
NOTE: SAS Life Science Analytics Framework Macro: * _lsafJobSubmissionId_= 547ab430-9975-47dc-bf96-f902a074d2fe
NOTE: There were 1 observations read from the data set WORK.JOBPARAM.
NOTE: DATA statement used (Total process time):
      real time           1.32 seconds
      cpu time            0.01 seconds


MPRINT(LAUNCHDASHBOARD):   options nomprint;
/clinical/argx-113/pemphigus/argx-113-9201/biostat/staging/testrun1/qc_adam -> 547ab430-9975-47dc-bf96-f902a074d2fe -> STARTED
MPRINT(LAUNCHDASHBOARD):   data _null_;
MPRINT(LAUNCHDASHBOARD):   call sleep(1000,.01);
MPRINT(LAUNCHDASHBOARD):   * 10 seconds;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;
The item exists: /clinical/argx-113/pemphigus/argx-113-9201/biostat/staging/testrun1/qc_tlf
MPRINT(LAUNCHDASHBOARD):   data jobparam;
MPRINT(LAUNCHDASHBOARD):   length name type fileversion $20 value $100 includeSubFolders 8;
MPRINT(LAUNCHDASHBOARD):   fileversion = "";
MPRINT(LAUNCHDASHBOARD):   includeSubFolders = 1;
MPRINT(LAUNCHDASHBOARD):   name = "refolder";
MPRINT(LAUNCHDASHBOARD):   type = "FOLDER";
MPRINT(LAUNCHDASHBOARD):   value = "/clinical/argx-113/pemphigus/argx-113-9201/biostat/staging/testrun1/qc_tlf";
MPRINT(LAUNCHDASHBOARD):   output;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;


NOTE: SAS Life Science Analytics Framework Macro: *  Submitted job /general/biostat/jobs/dashboard/dev/jobs/pp.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_submitjob
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: SAS Life Science Analytics Framework Macro: * sas_dsname = jobparam
NOTE: SAS Life Science Analytics Framework Macro: * _lsafJobSubmissionId_= a0c8c029-3c5f-45bd-88cb-b5e31d75972b
NOTE: There were 1 observations read from the data set WORK.JOBPARAM.
                                                           The SAS System

NOTE: DATA statement used (Total process time):
      real time           1.34 seconds
      cpu time            0.00 seconds


MPRINT(LAUNCHDASHBOARD):   options nomprint;
/clinical/argx-113/pemphigus/argx-113-9201/biostat/staging/testrun1/qc_tlf -> a0c8c029-3c5f-45bd-88cb-b5e31d75972b -> STARTED
MPRINT(LAUNCHDASHBOARD):   data _null_;
MPRINT(LAUNCHDASHBOARD):   call sleep(1000,.01);
MPRINT(LAUNCHDASHBOARD):   * 10 seconds;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;
The item exists: /clinical/argx-117/hv/argx-117-1901/biostat/staging/mad5_tables
MPRINT(LAUNCHDASHBOARD):   data jobparam;
MPRINT(LAUNCHDASHBOARD):   length name type fileversion $20 value $100 includeSubFolders 8;
MPRINT(LAUNCHDASHBOARD):   fileversion = "";
MPRINT(LAUNCHDASHBOARD):   includeSubFolders = 1;
MPRINT(LAUNCHDASHBOARD):   name = "refolder";
MPRINT(LAUNCHDASHBOARD):   type = "FOLDER";
MPRINT(LAUNCHDASHBOARD):   value = "/clinical/argx-117/hv/argx-117-1901/biostat/staging/mad5_tables";
MPRINT(LAUNCHDASHBOARD):   output;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;


NOTE: SAS Life Science Analytics Framework Macro: *  Submitted job /general/biostat/jobs/dashboard/dev/jobs/pp.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_submitjob
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: SAS Life Science Analytics Framework Macro: * sas_dsname = jobparam
NOTE: SAS Life Science Analytics Framework Macro: * _lsafJobSubmissionId_= 619de6ae-56d2-4521-90e1-b8713d57b892
NOTE: There were 1 observations read from the data set WORK.JOBPARAM.
NOTE: DATA statement used (Total process time):
      real time           1.34 seconds
      cpu time            0.00 seconds


MPRINT(LAUNCHDASHBOARD):   options nomprint;
/clinical/argx-117/hv/argx-117-1901/biostat/staging/mad5_tables -> 619de6ae-56d2-4521-90e1-b8713d57b892 -> STARTED
MPRINT(LAUNCHDASHBOARD):   data _null_;
MPRINT(LAUNCHDASHBOARD):   call sleep(1000,.01);
MPRINT(LAUNCHDASHBOARD):   * 10 seconds;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;
The item exists: /clinical/argx-117/mmn/argx-117-2002/biostat/staging/patient_profiles
MPRINT(LAUNCHDASHBOARD):   data jobparam;
MPRINT(LAUNCHDASHBOARD):   length name type fileversion $20 value $100 includeSubFolders 8;
MPRINT(LAUNCHDASHBOARD):   fileversion = "";
MPRINT(LAUNCHDASHBOARD):   includeSubFolders = 1;
MPRINT(LAUNCHDASHBOARD):   name = "refolder";
MPRINT(LAUNCHDASHBOARD):   type = "FOLDER";
MPRINT(LAUNCHDASHBOARD):   value = "/clinical/argx-117/mmn/argx-117-2002/biostat/staging/patient_profiles";
MPRINT(LAUNCHDASHBOARD):   output;
MPRINT(LAUNCHDASHBOARD):   run;
                                                           The SAS System

MPRINT(LAUNCHDASHBOARD):   options nomprint;


NOTE: SAS Life Science Analytics Framework Macro: *  Submitted job /general/biostat/jobs/dashboard/dev/jobs/pp.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_submitjob
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: SAS Life Science Analytics Framework Macro: * sas_dsname = jobparam
NOTE: SAS Life Science Analytics Framework Macro: * _lsafJobSubmissionId_= 57198c22-eab5-4b83-be36-2c0e746dd741
NOTE: There were 1 observations read from the data set WORK.JOBPARAM.
NOTE: DATA statement used (Total process time):
      real time           1.36 seconds
      cpu time            0.00 seconds


MPRINT(LAUNCHDASHBOARD):   options nomprint;
/clinical/argx-117/mmn/argx-117-2002/biostat/staging/patient_profiles -> 57198c22-eab5-4b83-be36-2c0e746dd741 -> STARTED
MPRINT(LAUNCHDASHBOARD):   data _null_;
MPRINT(LAUNCHDASHBOARD):   call sleep(1000,.01);
MPRINT(LAUNCHDASHBOARD):   * 10 seconds;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   data _null_;
MPRINT(LAUNCHDASHBOARD):   call sleep(2000,.01);
MPRINT(LAUNCHDASHBOARD):   * 20 seconds;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=1 -> /clinical/argx-113/bp/argx-113-2009/biostat/staging/patient_profiles -> 1887e400-376e-4015-94a1-3459480b5709 ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=2 -> /clinical/argx-113/cidp/argx-113-1802/biostat/staging/figures_ba -> 3c7587db-4782-4ecf-a878-aa6801473830 ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=3 -> /clinical/argx-113/cidp/argx-113-1802/biostat/staging/patient-profiles -> 06fc2c87-ec1a-4d8c-aa7e-1abbc798214d ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=4 -> /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun1/qc_adam -> 6f863665-58c9-4aa0-820c-393ec730b6af ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=5 -> /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/figures_ba -> 5d26b5af-29c7-4c88-a16c-4c34acc09531 ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=6 -> /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_adam -> 9b779a85-5b6d-4ac8-afac-342335fa95fc ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=7 -> /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_tlf -> d9c63c8c-8139-476a-a4eb-d1f3db9051a3 ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=8 -> /clinical/argx-113/cidp/argx-113-1902/biostat/staging/figures -> 911f2a07-ff63-43a1-9606-841628701d01 -> COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
                                                           The SAS System

z=9 -> /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_adam -> b46758fe-2c7c-404c-9596-dbb780e09fa9 ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=10 -> /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_tlf -> 73ad341f-536a-4069-80f3-c5d404559ac0 ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=11 -> /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20231206/qc_adam -> 887903a5-ddcf-4a7b-978e-31758211e8af
-> COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=12 -> /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20231206/qc_tlf -> a5bf8709-b0a6-45b5-b8da-ef2413adee5e ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=13 -> /clinical/argx-113/cidp/argx-113-1902/biostat/staging/patient-profiles -> 783f4cfc-0ba4-456f-b215-2590208573e2 ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=14 -> /clinical/argx-113/cidp/argx-113-1902/biostat/staging/testrun1/figures -> 87b33b33-7217-4692-bdfe-b1b112ccadca ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=15 -> /clinical/argx-113/cidp/argx-113-9303/biostat/staging/testrun1/figures_ba -> 9c01f918-d595-43d9-9f6a-2843ab6f2891 ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=16 -> /clinical/argx-113/cidp/argx-113-9303/biostat/staging/testrun1/qc_adam -> c1caf5b1-5a60-4dc2-9fc6-023de6c2fa72 ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=17 -> /clinical/argx-113/itp/argx-113-1801/biostat/staging/patient_profiles -> 260d3430-c688-47e7-89b1-de25b42ae9a4 ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=18 -> /clinical/argx-113/itp/argx-113-1801/biostat/staging/posthoc -> adf9d6d3-c87e-4a7a-9859-c315bf324dab -> COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=19 -> /clinical/argx-113/itp/argx-113-1803/biostat/staging/patient_profiles -> 5d2847a9-e48a-4d42-aa43-6807a552bc80 ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=20 -> /clinical/argx-113/itp/argx-113-1803/biostat/staging/posthoc -> 0956ff24-fe70-4ccd-9b4f-3094f5a57674 -> COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=21 -> /clinical/argx-113/itp/argx-113-2004/biostat/staging/adhoc -> 16038b7a-486f-455b-a832-ec9c79e6b8a9 -> COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=22 -> /clinical/argx-113/itp/argx-113-2004/biostat/staging/patient_profiles -> e5581aef-ca00-4dd2-8430-5b11242935d7 ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=23 -> /clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/qc_adam -> f9bdaeae-d31a-436e-b343-9e7aa191dd65 ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
                                                           The SAS System

z=24 -> /clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/qc_tlf -> 1e34cf24-5543-4cd5-b737-4f93f8d75c6b ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=25 -> /clinical/argx-113/itp/argx-113-2005/biostat/staging/testrun1/qc_adam -> 3c736aaa-4be9-466f-98dd-38b4711c22af ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=26 -> /clinical/argx-113/itp/argx-113-9101/biostat/staging/posthoc -> 9f00b250-ca98-42a5-b2e6-a16908734265 -> COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=27 -> /clinical/argx-113/mg/argx-113-1602/biostat/staging/fda_irr -> 2ee7cfcf-4628-47fb-b162-ca6653393dee -> COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=28 -> /clinical/argx-113/mg/argx-113-1704/biostat/staging/fda_irr -> 9f68451c-1efb-4d19-ac83-80f78747dd0e -> COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=29 -> /clinical/argx-113/mg/argx-113-1705/biostat/staging/fda_irr -> 4e5ca58b-ae10-45f5-9cd0-7863644db92e -> COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=30 -> /clinical/argx-113/mg/argx-113-1705/biostat/staging/final/qc_tlf -> ad15f7df-218d-45f7-9281-34053ec0eee6 ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=31 -> /clinical/argx-113/mg/argx-113-1705/biostat/staging/final_posthoc -> 0e618438-b49d-435c-9234-860ee3ad148a ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=32 -> /clinical/argx-113/mg/argx-113-1705/biostat/staging/ma2023 -> cf6abbbf-9428-4231-908e-8859c497937c -> COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=33 -> /clinical/argx-113/mg/argx-113-2001/biostat/staging/ema -> 32318abf-53ba-4fdd-9e98-cf3b1748cce8 -> COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=34 -> /clinical/argx-113/mg/argx-113-2002/biostat/staging/ema -> b04181d1-7d00-4800-8319-49a1f7446c30 -> COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=35 -> /clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2_1yr/qc_adam -> 55ea2159-d1fa-4aa0-a88a-ee63475a439a ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=36 -> /clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2_1yr/qc_tlf -> f838a3e1-be07-4d8c-a7ac-49c9ef6f6203 ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=37 -> /clinical/argx-113/mg/argx-113-2002/biostat/staging/patient_profiles -> 78d7d15f-2e88-4242-a076-19cba1a4463f ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=38 -> /clinical/argx-113/mg/argx-113-2002/biostat/staging/pmda_1yr -> b61387d8-1ac6-4528-b624-198a50ccc542 -> COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=39 -> /clinical/argx-113/mg/argx-113-9041/biostat/staging/final_adam -> a1444414-d405-4bba-8593-61d9d142f45b ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=40 -> /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/patient_profiles -> b8d9a5b2-34f5-4383-8f66-203b76dce617 ->
COMPLETED_SUCCESSFUL
                                                           The SAS System

MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=41 -> /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun2/qc_adam -> ebc6d314-1c8c-4105-ac3e-67a18ab9b8ae ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=42 -> /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun2/qc_tlf -> 60054a63-e85b-4e5c-8b3c-22f6e0f6343d ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=43 -> /clinical/argx-113/pemphigus/argx-113-1905/biostat/staging/patient_profiles -> 3f9eeff4-7e09-4d81-8146-6e8c97ba0b99 ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=44 -> /clinical/argx-113/pemphigus/argx-113-9201/biostat/staging/testrun1/qc_adam -> 547ab430-9975-47dc-bf96-f902a074d2fe ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=45 -> /clinical/argx-113/pemphigus/argx-113-9201/biostat/staging/testrun1/qc_tlf -> a0c8c029-3c5f-45bd-88cb-b5e31d75972b ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=46 -> /clinical/argx-117/hv/argx-117-1901/biostat/staging/mad5_tables -> 619de6ae-56d2-4521-90e1-b8713d57b892 ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=47 -> /clinical/argx-117/mmn/argx-117-2002/biostat/staging/patient_profiles -> 57198c22-eab5-4b83-be36-2c0e746dd741 ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   data _null_;
MPRINT(LAUNCHDASHBOARD):   call sleep(2000,.01);
MPRINT(LAUNCHDASHBOARD):   * 20 seconds;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=1 -> /clinical/argx-113/bp/argx-113-2009/biostat/staging/patient_profiles -> 1887e400-376e-4015-94a1-3459480b5709 ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=2 -> /clinical/argx-113/cidp/argx-113-1802/biostat/staging/figures_ba -> 3c7587db-4782-4ecf-a878-aa6801473830 ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=3 -> /clinical/argx-113/cidp/argx-113-1802/biostat/staging/patient-profiles -> 06fc2c87-ec1a-4d8c-aa7e-1abbc798214d ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=4 -> /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun1/qc_adam -> 6f863665-58c9-4aa0-820c-393ec730b6af ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=5 -> /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/figures_ba -> 5d26b5af-29c7-4c88-a16c-4c34acc09531 ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=6 -> /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_adam -> 9b779a85-5b6d-4ac8-afac-342335fa95fc ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
                                                           The SAS System

z=7 -> /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_tlf -> d9c63c8c-8139-476a-a4eb-d1f3db9051a3 ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=8 -> /clinical/argx-113/cidp/argx-113-1902/biostat/staging/figures -> 911f2a07-ff63-43a1-9606-841628701d01 -> COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=9 -> /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_adam -> b46758fe-2c7c-404c-9596-dbb780e09fa9 ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=10 -> /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_tlf -> 73ad341f-536a-4069-80f3-c5d404559ac0 ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=11 -> /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20231206/qc_adam -> 887903a5-ddcf-4a7b-978e-31758211e8af
-> COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=12 -> /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20231206/qc_tlf -> a5bf8709-b0a6-45b5-b8da-ef2413adee5e ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=13 -> /clinical/argx-113/cidp/argx-113-1902/biostat/staging/patient-profiles -> 783f4cfc-0ba4-456f-b215-2590208573e2 ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=14 -> /clinical/argx-113/cidp/argx-113-1902/biostat/staging/testrun1/figures -> 87b33b33-7217-4692-bdfe-b1b112ccadca ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=15 -> /clinical/argx-113/cidp/argx-113-9303/biostat/staging/testrun1/figures_ba -> 9c01f918-d595-43d9-9f6a-2843ab6f2891 ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=16 -> /clinical/argx-113/cidp/argx-113-9303/biostat/staging/testrun1/qc_adam -> c1caf5b1-5a60-4dc2-9fc6-023de6c2fa72 ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=17 -> /clinical/argx-113/itp/argx-113-1801/biostat/staging/patient_profiles -> 260d3430-c688-47e7-89b1-de25b42ae9a4 ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=18 -> /clinical/argx-113/itp/argx-113-1801/biostat/staging/posthoc -> adf9d6d3-c87e-4a7a-9859-c315bf324dab -> COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=19 -> /clinical/argx-113/itp/argx-113-1803/biostat/staging/patient_profiles -> 5d2847a9-e48a-4d42-aa43-6807a552bc80 ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=20 -> /clinical/argx-113/itp/argx-113-1803/biostat/staging/posthoc -> 0956ff24-fe70-4ccd-9b4f-3094f5a57674 -> COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=21 -> /clinical/argx-113/itp/argx-113-2004/biostat/staging/adhoc -> 16038b7a-486f-455b-a832-ec9c79e6b8a9 -> COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=22 -> /clinical/argx-113/itp/argx-113-2004/biostat/staging/patient_profiles -> e5581aef-ca00-4dd2-8430-5b11242935d7 ->
COMPLETED_SUCCESSFUL
                                                           The SAS System

MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=23 -> /clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/qc_adam -> f9bdaeae-d31a-436e-b343-9e7aa191dd65 ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=24 -> /clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/qc_tlf -> 1e34cf24-5543-4cd5-b737-4f93f8d75c6b ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=25 -> /clinical/argx-113/itp/argx-113-2005/biostat/staging/testrun1/qc_adam -> 3c736aaa-4be9-466f-98dd-38b4711c22af ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=26 -> /clinical/argx-113/itp/argx-113-9101/biostat/staging/posthoc -> 9f00b250-ca98-42a5-b2e6-a16908734265 -> COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=27 -> /clinical/argx-113/mg/argx-113-1602/biostat/staging/fda_irr -> 2ee7cfcf-4628-47fb-b162-ca6653393dee -> COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=28 -> /clinical/argx-113/mg/argx-113-1704/biostat/staging/fda_irr -> 9f68451c-1efb-4d19-ac83-80f78747dd0e -> COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=29 -> /clinical/argx-113/mg/argx-113-1705/biostat/staging/fda_irr -> 4e5ca58b-ae10-45f5-9cd0-7863644db92e -> COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=30 -> /clinical/argx-113/mg/argx-113-1705/biostat/staging/final/qc_tlf -> ad15f7df-218d-45f7-9281-34053ec0eee6 ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=31 -> /clinical/argx-113/mg/argx-113-1705/biostat/staging/final_posthoc -> 0e618438-b49d-435c-9234-860ee3ad148a ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=32 -> /clinical/argx-113/mg/argx-113-1705/biostat/staging/ma2023 -> cf6abbbf-9428-4231-908e-8859c497937c -> COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=33 -> /clinical/argx-113/mg/argx-113-2001/biostat/staging/ema -> 32318abf-53ba-4fdd-9e98-cf3b1748cce8 -> COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=34 -> /clinical/argx-113/mg/argx-113-2002/biostat/staging/ema -> b04181d1-7d00-4800-8319-49a1f7446c30 -> COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=35 -> /clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2_1yr/qc_adam -> 55ea2159-d1fa-4aa0-a88a-ee63475a439a ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=36 -> /clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2_1yr/qc_tlf -> f838a3e1-be07-4d8c-a7ac-49c9ef6f6203 ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=37 -> /clinical/argx-113/mg/argx-113-2002/biostat/staging/patient_profiles -> 78d7d15f-2e88-4242-a076-19cba1a4463f ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=38 -> /clinical/argx-113/mg/argx-113-2002/biostat/staging/pmda_1yr -> b61387d8-1ac6-4528-b624-198a50ccc542 -> COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
                                                           The SAS System

z=39 -> /clinical/argx-113/mg/argx-113-9041/biostat/staging/final_adam -> a1444414-d405-4bba-8593-61d9d142f45b ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=40 -> /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/patient_profiles -> b8d9a5b2-34f5-4383-8f66-203b76dce617 ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=41 -> /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun2/qc_adam -> ebc6d314-1c8c-4105-ac3e-67a18ab9b8ae ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=42 -> /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun2/qc_tlf -> 60054a63-e85b-4e5c-8b3c-22f6e0f6343d ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=43 -> /clinical/argx-113/pemphigus/argx-113-1905/biostat/staging/patient_profiles -> 3f9eeff4-7e09-4d81-8146-6e8c97ba0b99 ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=44 -> /clinical/argx-113/pemphigus/argx-113-9201/biostat/staging/testrun1/qc_adam -> 547ab430-9975-47dc-bf96-f902a074d2fe ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=45 -> /clinical/argx-113/pemphigus/argx-113-9201/biostat/staging/testrun1/qc_tlf -> a0c8c029-3c5f-45bd-88cb-b5e31d75972b ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=46 -> /clinical/argx-117/hv/argx-117-1901/biostat/staging/mad5_tables -> 619de6ae-56d2-4521-90e1-b8713d57b892 ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=47 -> /clinical/argx-117/mmn/argx-117-2002/biostat/staging/patient_profiles -> 57198c22-eab5-4b83-be36-2c0e746dd741 ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   data _null_;
MPRINT(LAUNCHDASHBOARD):   call sleep(2000,.01);
MPRINT(LAUNCHDASHBOARD):   * 20 seconds;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=1 -> /clinical/argx-113/bp/argx-113-2009/biostat/staging/patient_profiles -> 1887e400-376e-4015-94a1-3459480b5709 ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=2 -> /clinical/argx-113/cidp/argx-113-1802/biostat/staging/figures_ba -> 3c7587db-4782-4ecf-a878-aa6801473830 ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=3 -> /clinical/argx-113/cidp/argx-113-1802/biostat/staging/patient-profiles -> 06fc2c87-ec1a-4d8c-aa7e-1abbc798214d ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=4 -> /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun1/qc_adam -> 6f863665-58c9-4aa0-820c-393ec730b6af ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=5 -> /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/figures_ba -> 5d26b5af-29c7-4c88-a16c-4c34acc09531 ->
COMPLETED_SUCCESSFUL
                                                           The SAS System

MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=6 -> /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_adam -> 9b779a85-5b6d-4ac8-afac-342335fa95fc ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=7 -> /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_tlf -> d9c63c8c-8139-476a-a4eb-d1f3db9051a3 ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=8 -> /clinical/argx-113/cidp/argx-113-1902/biostat/staging/figures -> 911f2a07-ff63-43a1-9606-841628701d01 -> COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=9 -> /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_adam -> b46758fe-2c7c-404c-9596-dbb780e09fa9 ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=10 -> /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_tlf -> 73ad341f-536a-4069-80f3-c5d404559ac0 ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=11 -> /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20231206/qc_adam -> 887903a5-ddcf-4a7b-978e-31758211e8af
-> COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=12 -> /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20231206/qc_tlf -> a5bf8709-b0a6-45b5-b8da-ef2413adee5e ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=13 -> /clinical/argx-113/cidp/argx-113-1902/biostat/staging/patient-profiles -> 783f4cfc-0ba4-456f-b215-2590208573e2 ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=14 -> /clinical/argx-113/cidp/argx-113-1902/biostat/staging/testrun1/figures -> 87b33b33-7217-4692-bdfe-b1b112ccadca ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=15 -> /clinical/argx-113/cidp/argx-113-9303/biostat/staging/testrun1/figures_ba -> 9c01f918-d595-43d9-9f6a-2843ab6f2891 ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=16 -> /clinical/argx-113/cidp/argx-113-9303/biostat/staging/testrun1/qc_adam -> c1caf5b1-5a60-4dc2-9fc6-023de6c2fa72 ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=17 -> /clinical/argx-113/itp/argx-113-1801/biostat/staging/patient_profiles -> 260d3430-c688-47e7-89b1-de25b42ae9a4 ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=18 -> /clinical/argx-113/itp/argx-113-1801/biostat/staging/posthoc -> adf9d6d3-c87e-4a7a-9859-c315bf324dab -> COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=19 -> /clinical/argx-113/itp/argx-113-1803/biostat/staging/patient_profiles -> 5d2847a9-e48a-4d42-aa43-6807a552bc80 ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=20 -> /clinical/argx-113/itp/argx-113-1803/biostat/staging/posthoc -> 0956ff24-fe70-4ccd-9b4f-3094f5a57674 -> COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
                                                           The SAS System

z=21 -> /clinical/argx-113/itp/argx-113-2004/biostat/staging/adhoc -> 16038b7a-486f-455b-a832-ec9c79e6b8a9 -> COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=22 -> /clinical/argx-113/itp/argx-113-2004/biostat/staging/patient_profiles -> e5581aef-ca00-4dd2-8430-5b11242935d7 ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=23 -> /clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/qc_adam -> f9bdaeae-d31a-436e-b343-9e7aa191dd65 ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=24 -> /clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/qc_tlf -> 1e34cf24-5543-4cd5-b737-4f93f8d75c6b ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=25 -> /clinical/argx-113/itp/argx-113-2005/biostat/staging/testrun1/qc_adam -> 3c736aaa-4be9-466f-98dd-38b4711c22af ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=26 -> /clinical/argx-113/itp/argx-113-9101/biostat/staging/posthoc -> 9f00b250-ca98-42a5-b2e6-a16908734265 -> COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=27 -> /clinical/argx-113/mg/argx-113-1602/biostat/staging/fda_irr -> 2ee7cfcf-4628-47fb-b162-ca6653393dee -> COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=28 -> /clinical/argx-113/mg/argx-113-1704/biostat/staging/fda_irr -> 9f68451c-1efb-4d19-ac83-80f78747dd0e -> COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=29 -> /clinical/argx-113/mg/argx-113-1705/biostat/staging/fda_irr -> 4e5ca58b-ae10-45f5-9cd0-7863644db92e -> COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=30 -> /clinical/argx-113/mg/argx-113-1705/biostat/staging/final/qc_tlf -> ad15f7df-218d-45f7-9281-34053ec0eee6 ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=31 -> /clinical/argx-113/mg/argx-113-1705/biostat/staging/final_posthoc -> 0e618438-b49d-435c-9234-860ee3ad148a ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=32 -> /clinical/argx-113/mg/argx-113-1705/biostat/staging/ma2023 -> cf6abbbf-9428-4231-908e-8859c497937c -> COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=33 -> /clinical/argx-113/mg/argx-113-2001/biostat/staging/ema -> 32318abf-53ba-4fdd-9e98-cf3b1748cce8 -> COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=34 -> /clinical/argx-113/mg/argx-113-2002/biostat/staging/ema -> b04181d1-7d00-4800-8319-49a1f7446c30 -> COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=35 -> /clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2_1yr/qc_adam -> 55ea2159-d1fa-4aa0-a88a-ee63475a439a ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=36 -> /clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2_1yr/qc_tlf -> f838a3e1-be07-4d8c-a7ac-49c9ef6f6203 ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=37 -> /clinical/argx-113/mg/argx-113-2002/biostat/staging/patient_profiles -> 78d7d15f-2e88-4242-a076-19cba1a4463f ->
                                                           The SAS System

COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=38 -> /clinical/argx-113/mg/argx-113-2002/biostat/staging/pmda_1yr -> b61387d8-1ac6-4528-b624-198a50ccc542 -> COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=39 -> /clinical/argx-113/mg/argx-113-9041/biostat/staging/final_adam -> a1444414-d405-4bba-8593-61d9d142f45b ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=40 -> /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/patient_profiles -> b8d9a5b2-34f5-4383-8f66-203b76dce617 ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=41 -> /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun2/qc_adam -> ebc6d314-1c8c-4105-ac3e-67a18ab9b8ae ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=42 -> /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun2/qc_tlf -> 60054a63-e85b-4e5c-8b3c-22f6e0f6343d ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=43 -> /clinical/argx-113/pemphigus/argx-113-1905/biostat/staging/patient_profiles -> 3f9eeff4-7e09-4d81-8146-6e8c97ba0b99 ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=44 -> /clinical/argx-113/pemphigus/argx-113-9201/biostat/staging/testrun1/qc_adam -> 547ab430-9975-47dc-bf96-f902a074d2fe ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=45 -> /clinical/argx-113/pemphigus/argx-113-9201/biostat/staging/testrun1/qc_tlf -> a0c8c029-3c5f-45bd-88cb-b5e31d75972b ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=46 -> /clinical/argx-117/hv/argx-117-1901/biostat/staging/mad5_tables -> 619de6ae-56d2-4521-90e1-b8713d57b892 ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=47 -> /clinical/argx-117/mmn/argx-117-2002/biostat/staging/patient_profiles -> 57198c22-eab5-4b83-be36-2c0e746dd741 ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   data _null_;
MPRINT(LAUNCHDASHBOARD):   call sleep(2000,.01);
MPRINT(LAUNCHDASHBOARD):   * 20 seconds;
MPRINT(LAUNCHDASHBOARD):   run;
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=1 -> /clinical/argx-113/bp/argx-113-2009/biostat/staging/patient_profiles -> 1887e400-376e-4015-94a1-3459480b5709 ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=2 -> /clinical/argx-113/cidp/argx-113-1802/biostat/staging/figures_ba -> 3c7587db-4782-4ecf-a878-aa6801473830 ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=3 -> /clinical/argx-113/cidp/argx-113-1802/biostat/staging/patient-profiles -> 06fc2c87-ec1a-4d8c-aa7e-1abbc798214d ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
                                                           The SAS System

z=4 -> /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun1/qc_adam -> 6f863665-58c9-4aa0-820c-393ec730b6af ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=5 -> /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/figures_ba -> 5d26b5af-29c7-4c88-a16c-4c34acc09531 ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=6 -> /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_adam -> 9b779a85-5b6d-4ac8-afac-342335fa95fc ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=7 -> /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_tlf -> d9c63c8c-8139-476a-a4eb-d1f3db9051a3 ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=8 -> /clinical/argx-113/cidp/argx-113-1902/biostat/staging/figures -> 911f2a07-ff63-43a1-9606-841628701d01 -> COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=9 -> /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_adam -> b46758fe-2c7c-404c-9596-dbb780e09fa9 ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=10 -> /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_tlf -> 73ad341f-536a-4069-80f3-c5d404559ac0 ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=11 -> /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20231206/qc_adam -> 887903a5-ddcf-4a7b-978e-31758211e8af
-> COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=12 -> /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20231206/qc_tlf -> a5bf8709-b0a6-45b5-b8da-ef2413adee5e ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=13 -> /clinical/argx-113/cidp/argx-113-1902/biostat/staging/patient-profiles -> 783f4cfc-0ba4-456f-b215-2590208573e2 ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=14 -> /clinical/argx-113/cidp/argx-113-1902/biostat/staging/testrun1/figures -> 87b33b33-7217-4692-bdfe-b1b112ccadca ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=15 -> /clinical/argx-113/cidp/argx-113-9303/biostat/staging/testrun1/figures_ba -> 9c01f918-d595-43d9-9f6a-2843ab6f2891 ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=16 -> /clinical/argx-113/cidp/argx-113-9303/biostat/staging/testrun1/qc_adam -> c1caf5b1-5a60-4dc2-9fc6-023de6c2fa72 ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=17 -> /clinical/argx-113/itp/argx-113-1801/biostat/staging/patient_profiles -> 260d3430-c688-47e7-89b1-de25b42ae9a4 ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=18 -> /clinical/argx-113/itp/argx-113-1801/biostat/staging/posthoc -> adf9d6d3-c87e-4a7a-9859-c315bf324dab -> COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
                                                           The SAS System

z=19 -> /clinical/argx-113/itp/argx-113-1803/biostat/staging/patient_profiles -> 5d2847a9-e48a-4d42-aa43-6807a552bc80 ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=20 -> /clinical/argx-113/itp/argx-113-1803/biostat/staging/posthoc -> 0956ff24-fe70-4ccd-9b4f-3094f5a57674 -> COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=21 -> /clinical/argx-113/itp/argx-113-2004/biostat/staging/adhoc -> 16038b7a-486f-455b-a832-ec9c79e6b8a9 -> COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=22 -> /clinical/argx-113/itp/argx-113-2004/biostat/staging/patient_profiles -> e5581aef-ca00-4dd2-8430-5b11242935d7 ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=23 -> /clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/qc_adam -> f9bdaeae-d31a-436e-b343-9e7aa191dd65 ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=24 -> /clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/qc_tlf -> 1e34cf24-5543-4cd5-b737-4f93f8d75c6b ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=25 -> /clinical/argx-113/itp/argx-113-2005/biostat/staging/testrun1/qc_adam -> 3c736aaa-4be9-466f-98dd-38b4711c22af ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=26 -> /clinical/argx-113/itp/argx-113-9101/biostat/staging/posthoc -> 9f00b250-ca98-42a5-b2e6-a16908734265 -> COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=27 -> /clinical/argx-113/mg/argx-113-1602/biostat/staging/fda_irr -> 2ee7cfcf-4628-47fb-b162-ca6653393dee -> COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=28 -> /clinical/argx-113/mg/argx-113-1704/biostat/staging/fda_irr -> 9f68451c-1efb-4d19-ac83-80f78747dd0e -> COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=29 -> /clinical/argx-113/mg/argx-113-1705/biostat/staging/fda_irr -> 4e5ca58b-ae10-45f5-9cd0-7863644db92e -> COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=30 -> /clinical/argx-113/mg/argx-113-1705/biostat/staging/final/qc_tlf -> ad15f7df-218d-45f7-9281-34053ec0eee6 ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=31 -> /clinical/argx-113/mg/argx-113-1705/biostat/staging/final_posthoc -> 0e618438-b49d-435c-9234-860ee3ad148a ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=32 -> /clinical/argx-113/mg/argx-113-1705/biostat/staging/ma2023 -> cf6abbbf-9428-4231-908e-8859c497937c -> COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=33 -> /clinical/argx-113/mg/argx-113-2001/biostat/staging/ema -> 32318abf-53ba-4fdd-9e98-cf3b1748cce8 -> COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=34 -> /clinical/argx-113/mg/argx-113-2002/biostat/staging/ema -> b04181d1-7d00-4800-8319-49a1f7446c30 -> COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=35 -> /clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2_1yr/qc_adam -> 55ea2159-d1fa-4aa0-a88a-ee63475a439a ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
                                                           The SAS System

z=36 -> /clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2_1yr/qc_tlf -> f838a3e1-be07-4d8c-a7ac-49c9ef6f6203 ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=37 -> /clinical/argx-113/mg/argx-113-2002/biostat/staging/patient_profiles -> 78d7d15f-2e88-4242-a076-19cba1a4463f ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=38 -> /clinical/argx-113/mg/argx-113-2002/biostat/staging/pmda_1yr -> b61387d8-1ac6-4528-b624-198a50ccc542 -> COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=39 -> /clinical/argx-113/mg/argx-113-9041/biostat/staging/final_adam -> a1444414-d405-4bba-8593-61d9d142f45b ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=40 -> /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/patient_profiles -> b8d9a5b2-34f5-4383-8f66-203b76dce617 ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=41 -> /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun2/qc_adam -> ebc6d314-1c8c-4105-ac3e-67a18ab9b8ae ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=42 -> /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun2/qc_tlf -> 60054a63-e85b-4e5c-8b3c-22f6e0f6343d ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=43 -> /clinical/argx-113/pemphigus/argx-113-1905/biostat/staging/patient_profiles -> 3f9eeff4-7e09-4d81-8146-6e8c97ba0b99 ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=44 -> /clinical/argx-113/pemphigus/argx-113-9201/biostat/staging/testrun1/qc_adam -> 547ab430-9975-47dc-bf96-f902a074d2fe ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=45 -> /clinical/argx-113/pemphigus/argx-113-9201/biostat/staging/testrun1/qc_tlf -> a0c8c029-3c5f-45bd-88cb-b5e31d75972b ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=46 -> /clinical/argx-117/hv/argx-117-1901/biostat/staging/mad5_tables -> 619de6ae-56d2-4521-90e1-b8713d57b892 ->
COMPLETED_SUCCESSFUL
MPRINT(LAUNCHDASHBOARD):   options nomprint;
z=47 -> /clinical/argx-117/mmn/argx-117-2002/biostat/staging/patient_profiles -> 57198c22-eab5-4b83-be36-2c0e746dd741 ->
COMPLETED_SUCCESSFUL
309        %clock (dashboard);
MPRINT(CLOCK):   * seconds ;
MPRINT(CLOCK):   * convert seconds to days ;
MPRINT(CLOCK):   * subtract days from run time ;
COMPUTATION TIME for dashboard : 0 days 0 hours 10 minutes 24.5 seconds
=================================================================================================================
310
311
312        /* 2) Collect last update info of all reporting events */
313        %macro getlaststatus (dset);
314
315             %let nbre=0;
                                                           The SAS System

316             data _null_;
317                  set &dset end=last;
318                  call symputx("re"||strip(put(_n_,8.)),strip(Reporting_Event_Path));
319                  if last then call symputx("nbre",strip(put(_n_,8.)));
320             run;
321             %put &=nbre;
322
323             %do ri = 1 %to &nbre;
324                  %put !!! &ri -> &&re&ri;
325                  options nomprint;
326                  %lsaf_exists(lsaf_path=&&re&ri);
327                  options mprint;
328                  %if &_lsafExists_=1 %then %do;
329                       options nomprint;
330                       %lsaf_getchildren(lsaf_path=&&re&ri,LSAF_RECURSIVE=99,sas_dsname=recontent);
331                       options mprint;
332        /*               %if &dbg=Y and &ri=1 %then %do;*/
333        /*                    data jobout.recontent1;*/
334        /*                         set recontent;*/
335        /*                    run;*/
336        /*               %end;*/
337
338                       data pgms;
339                            set recontent;
340                            where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
341                       run;
342                       data op;
343                            set recontent;
344                            where index(path,"/output/")>0 and index(name,'.lst')>0;
345                       run;
346                       proc sql noprint;
347                            select count(name) into : allsaspgm
348                            from pgms;
349                            select count(name) into : alllst
350                            from op;
351                       quit;
352                       %let allsaspgm=&allsaspgm;
353                       %let alllst=&alllst;
354                       %put &=allsaspgm &=alllst;
355
356                       proc means data=recontent noprint;
357                            var size;
358                            output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
359                            where not iscontainer;
360                       run;
361
362                       %let projectstatusexists=N;
363                       %let splistexists=N;
364                       data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified))
365                            splist (keep=dateLastModified rename=(dateLastModified=splistlastmodified))
366                            recontent&ri;
367
368                            length Reporting_Event_Path $200;
369                            set recontent;
370                            keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
371                            Reporting_Event_Path="&&re&ri";
372
373                            output recontent&ri;
                                                           The SAS System

374                            if name eq 'projectstatus.html' then do;
375                                 pscounter+1;
376                                 call symputx('projectstatusexists','Y');
377                                 if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in &&re&ri " path;
378                                 else output projectstatus;
379                            end;
380                            if index(name, '_splist.xlsx')>0 then do;
381                                 splcounter+1;
382                                 call symputx('splistexists','Y');
383                                 if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in &&re&ri " path;
384                                 else output splist;
385                            end;
386                       run;
387                       %put &=projectstatusexists;
388                       %put &=splistexists;
389                       proc sort data=recontent&ri out=created;
390                            by dateCreated;
391                       run;
392                       data creation;
393                            set created (obs=1);
394                            keep Reporting_Event_Path dateCreated;
395                       run;
396                       proc sort data=recontent&ri out=lastmod;
397                            by descending dateLastModified;
398                            where not (iscontainer) and name ne 'projectstatus.html' and path ne: "&&re&ri/documents/meta";
399                       run;
400                       data lastmodified (rename=(name=nameLastModified));
401                            set lastmod (obs=1);
402                            keep Reporting_Event_Path dateLastModified name;
403                       run;
404                       data currfolder;
405                            merge creation lastmodified projectstatus splist fsumm;
406                            length allsaspgm alllst 8;
407                            allsaspgm = &allsaspgm;
408                            alllst = &alllst;
409                       run;
410                  %end;
411
412                  %else %do; /*not &_lsafExists_=1*/
413                       data currfolder;
414                            length Reporting_Event_Path dbnote $200;
415                            Reporting_Event_Path="&&re&ri";
416                            dbnote="reporting event path doesn't exists in LSAF";
417                       run;
418                  %end;
419
420                  data metaplus;
421                       length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
422                       merge metaplus (in=a) currfolder (in=b);
423                       by Reporting_Event_Path;
424                       if a;
425
426                       if b and not a then put "W" "ARNING; something wrong with merge";
427                  run;
428
429             %end;
430
431        %mend getlaststatus;
                                                           The SAS System

432        %getlaststatus (final);
MPRINT(GETLASTSTATUS):   data _null_;
MPRINT(GETLASTSTATUS):   set final end=last;
MPRINT(GETLASTSTATUS):   call symputx("re"||strip(put(_n_,8.)),strip(Reporting_Event_Path));
MPRINT(GETLASTSTATUS):   if last then call symputx("nbre",strip(put(_n_,8.)));
MPRINT(GETLASTSTATUS):   run;
NBRE=222
!!! 1 -> /clinical/argx-110/aml/argx-110-0000/biostat/staging/1003_2001_kol_mtg_sep2021
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-110/aml/argx-110-0000/biostat/staging/1003_2001_kol_mtg_sep2021
MPRINT(GETLASTSTATUS):   options nomprint;
MAUTOCOMPLOC:  The autocall macro LSAF_GETCHILDREN is compiling using the autocall source file
            /sso/sfw/sas/940/SASFoundation/9.4/lsafapi/lsaf-sas-macro-2.6.1/sasmacros/lsaf_getchildren.sas.
Returned a list of items in /clinical/argx-110/aml/argx-110-0000/biostat/staging/1003_2001_kol_mtg_sep2021
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=2 ALLLST=3
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent1;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-110/aml/argx-110-0000/biostat/staging/1003_2001_kol_mtg_sep2021";
MPRINT(GETLASTSTATUS):   output recontent1;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-110/aml/argx-110-0000/biostat/staging/1003_2001_kol_mtg_sep2021 " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-110/aml/argx-110-0000/biostat/staging/1003_2001_kol_mtg_sep2021 " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
                                                           The SAS System

MPRINT(GETLASTSTATUS):   proc sort data=recontent1 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent1 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-110/aml/argx-110-0000/biostat/staging/1003_2001_kol_mtg_sep2021/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 2;
MPRINT(GETLASTSTATUS):   alllst = 3;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 2 -> /clinical/argx-110/aml/argx-110-1003/biostat/staging/csr_sdtm20211217
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-110/aml/argx-110-1003/biostat/staging/csr_sdtm20211217
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-110/aml/argx-110-1003/biostat/staging/csr_sdtm20211217
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=19 ALLLST=11
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent2;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-110/aml/argx-110-1003/biostat/staging/csr_sdtm20211217";
MPRINT(GETLASTSTATUS):   output recontent2;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-110/aml/argx-110-1003/biostat/staging/csr_sdtm20211217 " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-110/aml/argx-110-1003/biostat/staging/csr_sdtm20211217 " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent2 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent2 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-110/aml/argx-110-1003/biostat/staging/csr_sdtm20211217/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 19;
MPRINT(GETLASTSTATUS):   alllst = 11;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 3 -> /clinical/argx-110/aml/argx-110-1003/biostat/staging/csr_sdtm20211217_qc
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-110/aml/argx-110-1003/biostat/staging/csr_sdtm20211217_qc
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-110/aml/argx-110-1003/biostat/staging/csr_sdtm20211217_qc
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=11 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent3;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-110/aml/argx-110-1003/biostat/staging/csr_sdtm20211217_qc";
MPRINT(GETLASTSTATUS):   output recontent3;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-110/aml/argx-110-1003/biostat/staging/csr_sdtm20211217_qc " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-110/aml/argx-110-1003/biostat/staging/csr_sdtm20211217_qc " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent3 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent3 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-110/aml/argx-110-1003/biostat/staging/csr_sdtm20211217_qc/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 11;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 4 -> /clinical/argx-110/aml/argx-110-1003/biostat/staging/csr_sdtm20220106
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-110/aml/argx-110-1003/biostat/staging/csr_sdtm20220106
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-110/aml/argx-110-1003/biostat/staging/csr_sdtm20220106
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=52 ALLLST=56
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent4;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-110/aml/argx-110-1003/biostat/staging/csr_sdtm20220106";
MPRINT(GETLASTSTATUS):   output recontent4;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-110/aml/argx-110-1003/biostat/staging/csr_sdtm20220106 " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-110/aml/argx-110-1003/biostat/staging/csr_sdtm20220106 " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
                                                           The SAS System

PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent4 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent4 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-110/aml/argx-110-1003/biostat/staging/csr_sdtm20220106/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 52;
MPRINT(GETLASTSTATUS):   alllst = 56;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 5 -> /clinical/argx-110/aml/argx-110-1003/biostat/staging/csr_sdtm20220106_qc
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-110/aml/argx-110-1003/biostat/staging/csr_sdtm20220106_qc
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-110/aml/argx-110-1003/biostat/staging/csr_sdtm20220106_qc
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=9 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent5;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-110/aml/argx-110-1003/biostat/staging/csr_sdtm20220106_qc";
MPRINT(GETLASTSTATUS):   output recontent5;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-110/aml/argx-110-1003/biostat/staging/csr_sdtm20220106_qc " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-110/aml/argx-110-1003/biostat/staging/csr_sdtm20220106_qc " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent5 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent5 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-110/aml/argx-110-1003/biostat/staging/csr_sdtm20220106_qc/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 9;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 6 -> /clinical/argx-110/aml/argx-110-1003/biostat/staging/csr_sdtm20220602
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-110/aml/argx-110-1003/biostat/staging/csr_sdtm20220602
MPRINT(GETLASTSTATUS):   options nomprint;
                                                           The SAS System

Returned a list of items in /clinical/argx-110/aml/argx-110-1003/biostat/staging/csr_sdtm20220602
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=11 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent6;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-110/aml/argx-110-1003/biostat/staging/csr_sdtm20220602";
MPRINT(GETLASTSTATUS):   output recontent6;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-110/aml/argx-110-1003/biostat/staging/csr_sdtm20220602 " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-110/aml/argx-110-1003/biostat/staging/csr_sdtm20220602 " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent6 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent6 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-110/aml/argx-110-1003/biostat/staging/csr_sdtm20220602/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 11;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 7 -> /clinical/argx-110/aml/argx-110-1003/biostat/staging/explo_20210625
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-110/aml/argx-110-1003/biostat/staging/explo_20210625
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-110/aml/argx-110-1003/biostat/staging/explo_20210625
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=51 ALLLST=24
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent7;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-110/aml/argx-110-1003/biostat/staging/explo_20210625";
MPRINT(GETLASTSTATUS):   output recontent7;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-110/aml/argx-110-1003/biostat/staging/explo_20210625 " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-110/aml/argx-110-1003/biostat/staging/explo_20210625 " path;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent7 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent7 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-110/aml/argx-110-1003/biostat/staging/explo_20210625/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 51;
MPRINT(GETLASTSTATUS):   alllst = 24;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 8 -> /clinical/argx-110/aml/argx-110-1003/biostat/staging/explo_ash_sdtm20210930
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-110/aml/argx-110-1003/biostat/staging/explo_ash_sdtm20210930
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-110/aml/argx-110-1003/biostat/staging/explo_ash_sdtm20210930
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=48 ALLLST=32
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent8;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-110/aml/argx-110-1003/biostat/staging/explo_ash_sdtm20210930";
MPRINT(GETLASTSTATUS):   output recontent8;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-110/aml/argx-110-1003/biostat/staging/explo_ash_sdtm20210930 " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-110/aml/argx-110-1003/biostat/staging/explo_ash_sdtm20210930 " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent8 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent8 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-110/aml/argx-110-1003/biostat/staging/explo_ash_sdtm20210930/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 48;
MPRINT(GETLASTSTATUS):   alllst = 32;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 9 -> /clinical/argx-110/aml/argx-110-1003/biostat/staging/explo_ltfu1_sdtm20220602
MPRINT(GETLASTSTATUS):   options nomprint;
                                                           The SAS System

The item exists: /clinical/argx-110/aml/argx-110-1003/biostat/staging/explo_ltfu1_sdtm20220602
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-110/aml/argx-110-1003/biostat/staging/explo_ltfu1_sdtm20220602
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=21 ALLLST=12
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent9;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-110/aml/argx-110-1003/biostat/staging/explo_ltfu1_sdtm20220602";
MPRINT(GETLASTSTATUS):   output recontent9;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-110/aml/argx-110-1003/biostat/staging/explo_ltfu1_sdtm20220602 " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-110/aml/argx-110-1003/biostat/staging/explo_ltfu1_sdtm20220602 " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent9 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent9 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-110/aml/argx-110-1003/biostat/staging/explo_ltfu1_sdtm20220602/documents/meta";
MPRINT(GETLASTSTATUS):   run;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 21;
MPRINT(GETLASTSTATUS):   alllst = 12;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 10 -> /clinical/argx-110/aml/argx-110-1003/biostat/staging/exploratory
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-110/aml/argx-110-1003/biostat/staging/exploratory
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-110/aml/argx-110-1003/biostat/staging/exploratory
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=34 ALLLST=54
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent10;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-110/aml/argx-110-1003/biostat/staging/exploratory";
MPRINT(GETLASTSTATUS):   output recontent10;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-110/aml/argx-110-1003/biostat/staging/exploratory " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-110/aml/argx-110-1003/biostat/staging/exploratory " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent10 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent10 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-110/aml/argx-110-1003/biostat/staging/exploratory/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 34;
MPRINT(GETLASTSTATUS):   alllst = 54;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 11 -> /clinical/argx-110/aml/argx-110-1003/biostat/staging/exploratory_qc
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-110/aml/argx-110-1003/biostat/staging/exploratory_qc
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-110/aml/argx-110-1003/biostat/staging/exploratory_qc
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=37 ALLLST=30
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent11;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-110/aml/argx-110-1003/biostat/staging/exploratory_qc";
MPRINT(GETLASTSTATUS):   output recontent11;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-110/aml/argx-110-1003/biostat/staging/exploratory_qc " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-110/aml/argx-110-1003/biostat/staging/exploratory_qc " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent11 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent11 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-110/aml/argx-110-1003/biostat/staging/exploratory_qc/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 37;
MPRINT(GETLASTSTATUS):   alllst = 30;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 12 -> /clinical/argx-110/aml/argx-110-1003/biostat/staging/ib_dsur_20220112
                                                           The SAS System

MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-110/aml/argx-110-1003/biostat/staging/ib_dsur_20220112
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-110/aml/argx-110-1003/biostat/staging/ib_dsur_20220112
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=6 ALLLST=1
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent12;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-110/aml/argx-110-1003/biostat/staging/ib_dsur_20220112";
MPRINT(GETLASTSTATUS):   output recontent12;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-110/aml/argx-110-1003/biostat/staging/ib_dsur_20220112 " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-110/aml/argx-110-1003/biostat/staging/ib_dsur_20220112 " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent12 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent12 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
                                                           The SAS System

"/clinical/argx-110/aml/argx-110-1003/biostat/staging/ib_dsur_20220112/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 6;
MPRINT(GETLASTSTATUS):   alllst = 1;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 13 -> /clinical/argx-110/aml/argx-110-1601/biostat/staging/exploratory
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-110/aml/argx-110-1601/biostat/staging/exploratory
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-110/aml/argx-110-1601/biostat/staging/exploratory
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=0 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent13;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-110/aml/argx-110-1601/biostat/staging/exploratory";
MPRINT(GETLASTSTATUS):   output recontent13;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-110/aml/argx-110-1601/biostat/staging/exploratory " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-110/aml/argx-110-1601/biostat/staging/exploratory " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent13 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent13 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-110/aml/argx-110-1601/biostat/staging/exploratory/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 0;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 14 -> /clinical/argx-110/aml/argx-110-2001/biostat/staging/exploratory
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-110/aml/argx-110-2001/biostat/staging/exploratory
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-110/aml/argx-110-2001/biostat/staging/exploratory
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
                                                           The SAS System

ALLSASPGM=51 ALLLST=18
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent14;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-110/aml/argx-110-2001/biostat/staging/exploratory";
MPRINT(GETLASTSTATUS):   output recontent14;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-110/aml/argx-110-2001/biostat/staging/exploratory " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-110/aml/argx-110-2001/biostat/staging/exploratory " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent14 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent14 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-110/aml/argx-110-2001/biostat/staging/exploratory/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 51;
MPRINT(GETLASTSTATUS):   alllst = 18;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
                                                           The SAS System

MPRINT(GETLASTSTATUS):   run;
!!! 15 -> /clinical/argx-110/aml/argx-110-2001/biostat/staging/exploratory2
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-110/aml/argx-110-2001/biostat/staging/exploratory2
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-110/aml/argx-110-2001/biostat/staging/exploratory2
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=31 ALLLST=25
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent15;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-110/aml/argx-110-2001/biostat/staging/exploratory2";
MPRINT(GETLASTSTATUS):   output recontent15;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-110/aml/argx-110-2001/biostat/staging/exploratory2 " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-110/aml/argx-110-2001/biostat/staging/exploratory2 " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent15 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent15 out=lastmod;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-110/aml/argx-110-2001/biostat/staging/exploratory2/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 31;
MPRINT(GETLASTSTATUS):   alllst = 25;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 16 -> /clinical/argx-110/aml/argx-110-2001/biostat/staging/exploratory2_qc
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-110/aml/argx-110-2001/biostat/staging/exploratory2_qc
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-110/aml/argx-110-2001/biostat/staging/exploratory2_qc
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=20 ALLLST=9
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent16;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-110/aml/argx-110-2001/biostat/staging/exploratory2_qc";
MPRINT(GETLASTSTATUS):   output recontent16;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-110/aml/argx-110-2001/biostat/staging/exploratory2_qc " path;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-110/aml/argx-110-2001/biostat/staging/exploratory2_qc " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent16 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent16 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-110/aml/argx-110-2001/biostat/staging/exploratory2_qc/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 20;
MPRINT(GETLASTSTATUS):   alllst = 9;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 17 -> /clinical/argx-110/aml/argx-110-2001/biostat/staging/exploratory3_rec20211119
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-110/aml/argx-110-2001/biostat/staging/exploratory3_rec20211119
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-110/aml/argx-110-2001/biostat/staging/exploratory3_rec20211119
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=19 ALLLST=16
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent17;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-110/aml/argx-110-2001/biostat/staging/exploratory3_rec20211119";
MPRINT(GETLASTSTATUS):   output recontent17;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-110/aml/argx-110-2001/biostat/staging/exploratory3_rec20211119 " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-110/aml/argx-110-2001/biostat/staging/exploratory3_rec20211119 " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent17 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent17 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-110/aml/argx-110-2001/biostat/staging/exploratory3_rec20211119/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 19;
MPRINT(GETLASTSTATUS):   alllst = 16;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 18 -> /clinical/argx-110/aml/argx-110-2001/biostat/staging/exploratory3_rec20211119_qc
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-110/aml/argx-110-2001/biostat/staging/exploratory3_rec20211119_qc
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-110/aml/argx-110-2001/biostat/staging/exploratory3_rec20211119_qc
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=22 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent18;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-110/aml/argx-110-2001/biostat/staging/exploratory3_rec20211119_qc";
MPRINT(GETLASTSTATUS):   output recontent18;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-110/aml/argx-110-2001/biostat/staging/exploratory3_rec20211119_qc " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-110/aml/argx-110-2001/biostat/staging/exploratory3_rec20211119_qc " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent18 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent18 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-110/aml/argx-110-2001/biostat/staging/exploratory3_rec20211119_qc/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 22;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 19 -> /clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/dsmb
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/dsmb
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=4 ALLLST=3
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent19;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/dsmb";
MPRINT(GETLASTSTATUS):   output recontent19;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
                                                           The SAS System

/clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/dsmb " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/dsmb " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent19 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent19 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/dsmb/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 4;
MPRINT(GETLASTSTATUS):   alllst = 3;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 20 -> /clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/eci_snapshot
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/eci_snapshot
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/eci_snapshot
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=8 ALLLST=4
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent20;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/eci_snapshot";
MPRINT(GETLASTSTATUS):   output recontent20;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/eci_snapshot " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/eci_snapshot " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent20 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent20 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/eci_snapshot/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 8;
MPRINT(GETLASTSTATUS):   alllst = 4;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
                                                           The SAS System

MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 21 -> /clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/ia-testrun/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/ia-testrun/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/ia-testrun/qc_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=13 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent21;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/ia-testrun/qc_adam";
MPRINT(GETLASTSTATUS):   output recontent21;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/ia-testrun/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/ia-testrun/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent21 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
                                                           The SAS System

MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent21 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/ia-testrun/qc_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 13;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 22 -> /clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/ia-testrun/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/ia-testrun/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/ia-testrun/qc_tlf
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=21 ALLLST=29
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent22;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/ia-testrun/qc_tlf";
MPRINT(GETLASTSTATUS):   output recontent22;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/ia-testrun/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/ia-testrun/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent22 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent22 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/ia-testrun/qc_tlf/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 21;
MPRINT(GETLASTSTATUS):   alllst = 29;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 23 -> /clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/interim-analysis-ba/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/interim-analysis-ba/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/interim-analysis-ba/qc_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=5 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent23;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):
Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/interim-analysis-ba/qc_adam";
MPRINT(GETLASTSTATUS):   output recontent23;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/interim-analysis-ba/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/interim-analysis-ba/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent23 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent23 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/interim-analysis-ba/qc_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 5;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 24 -> /clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/interim-analysis-ba/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/interim-analysis-ba/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/interim-analysis-ba/qc_tlf
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=7 ALLLST=7
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent24;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/interim-analysis-ba/qc_tlf";
MPRINT(GETLASTSTATUS):   output recontent24;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/interim-analysis-ba/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/interim-analysis-ba/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent24 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent24 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/interim-analysis-ba/qc_tlf/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 7;
MPRINT(GETLASTSTATUS):   alllst = 7;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 25 -> /clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/interim-analysis-ema
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/interim-analysis-ema
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/interim-analysis-ema
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=1 ALLLST=1
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent25;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/interim-analysis-ema";
                                                           The SAS System

MPRINT(GETLASTSTATUS):   output recontent25;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/interim-analysis-ema " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/interim-analysis-ema " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent25 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent25 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/interim-analysis-ema/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 1;
MPRINT(GETLASTSTATUS):   alllst = 1;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 26 -> /clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/interim-analysis-rerun/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/interim-analysis-rerun/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/interim-analysis-rerun/qc_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=3 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent26;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):
Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/interim-analysis-rerun/qc_adam";
MPRINT(GETLASTSTATUS):   output recontent26;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/interim-analysis-rerun/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/interim-analysis-rerun/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent26 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent26 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/interim-analysis-rerun/qc_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   allsaspgm = 3;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 27 -> /clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/interim-analysis-rerun/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/interim-analysis-rerun/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/interim-analysis-rerun/qc_tlf
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=6 ALLLST=8
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent27;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):
Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/interim-analysis-rerun/qc_tlf";
MPRINT(GETLASTSTATUS):   output recontent27;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/interim-analysis-rerun/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/interim-analysis-rerun/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
                                                           The SAS System

PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent27 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent27 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/interim-analysis-rerun/qc_tlf/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 6;
MPRINT(GETLASTSTATUS):   alllst = 8;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 28 -> /clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/interim-analysis/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/interim-analysis/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/interim-analysis/qc_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=11 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent28;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/interim-analysis/qc_adam";
MPRINT(GETLASTSTATUS):   output recontent28;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/interim-analysis/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/interim-analysis/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent28 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent28 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/interim-analysis/qc_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 11;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 29 -> /clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/interim-analysis/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/interim-analysis/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
                                                           The SAS System

Returned a list of items in /clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/interim-analysis/qc_tlf
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=14 ALLLST=22
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent29;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/interim-analysis/qc_tlf";
MPRINT(GETLASTSTATUS):   output recontent29;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/interim-analysis/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/interim-analysis/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent29 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent29 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/cidp/argx-113-1802-ia/biostat/staging/interim-analysis/qc_tlf/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 14;
MPRINT(GETLASTSTATUS):   alllst = 22;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 30 -> /clinical/argx-113/cidp/argx-113-1802/biostat/staging/adhoc
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/cidp/argx-113-1802/biostat/staging/adhoc
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=21 ALLLST=6
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent30;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1802/biostat/staging/adhoc";
MPRINT(GETLASTSTATUS):   output recontent30;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/cidp/argx-113-1802/biostat/staging/adhoc " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/cidp/argx-113-1802/biostat/staging/adhoc " path;
MPRINT(GETLASTSTATUS):   else output splist;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent30 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent30 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/cidp/argx-113-1802/biostat/staging/adhoc/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 21;
MPRINT(GETLASTSTATUS):   alllst = 6;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 31 -> /clinical/argx-113/cidp/argx-113-1802/biostat/staging/adhoc_ccc_100_cases
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/adhoc_ccc_100_cases
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/cidp/argx-113-1802/biostat/staging/adhoc_ccc_100_cases
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=9 ALLLST=7
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent31;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1802/biostat/staging/adhoc_ccc_100_cases";
MPRINT(GETLASTSTATUS):   output recontent31;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/cidp/argx-113-1802/biostat/staging/adhoc_ccc_100_cases " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/cidp/argx-113-1802/biostat/staging/adhoc_ccc_100_cases " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent31 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent31 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/cidp/argx-113-1802/biostat/staging/adhoc_ccc_100_cases/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 9;
MPRINT(GETLASTSTATUS):   alllst = 7;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 32 -> /clinical/argx-113/cidp/argx-113-1802/biostat/staging/adhoc_ccc_200_cases
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/adhoc_ccc_200_cases
MPRINT(GETLASTSTATUS):   options nomprint;
                                                           The SAS System

Returned a list of items in /clinical/argx-113/cidp/argx-113-1802/biostat/staging/adhoc_ccc_200_cases
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=12 ALLLST=13
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent32;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1802/biostat/staging/adhoc_ccc_200_cases";
MPRINT(GETLASTSTATUS):   output recontent32;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/cidp/argx-113-1802/biostat/staging/adhoc_ccc_200_cases " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/cidp/argx-113-1802/biostat/staging/adhoc_ccc_200_cases " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent32 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent32 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/cidp/argx-113-1802/biostat/staging/adhoc_ccc_200_cases/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
                                                           The SAS System

MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 12;
MPRINT(GETLASTSTATUS):   alllst = 13;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 33 -> /clinical/argx-113/cidp/argx-113-1802/biostat/staging/create_dummy_data
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/create_dummy_data
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/cidp/argx-113-1802/biostat/staging/create_dummy_data
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=1 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent33;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1802/biostat/staging/create_dummy_data";
MPRINT(GETLASTSTATUS):   output recontent33;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/cidp/argx-113-1802/biostat/staging/create_dummy_data " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
                                                           The SAS System

/clinical/argx-113/cidp/argx-113-1802/biostat/staging/create_dummy_data " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent33 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent33 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/cidp/argx-113-1802/biostat/staging/create_dummy_data/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 1;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 34 -> /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun1/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun1/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun1/qc_tlf
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=69 ALLLST=163
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent34;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun1/qc_tlf";
MPRINT(GETLASTSTATUS):   output recontent34;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun1/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun1/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent34 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent34 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun1/qc_tlf/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 69;
MPRINT(GETLASTSTATUS):   alllst = 163;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 35 -> /clinical/argx-113/cidp/argx-113-1902/biostat/staging/adhoc
MPRINT(GETLASTSTATUS):   options nomprint;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/cidp/argx-113-1902/biostat/staging/adhoc
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=2 ALLLST=6
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent35;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1902/biostat/staging/adhoc";
MPRINT(GETLASTSTATUS):   output recontent35;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/cidp/argx-113-1902/biostat/staging/adhoc " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/cidp/argx-113-1902/biostat/staging/adhoc " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent35 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent35 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/cidp/argx-113-1902/biostat/staging/adhoc/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
                                                           The SAS System

MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 2;
MPRINT(GETLASTSTATUS):   alllst = 6;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 36 -> /clinical/argx-113/cidp/argx-113-1902/biostat/staging/mhra
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/cidp/argx-113-1902/biostat/staging/mhra
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=5 ALLLST=2
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent36;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1902/biostat/staging/mhra";
MPRINT(GETLASTSTATUS):   output recontent36;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/cidp/argx-113-1902/biostat/staging/mhra " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
                                                           The SAS System

/clinical/argx-113/cidp/argx-113-1902/biostat/staging/mhra " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent36 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent36 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/cidp/argx-113-1902/biostat/staging/mhra/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 5;
MPRINT(GETLASTSTATUS):   alllst = 2;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 37 -> /clinical/argx-113/cidp/argx-113-1902/biostat/staging/testrun1/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-1902/biostat/staging/testrun1/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/cidp/argx-113-1902/biostat/staging/testrun1/qc_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=0 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent37;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1902/biostat/staging/testrun1/qc_adam";
MPRINT(GETLASTSTATUS):   output recontent37;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/cidp/argx-113-1902/biostat/staging/testrun1/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/cidp/argx-113-1902/biostat/staging/testrun1/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent37 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent37 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/cidp/argx-113-1902/biostat/staging/testrun1/qc_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 0;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 38 -> /clinical/argx-113/cidp/argx-113-1902/biostat/staging/testrun1/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
                                                           The SAS System

The item exists: /clinical/argx-113/cidp/argx-113-1902/biostat/staging/testrun1/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/cidp/argx-113-1902/biostat/staging/testrun1/qc_tlf
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=0 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent38;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1902/biostat/staging/testrun1/qc_tlf";
MPRINT(GETLASTSTATUS):   output recontent38;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/cidp/argx-113-1902/biostat/staging/testrun1/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/cidp/argx-113-1902/biostat/staging/testrun1/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent38 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent38 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/cidp/argx-113-1902/biostat/staging/testrun1/qc_tlf/documents/meta";
MPRINT(GETLASTSTATUS):   run;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 0;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 39 -> /clinical/argx-113/cidp/argx-113-9301/biostat/staging/testrun1/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-9301/biostat/staging/testrun1/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/cidp/argx-113-9301/biostat/staging/testrun1/qc_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=11 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent39;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-9301/biostat/staging/testrun1/qc_adam";
MPRINT(GETLASTSTATUS):   output recontent39;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/cidp/argx-113-9301/biostat/staging/testrun1/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/cidp/argx-113-9301/biostat/staging/testrun1/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=Y
MPRINT(GETLASTSTATUS):   proc sort data=recontent39 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent39 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/cidp/argx-113-9301/biostat/staging/testrun1/qc_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 11;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 40 -> /clinical/argx-113/cidp/argx-113-9301/biostat/staging/testrun1/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-9301/biostat/staging/testrun1/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/cidp/argx-113-9301/biostat/staging/testrun1/qc_tlf
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=41 ALLLST=61
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent40;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-9301/biostat/staging/testrun1/qc_tlf";
MPRINT(GETLASTSTATUS):   output recontent40;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/cidp/argx-113-9301/biostat/staging/testrun1/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/cidp/argx-113-9301/biostat/staging/testrun1/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent40 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent40 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/cidp/argx-113-9301/biostat/staging/testrun1/qc_tlf/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 41;
MPRINT(GETLASTSTATUS):   alllst = 61;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 41 -> /clinical/argx-113/cidp/argx-113-9303/biostat/staging/testrun1/qc_tlf
                                                           The SAS System

MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-9303/biostat/staging/testrun1/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/cidp/argx-113-9303/biostat/staging/testrun1/qc_tlf
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=13 ALLLST=36
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent41;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-9303/biostat/staging/testrun1/qc_tlf";
MPRINT(GETLASTSTATUS):   output recontent41;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/cidp/argx-113-9303/biostat/staging/testrun1/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/cidp/argx-113-9303/biostat/staging/testrun1/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent41 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent41 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
                                                           The SAS System

"/clinical/argx-113/cidp/argx-113-9303/biostat/staging/testrun1/qc_tlf/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 13;
MPRINT(GETLASTSTATUS):   alllst = 36;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 42 -> /clinical/argx-113/hv/argx-113-1907/biostat/staging/final-analysis/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/hv/argx-113-1907/biostat/staging/final-analysis/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/hv/argx-113-1907/biostat/staging/final-analysis/qc_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=4 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent42;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/hv/argx-113-1907/biostat/staging/final-analysis/qc_adam";
MPRINT(GETLASTSTATUS):   output recontent42;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/hv/argx-113-1907/biostat/staging/final-analysis/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/hv/argx-113-1907/biostat/staging/final-analysis/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent42 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent42 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/hv/argx-113-1907/biostat/staging/final-analysis/qc_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 4;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 43 -> /clinical/argx-113/hv/argx-113-1907/biostat/staging/final-analysis/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/hv/argx-113-1907/biostat/staging/final-analysis/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/hv/argx-113-1907/biostat/staging/final-analysis/qc_tlf
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
                                                           The SAS System

ALLSASPGM=5 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent43;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/hv/argx-113-1907/biostat/staging/final-analysis/qc_tlf";
MPRINT(GETLASTSTATUS):   output recontent43;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/hv/argx-113-1907/biostat/staging/final-analysis/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/hv/argx-113-1907/biostat/staging/final-analysis/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent43 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent43 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/hv/argx-113-1907/biostat/staging/final-analysis/qc_tlf/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 5;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
                                                           The SAS System

MPRINT(GETLASTSTATUS):   run;
!!! 44 -> /clinical/argx-113/hv/argx-113-1907/biostat/staging/sc_iv
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/hv/argx-113-1907/biostat/staging/sc_iv
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=21 ALLLST=11
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent44;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/hv/argx-113-1907/biostat/staging/sc_iv";
MPRINT(GETLASTSTATUS):   output recontent44;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/hv/argx-113-1907/biostat/staging/sc_iv " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/hv/argx-113-1907/biostat/staging/sc_iv " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent44 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent44 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/hv/argx-113-1907/biostat/staging/sc_iv/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 21;
MPRINT(GETLASTSTATUS):   alllst = 11;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 45 -> /clinical/argx-113/hv/argx-113-2102/biostat/staging/posthoc
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/hv/argx-113-2102/biostat/staging/posthoc
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=3 ALLLST=3
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent45;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/hv/argx-113-2102/biostat/staging/posthoc";
MPRINT(GETLASTSTATUS):   output recontent45;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/hv/argx-113-2102/biostat/staging/posthoc " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/hv/argx-113-2102/biostat/staging/posthoc " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=Y
MPRINT(GETLASTSTATUS):   proc sort data=recontent45 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent45 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/hv/argx-113-2102/biostat/staging/posthoc/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 3;
MPRINT(GETLASTSTATUS):   alllst = 3;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 46 -> /clinical/argx-113/hv/argx-113-2102/biostat/staging/testrun1/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/hv/argx-113-2102/biostat/staging/testrun1/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/hv/argx-113-2102/biostat/staging/testrun1/qc_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
                                                           The SAS System

ALLSASPGM=3 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent46;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/hv/argx-113-2102/biostat/staging/testrun1/qc_adam";
MPRINT(GETLASTSTATUS):   output recontent46;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/hv/argx-113-2102/biostat/staging/testrun1/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/hv/argx-113-2102/biostat/staging/testrun1/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=Y
MPRINT(GETLASTSTATUS):   proc sort data=recontent46 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent46 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/hv/argx-113-2102/biostat/staging/testrun1/qc_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 3;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
                                                           The SAS System

MPRINT(GETLASTSTATUS):   run;
!!! 47 -> /clinical/argx-113/hv/argx-113-2102/biostat/staging/testrun1/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/hv/argx-113-2102/biostat/staging/testrun1/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/hv/argx-113-2102/biostat/staging/testrun1/qc_tlf
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=8 ALLLST=10
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent47;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/hv/argx-113-2102/biostat/staging/testrun1/qc_tlf";
MPRINT(GETLASTSTATUS):   output recontent47;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/hv/argx-113-2102/biostat/staging/testrun1/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/hv/argx-113-2102/biostat/staging/testrun1/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent47 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent47 out=lastmod;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/hv/argx-113-2102/biostat/staging/testrun1/qc_tlf/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 8;
MPRINT(GETLASTSTATUS):   alllst = 10;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 48 -> /clinical/argx-113/itp/argx-113-1603/biostat/staging/posthoc
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/itp/argx-113-1603/biostat/staging/posthoc
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=3 ALLLST=50
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent48;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-1603/biostat/staging/posthoc";
MPRINT(GETLASTSTATUS):   output recontent48;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/itp/argx-113-1603/biostat/staging/posthoc " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/itp/argx-113-1603/biostat/staging/posthoc " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=Y
MPRINT(GETLASTSTATUS):   proc sort data=recontent48 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent48 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/itp/argx-113-1603/biostat/staging/posthoc/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 3;
MPRINT(GETLASTSTATUS):   alllst = 50;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 49 -> /clinical/argx-113/itp/argx-113-1801/biostat/staging/final/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-1801/biostat/staging/final/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/itp/argx-113-1801/biostat/staging/final/qc_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=10 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent49;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-1801/biostat/staging/final/qc_adam";
MPRINT(GETLASTSTATUS):   output recontent49;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/itp/argx-113-1801/biostat/staging/final/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/itp/argx-113-1801/biostat/staging/final/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=Y
MPRINT(GETLASTSTATUS):   proc sort data=recontent49 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent49 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/itp/argx-113-1801/biostat/staging/final/qc_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 10;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 50 -> /clinical/argx-113/itp/argx-113-1801/biostat/staging/final/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-1801/biostat/staging/final/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/itp/argx-113-1801/biostat/staging/final/qc_tlf
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=31 ALLLST=45
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent50;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-1801/biostat/staging/final/qc_tlf";
MPRINT(GETLASTSTATUS):   output recontent50;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/itp/argx-113-1801/biostat/staging/final/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/itp/argx-113-1801/biostat/staging/final/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent50 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   proc sort data=recontent50 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/itp/argx-113-1801/biostat/staging/final/qc_tlf/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 31;
MPRINT(GETLASTSTATUS):   alllst = 45;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 51 -> /clinical/argx-113/itp/argx-113-1801/biostat/staging/final_pmda/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-1801/biostat/staging/final_pmda/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/itp/argx-113-1801/biostat/staging/final_pmda/qc_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=0 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent51;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-1801/biostat/staging/final_pmda/qc_adam";
MPRINT(GETLASTSTATUS):   output recontent51;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
                                                           The SAS System

/clinical/argx-113/itp/argx-113-1801/biostat/staging/final_pmda/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/itp/argx-113-1801/biostat/staging/final_pmda/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=Y
MPRINT(GETLASTSTATUS):   proc sort data=recontent51 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent51 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/itp/argx-113-1801/biostat/staging/final_pmda/qc_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 0;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 52 -> /clinical/argx-113/itp/argx-113-1801/biostat/staging/final_pmda/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-1801/biostat/staging/final_pmda/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/itp/argx-113-1801/biostat/staging/final_pmda/qc_tlf
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=0 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent52;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-1801/biostat/staging/final_pmda/qc_tlf";
MPRINT(GETLASTSTATUS):   output recontent52;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/itp/argx-113-1801/biostat/staging/final_pmda/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/itp/argx-113-1801/biostat/staging/final_pmda/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent52 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent52 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/itp/argx-113-1801/biostat/staging/final_pmda/qc_tlf/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 0;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
                                                           The SAS System

MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 53 -> /clinical/argx-113/itp/argx-113-1801/biostat/staging/interim-analysis/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-1801/biostat/staging/interim-analysis/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/itp/argx-113-1801/biostat/staging/interim-analysis/qc_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=11 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent53;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-1801/biostat/staging/interim-analysis/qc_adam";
MPRINT(GETLASTSTATUS):   output recontent53;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/itp/argx-113-1801/biostat/staging/interim-analysis/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/itp/argx-113-1801/biostat/staging/interim-analysis/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent53 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
                                                           The SAS System

MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent53 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/itp/argx-113-1801/biostat/staging/interim-analysis/qc_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 11;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 54 -> /clinical/argx-113/itp/argx-113-1801/biostat/staging/interim-analysis/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-1801/biostat/staging/interim-analysis/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/itp/argx-113-1801/biostat/staging/interim-analysis/qc_tlf
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=27 ALLLST=24
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent54;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-1801/biostat/staging/interim-analysis/qc_tlf";
MPRINT(GETLASTSTATUS):   output recontent54;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/itp/argx-113-1801/biostat/staging/interim-analysis/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/itp/argx-113-1801/biostat/staging/interim-analysis/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent54 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent54 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/itp/argx-113-1801/biostat/staging/interim-analysis/qc_tlf/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 27;
MPRINT(GETLASTSTATUS):   alllst = 24;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 55 -> /clinical/argx-113/itp/argx-113-1801/biostat/staging/pmda
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/itp/argx-113-1801/biostat/staging/pmda
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=11 ALLLST=8
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent55;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-1801/biostat/staging/pmda";
MPRINT(GETLASTSTATUS):   output recontent55;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/itp/argx-113-1801/biostat/staging/pmda " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/itp/argx-113-1801/biostat/staging/pmda " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent55 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent55 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/itp/argx-113-1801/biostat/staging/pmda/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 11;
MPRINT(GETLASTSTATUS):   alllst = 8;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 56 -> /clinical/argx-113/itp/argx-113-1801/biostat/staging/testrun2/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-1801/biostat/staging/testrun2/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/itp/argx-113-1801/biostat/staging/testrun2/qc_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=11 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent56;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-1801/biostat/staging/testrun2/qc_adam";
MPRINT(GETLASTSTATUS):   output recontent56;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/itp/argx-113-1801/biostat/staging/testrun2/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/itp/argx-113-1801/biostat/staging/testrun2/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=Y
MPRINT(GETLASTSTATUS):   proc sort data=recontent56 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent56 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/itp/argx-113-1801/biostat/staging/testrun2/qc_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 11;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 57 -> /clinical/argx-113/itp/argx-113-1801/biostat/staging/testrun2/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-1801/biostat/staging/testrun2/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/itp/argx-113-1801/biostat/staging/testrun2/qc_tlf
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=16 ALLLST=30
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent57;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-1801/biostat/staging/testrun2/qc_tlf";
MPRINT(GETLASTSTATUS):   output recontent57;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/itp/argx-113-1801/biostat/staging/testrun2/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/itp/argx-113-1801/biostat/staging/testrun2/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent57 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent57 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/itp/argx-113-1801/biostat/staging/testrun2/qc_tlf/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 16;
MPRINT(GETLASTSTATUS):   alllst = 30;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 58 -> /clinical/argx-113/itp/argx-113-1801/biostat/staging/testrun3/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-1801/biostat/staging/testrun3/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/itp/argx-113-1801/biostat/staging/testrun3/qc_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=6 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent58;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-1801/biostat/staging/testrun3/qc_adam";
MPRINT(GETLASTSTATUS):   output recontent58;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/itp/argx-113-1801/biostat/staging/testrun3/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/itp/argx-113-1801/biostat/staging/testrun3/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=Y
MPRINT(GETLASTSTATUS):   proc sort data=recontent58 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent58 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/itp/argx-113-1801/biostat/staging/testrun3/qc_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 6;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 59 -> /clinical/argx-113/itp/argx-113-1801/biostat/staging/testrun3/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-1801/biostat/staging/testrun3/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/itp/argx-113-1801/biostat/staging/testrun3/qc_tlf
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=26 ALLLST=32
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent59;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-1801/biostat/staging/testrun3/qc_tlf";
MPRINT(GETLASTSTATUS):   output recontent59;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/itp/argx-113-1801/biostat/staging/testrun3/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/itp/argx-113-1801/biostat/staging/testrun3/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent59 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent59 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/itp/argx-113-1801/biostat/staging/testrun3/qc_tlf/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 26;
MPRINT(GETLASTSTATUS):   alllst = 32;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 60 -> /clinical/argx-113/itp/argx-113-1803/biostat/staging/create_dummy_data
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-1803/biostat/staging/create_dummy_data
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/itp/argx-113-1803/biostat/staging/create_dummy_data
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=1 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent60;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-1803/biostat/staging/create_dummy_data";
                                                           The SAS System

MPRINT(GETLASTSTATUS):   output recontent60;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/itp/argx-113-1803/biostat/staging/create_dummy_data " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/itp/argx-113-1803/biostat/staging/create_dummy_data " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent60 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent60 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/itp/argx-113-1803/biostat/staging/create_dummy_data/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 1;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 61 -> /clinical/argx-113/itp/argx-113-1803/biostat/staging/final/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-1803/biostat/staging/final/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/itp/argx-113-1803/biostat/staging/final/qc_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=0 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent61;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-1803/biostat/staging/final/qc_adam";
MPRINT(GETLASTSTATUS):   output recontent61;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/itp/argx-113-1803/biostat/staging/final/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/itp/argx-113-1803/biostat/staging/final/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent61 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent61 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/itp/argx-113-1803/biostat/staging/final/qc_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 0;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 62 -> /clinical/argx-113/itp/argx-113-1803/biostat/staging/final/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-1803/biostat/staging/final/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/itp/argx-113-1803/biostat/staging/final/qc_tlf
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=0 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent62;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-1803/biostat/staging/final/qc_tlf";
MPRINT(GETLASTSTATUS):   output recontent62;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/itp/argx-113-1803/biostat/staging/final/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/itp/argx-113-1803/biostat/staging/final/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
                                                           The SAS System

MPRINT(GETLASTSTATUS):   proc sort data=recontent62 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent62 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/itp/argx-113-1803/biostat/staging/final/qc_tlf/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 0;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 63 -> /clinical/argx-113/itp/argx-113-1803/biostat/staging/ia1/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-1803/biostat/staging/ia1/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/itp/argx-113-1803/biostat/staging/ia1/qc_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=5 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent63;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-1803/biostat/staging/ia1/qc_adam";
MPRINT(GETLASTSTATUS):   output recontent63;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/itp/argx-113-1803/biostat/staging/ia1/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/itp/argx-113-1803/biostat/staging/ia1/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=Y
MPRINT(GETLASTSTATUS):   proc sort data=recontent63 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent63 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/itp/argx-113-1803/biostat/staging/ia1/qc_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 5;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 64 -> /clinical/argx-113/itp/argx-113-1803/biostat/staging/ia1/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-1803/biostat/staging/ia1/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/itp/argx-113-1803/biostat/staging/ia1/qc_tlf
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=23 ALLLST=1
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent64;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-1803/biostat/staging/ia1/qc_tlf";
MPRINT(GETLASTSTATUS):   output recontent64;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/itp/argx-113-1803/biostat/staging/ia1/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/itp/argx-113-1803/biostat/staging/ia1/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent64 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent64 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/itp/argx-113-1803/biostat/staging/ia1/qc_tlf/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 23;
MPRINT(GETLASTSTATUS):   alllst = 1;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 65 -> /clinical/argx-113/itp/argx-113-1803/biostat/staging/ia1_intextfig
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-1803/biostat/staging/ia1_intextfig
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/itp/argx-113-1803/biostat/staging/ia1_intextfig
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=0 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent65;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-1803/biostat/staging/ia1_intextfig";
MPRINT(GETLASTSTATUS):   output recontent65;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/itp/argx-113-1803/biostat/staging/ia1_intextfig " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/itp/argx-113-1803/biostat/staging/ia1_intextfig " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
                                                           The SAS System

PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent65 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent65 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/itp/argx-113-1803/biostat/staging/ia1_intextfig/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 0;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 66 -> /clinical/argx-113/itp/argx-113-1803/biostat/staging/ia1_pmda/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-1803/biostat/staging/ia1_pmda/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/itp/argx-113-1803/biostat/staging/ia1_pmda/qc_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=0 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent66;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-1803/biostat/staging/ia1_pmda/qc_adam";
MPRINT(GETLASTSTATUS):   output recontent66;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/itp/argx-113-1803/biostat/staging/ia1_pmda/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/itp/argx-113-1803/biostat/staging/ia1_pmda/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=Y
MPRINT(GETLASTSTATUS):   proc sort data=recontent66 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent66 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/itp/argx-113-1803/biostat/staging/ia1_pmda/qc_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 0;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 67 -> /clinical/argx-113/itp/argx-113-1803/biostat/staging/ia1_pmda/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-1803/biostat/staging/ia1_pmda/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
                                                           The SAS System

Returned a list of items in /clinical/argx-113/itp/argx-113-1803/biostat/staging/ia1_pmda/qc_tlf
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=0 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent67;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-1803/biostat/staging/ia1_pmda/qc_tlf";
MPRINT(GETLASTSTATUS):   output recontent67;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/itp/argx-113-1803/biostat/staging/ia1_pmda/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/itp/argx-113-1803/biostat/staging/ia1_pmda/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent67 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent67 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/itp/argx-113-1803/biostat/staging/ia1_pmda/qc_tlf/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 0;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 68 -> /clinical/argx-113/itp/argx-113-1803/biostat/staging/testrun1/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-1803/biostat/staging/testrun1/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/itp/argx-113-1803/biostat/staging/testrun1/qc_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=6 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent68;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-1803/biostat/staging/testrun1/qc_adam";
MPRINT(GETLASTSTATUS):   output recontent68;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/itp/argx-113-1803/biostat/staging/testrun1/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/itp/argx-113-1803/biostat/staging/testrun1/qc_adam " path;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=Y
MPRINT(GETLASTSTATUS):   proc sort data=recontent68 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent68 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/itp/argx-113-1803/biostat/staging/testrun1/qc_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 6;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 69 -> /clinical/argx-113/itp/argx-113-1803/biostat/staging/testrun1/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-1803/biostat/staging/testrun1/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/itp/argx-113-1803/biostat/staging/testrun1/qc_tlf
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=4 ALLLST=11
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent69;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-1803/biostat/staging/testrun1/qc_tlf";
MPRINT(GETLASTSTATUS):   output recontent69;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/itp/argx-113-1803/biostat/staging/testrun1/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/itp/argx-113-1803/biostat/staging/testrun1/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent69 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent69 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/itp/argx-113-1803/biostat/staging/testrun1/qc_tlf/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 4;
MPRINT(GETLASTSTATUS):   alllst = 11;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 70 -> /clinical/argx-113/itp/argx-113-1803/biostat/staging/testrun1b
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
                                                           The SAS System

Returned a list of items in /clinical/argx-113/itp/argx-113-1803/biostat/staging/testrun1b
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=43 ALLLST=15
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent70;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-1803/biostat/staging/testrun1b";
MPRINT(GETLASTSTATUS):   output recontent70;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/itp/argx-113-1803/biostat/staging/testrun1b " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/itp/argx-113-1803/biostat/staging/testrun1b " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
WARNING: >1 projectstatus.html file in /clinical/argx-113/itp/argx-113-1803/biostat/staging/testrun1b
/clinical/argx-113/itp/argx-113-1803/biostat/staging/testrun1b/qc_adam/documents/projectstatus.html
WARNING: >1 projectstatus.html file in /clinical/argx-113/itp/argx-113-1803/biostat/staging/testrun1b
/clinical/argx-113/itp/argx-113-1803/biostat/staging/testrun1b/qc_tlf/documents/projectstatus.html
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=Y
MPRINT(GETLASTSTATUS):   proc sort data=recontent70 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent70 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
                                                           The SAS System

"/clinical/argx-113/itp/argx-113-1803/biostat/staging/testrun1b/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 43;
MPRINT(GETLASTSTATUS):   alllst = 15;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 71 -> /clinical/argx-113/itp/argx-113-1803/biostat/staging/testrun1b/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-1803/biostat/staging/testrun1b/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/itp/argx-113-1803/biostat/staging/testrun1b/qc_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=3 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent71;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-1803/biostat/staging/testrun1b/qc_adam";
MPRINT(GETLASTSTATUS):   output recontent71;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/itp/argx-113-1803/biostat/staging/testrun1b/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/itp/argx-113-1803/biostat/staging/testrun1b/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=Y
MPRINT(GETLASTSTATUS):   proc sort data=recontent71 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent71 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/itp/argx-113-1803/biostat/staging/testrun1b/qc_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 3;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 72 -> /clinical/argx-113/itp/argx-113-1803/biostat/staging/testrun1b/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-1803/biostat/staging/testrun1b/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/itp/argx-113-1803/biostat/staging/testrun1b/qc_tlf
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
                                                           The SAS System

ALLSASPGM=15 ALLLST=15
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent72;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-1803/biostat/staging/testrun1b/qc_tlf";
MPRINT(GETLASTSTATUS):   output recontent72;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/itp/argx-113-1803/biostat/staging/testrun1b/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/itp/argx-113-1803/biostat/staging/testrun1b/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent72 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent72 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/itp/argx-113-1803/biostat/staging/testrun1b/qc_tlf/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 15;
MPRINT(GETLASTSTATUS):   alllst = 15;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
                                                           The SAS System

MPRINT(GETLASTSTATUS):   run;
!!! 73 -> /clinical/argx-113/itp/argx-113-2004/biostat/staging/create_dummy_data
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-2004/biostat/staging/create_dummy_data
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/itp/argx-113-2004/biostat/staging/create_dummy_data
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=1 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent73;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-2004/biostat/staging/create_dummy_data";
MPRINT(GETLASTSTATUS):   output recontent73;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/itp/argx-113-2004/biostat/staging/create_dummy_data " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/itp/argx-113-2004/biostat/staging/create_dummy_data " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent73 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent73 out=lastmod;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/itp/argx-113-2004/biostat/staging/create_dummy_data/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 1;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 74 -> /clinical/argx-113/itp/argx-113-2004/biostat/staging/sample_size
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-2004/biostat/staging/sample_size
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/itp/argx-113-2004/biostat/staging/sample_size
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=3 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent74;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-2004/biostat/staging/sample_size";
MPRINT(GETLASTSTATUS):   output recontent74;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/itp/argx-113-2004/biostat/staging/sample_size " path;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/itp/argx-113-2004/biostat/staging/sample_size " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent74 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent74 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/itp/argx-113-2004/biostat/staging/sample_size/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 3;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 75 -> /clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun0/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun0/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun0/qc_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=0 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent75;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun0/qc_adam";
MPRINT(GETLASTSTATUS):   output recontent75;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun0/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun0/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent75 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent75 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun0/qc_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 0;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 76 -> /clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun0/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun0/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun0/qc_tlf
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=0 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent76;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun0/qc_tlf";
MPRINT(GETLASTSTATUS):   output recontent76;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun0/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun0/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent76 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent76 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun0/qc_tlf/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 0;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 77 -> /clinical/argx-113/itp/argx-113-2005/biostat/staging/patient_profiles
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-2005/biostat/staging/patient_profiles
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/itp/argx-113-2005/biostat/staging/patient_profiles
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=1 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent77;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-2005/biostat/staging/patient_profiles";
MPRINT(GETLASTSTATUS):   output recontent77;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
                                                           The SAS System

MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/itp/argx-113-2005/biostat/staging/patient_profiles " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/itp/argx-113-2005/biostat/staging/patient_profiles " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent77 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent77 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/itp/argx-113-2005/biostat/staging/patient_profiles/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 1;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 78 -> /clinical/argx-113/itp/argx-113-2005/biostat/staging/testrun0/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-2005/biostat/staging/testrun0/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/itp/argx-113-2005/biostat/staging/testrun0/qc_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=0 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent78;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-2005/biostat/staging/testrun0/qc_adam";
MPRINT(GETLASTSTATUS):   output recontent78;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/itp/argx-113-2005/biostat/staging/testrun0/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/itp/argx-113-2005/biostat/staging/testrun0/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent78 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent78 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/itp/argx-113-2005/biostat/staging/testrun0/qc_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 0;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 79 -> /clinical/argx-113/itp/argx-113-2005/biostat/staging/testrun0/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-2005/biostat/staging/testrun0/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/itp/argx-113-2005/biostat/staging/testrun0/qc_tlf
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=0 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent79;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-2005/biostat/staging/testrun0/qc_tlf";
MPRINT(GETLASTSTATUS):   output recontent79;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/itp/argx-113-2005/biostat/staging/testrun0/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/itp/argx-113-2005/biostat/staging/testrun0/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent79 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent79 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/itp/argx-113-2005/biostat/staging/testrun0/qc_tlf/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 0;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 80 -> /clinical/argx-113/itp/argx-113-2005/biostat/staging/testrun1/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-2005/biostat/staging/testrun1/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/itp/argx-113-2005/biostat/staging/testrun1/qc_tlf
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=0 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent80;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-2005/biostat/staging/testrun1/qc_tlf";
MPRINT(GETLASTSTATUS):   output recontent80;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/itp/argx-113-2005/biostat/staging/testrun1/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/itp/argx-113-2005/biostat/staging/testrun1/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent80 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent80 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/itp/argx-113-2005/biostat/staging/testrun1/qc_tlf/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 0;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 81 -> /clinical/argx-113/itp/argx-113-9101/biostat/staging/dsmb_20221027
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-9101/biostat/staging/dsmb_20221027
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/itp/argx-113-9101/biostat/staging/dsmb_20221027
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=1 ALLLST=4
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent81;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-9101/biostat/staging/dsmb_20221027";
MPRINT(GETLASTSTATUS):   output recontent81;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/itp/argx-113-9101/biostat/staging/dsmb_20221027 " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/itp/argx-113-9101/biostat/staging/dsmb_20221027 " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent81 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent81 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/itp/argx-113-9101/biostat/staging/dsmb_20221027/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 1;
MPRINT(GETLASTSTATUS):   alllst = 4;
MPRINT(GETLASTSTATUS):   run;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 82 -> /clinical/argx-113/itp/argx-113-9101/biostat/staging/ia1/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-9101/biostat/staging/ia1/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/itp/argx-113-9101/biostat/staging/ia1/qc_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=1 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent82;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-9101/biostat/staging/ia1/qc_adam";
MPRINT(GETLASTSTATUS):   output recontent82;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/itp/argx-113-9101/biostat/staging/ia1/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/itp/argx-113-9101/biostat/staging/ia1/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=Y
MPRINT(GETLASTSTATUS):   proc sort data=recontent82 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent82 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/itp/argx-113-9101/biostat/staging/ia1/qc_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 1;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 83 -> /clinical/argx-113/itp/argx-113-9101/biostat/staging/ia1/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-9101/biostat/staging/ia1/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/itp/argx-113-9101/biostat/staging/ia1/qc_tlf
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=0 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent83;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-9101/biostat/staging/ia1/qc_tlf";
                                                           The SAS System

MPRINT(GETLASTSTATUS):   output recontent83;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/itp/argx-113-9101/biostat/staging/ia1/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/itp/argx-113-9101/biostat/staging/ia1/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent83 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent83 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/itp/argx-113-9101/biostat/staging/ia1/qc_tlf/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 0;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 84 -> /clinical/argx-113/itp/argx-113-9101/biostat/staging/testrun1/qc_adam_pb2
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-9101/biostat/staging/testrun1/qc_adam_pb2
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/itp/argx-113-9101/biostat/staging/testrun1/qc_adam_pb2
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=3 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent84;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-9101/biostat/staging/testrun1/qc_adam_pb2";
MPRINT(GETLASTSTATUS):   output recontent84;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/itp/argx-113-9101/biostat/staging/testrun1/qc_adam_pb2 " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/itp/argx-113-9101/biostat/staging/testrun1/qc_adam_pb2 " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent84 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent84 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/itp/argx-113-9101/biostat/staging/testrun1/qc_adam_pb2/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 3;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 85 -> /clinical/argx-113/itp/argx-113-9101/biostat/staging/testrun1/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-9101/biostat/staging/testrun1/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/itp/argx-113-9101/biostat/staging/testrun1/qc_tlf
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=39 ALLLST=18
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent85;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-9101/biostat/staging/testrun1/qc_tlf";
MPRINT(GETLASTSTATUS):   output recontent85;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/itp/argx-113-9101/biostat/staging/testrun1/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/itp/argx-113-9101/biostat/staging/testrun1/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
                                                           The SAS System

MPRINT(GETLASTSTATUS):   proc sort data=recontent85 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent85 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/itp/argx-113-9101/biostat/staging/testrun1/qc_tlf/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 39;
MPRINT(GETLASTSTATUS):   alllst = 18;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 86 -> /clinical/argx-113/itp/argx-113-9103/biostat/staging/ia1/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-9103/biostat/staging/ia1/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/itp/argx-113-9103/biostat/staging/ia1/qc_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=4 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent86;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-9103/biostat/staging/ia1/qc_adam";
MPRINT(GETLASTSTATUS):   output recontent86;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/itp/argx-113-9103/biostat/staging/ia1/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/itp/argx-113-9103/biostat/staging/ia1/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=Y
MPRINT(GETLASTSTATUS):   proc sort data=recontent86 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent86 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/itp/argx-113-9103/biostat/staging/ia1/qc_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 4;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 87 -> /clinical/argx-113/itp/argx-113-9103/biostat/staging/ia1/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-9103/biostat/staging/ia1/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/itp/argx-113-9103/biostat/staging/ia1/qc_tlf
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=0 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent87;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-9103/biostat/staging/ia1/qc_tlf";
MPRINT(GETLASTSTATUS):   output recontent87;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/itp/argx-113-9103/biostat/staging/ia1/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/itp/argx-113-9103/biostat/staging/ia1/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent87 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent87 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/itp/argx-113-9103/biostat/staging/ia1/qc_tlf/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 0;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 88 -> /clinical/argx-113/itp/argx-113-9103/biostat/staging/ia1_272fig
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-9103/biostat/staging/ia1_272fig
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/itp/argx-113-9103/biostat/staging/ia1_272fig
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=0 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent88;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-9103/biostat/staging/ia1_272fig";
MPRINT(GETLASTSTATUS):   output recontent88;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/itp/argx-113-9103/biostat/staging/ia1_272fig " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/itp/argx-113-9103/biostat/staging/ia1_272fig " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
                                                           The SAS System

PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent88 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent88 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/itp/argx-113-9103/biostat/staging/ia1_272fig/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 0;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 89 -> /clinical/argx-113/itp/argx-113-9103/biostat/staging/ia1_isifig
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-9103/biostat/staging/ia1_isifig
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/itp/argx-113-9103/biostat/staging/ia1_isifig
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=0 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent89;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-9103/biostat/staging/ia1_isifig";
MPRINT(GETLASTSTATUS):   output recontent89;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/itp/argx-113-9103/biostat/staging/ia1_isifig " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/itp/argx-113-9103/biostat/staging/ia1_isifig " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent89 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent89 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/itp/argx-113-9103/biostat/staging/ia1_isifig/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 0;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 90 -> /clinical/argx-113/itp/argx-113-9103/biostat/staging/testrun1/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-9103/biostat/staging/testrun1/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
                                                           The SAS System

Returned a list of items in /clinical/argx-113/itp/argx-113-9103/biostat/staging/testrun1/qc_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=1 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent90;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-9103/biostat/staging/testrun1/qc_adam";
MPRINT(GETLASTSTATUS):   output recontent90;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/itp/argx-113-9103/biostat/staging/testrun1/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/itp/argx-113-9103/biostat/staging/testrun1/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=Y
MPRINT(GETLASTSTATUS):   proc sort data=recontent90 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent90 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/itp/argx-113-9103/biostat/staging/testrun1/qc_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 1;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 91 -> /clinical/argx-113/itp/argx-113-9103/biostat/staging/testrun1/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-9103/biostat/staging/testrun1/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/itp/argx-113-9103/biostat/staging/testrun1/qc_tlf
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=7 ALLLST=7
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent91;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-9103/biostat/staging/testrun1/qc_tlf";
MPRINT(GETLASTSTATUS):   output recontent91;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/itp/argx-113-9103/biostat/staging/testrun1/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/itp/argx-113-9103/biostat/staging/testrun1/qc_tlf " path;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent91 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent91 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/itp/argx-113-9103/biostat/staging/testrun1/qc_tlf/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 7;
MPRINT(GETLASTSTATUS):   alllst = 7;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 92 -> /clinical/argx-113/mg/argx-113-1704/biostat/staging/ema
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-1704/biostat/staging/ema
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=19 ALLLST=87
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent92;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-1704/biostat/staging/ema";
MPRINT(GETLASTSTATUS):   output recontent92;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-1704/biostat/staging/ema " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-1704/biostat/staging/ema " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=Y
MPRINT(GETLASTSTATUS):   proc sort data=recontent92 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent92 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-1704/biostat/staging/ema/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 19;
MPRINT(GETLASTSTATUS):   alllst = 87;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 93 -> /clinical/argx-113/mg/argx-113-1704/biostat/staging/fda
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
                                                           The SAS System

Returned a list of items in /clinical/argx-113/mg/argx-113-1704/biostat/staging/fda
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=12 ALLLST=54
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent93;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-1704/biostat/staging/fda";
MPRINT(GETLASTSTATUS):   output recontent93;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-1704/biostat/staging/fda " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-1704/biostat/staging/fda " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=Y
MPRINT(GETLASTSTATUS):   proc sort data=recontent93 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent93 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-1704/biostat/staging/fda/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 12;
MPRINT(GETLASTSTATUS):   alllst = 54;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 94 -> /clinical/argx-113/mg/argx-113-1704/biostat/staging/fda2
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-1704/biostat/staging/fda2
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=14 ALLLST=74
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent94;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-1704/biostat/staging/fda2";
MPRINT(GETLASTSTATUS):   output recontent94;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-1704/biostat/staging/fda2 " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-1704/biostat/staging/fda2 " path;
MPRINT(GETLASTSTATUS):   else output splist;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent94 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent94 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-1704/biostat/staging/fda2/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 14;
MPRINT(GETLASTSTATUS):   alllst = 74;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 95 -> /clinical/argx-113/mg/argx-113-1704/biostat/staging/gba
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-1704/biostat/staging/gba
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=23 ALLLST=195
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
                                                           The SAS System

(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent95;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-1704/biostat/staging/gba";
MPRINT(GETLASTSTATUS):   output recontent95;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-1704/biostat/staging/gba " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-1704/biostat/staging/gba " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=Y
MPRINT(GETLASTSTATUS):   proc sort data=recontent95 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent95 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-1704/biostat/staging/gba/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 23;
MPRINT(GETLASTSTATUS):   alllst = 195;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 96 -> /clinical/argx-113/mg/argx-113-1704/biostat/staging/gba_test
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
                                                           The SAS System

Returned a list of items in /clinical/argx-113/mg/argx-113-1704/biostat/staging/gba_test
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=4 ALLLST=39
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent96;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-1704/biostat/staging/gba_test";
MPRINT(GETLASTSTATUS):   output recontent96;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-1704/biostat/staging/gba_test " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-1704/biostat/staging/gba_test " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent96 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent96 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-1704/biostat/staging/gba_test/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 4;
MPRINT(GETLASTSTATUS):   alllst = 39;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 97 -> /clinical/argx-113/mg/argx-113-1704/biostat/staging/gba_test52
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-1704/biostat/staging/gba_test52
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=7 ALLLST=47
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent97;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-1704/biostat/staging/gba_test52";
MPRINT(GETLASTSTATUS):   output recontent97;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-1704/biostat/staging/gba_test52 " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-1704/biostat/staging/gba_test52 " path;
MPRINT(GETLASTSTATUS):   else output splist;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent97 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent97 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-1704/biostat/staging/gba_test52/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 7;
MPRINT(GETLASTSTATUS):   alllst = 47;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 98 -> /clinical/argx-113/mg/argx-113-1704/biostat/staging/icer
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-1704/biostat/staging/icer
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=7 ALLLST=61
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
                                                           The SAS System

(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent98;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-1704/biostat/staging/icer";
MPRINT(GETLASTSTATUS):   output recontent98;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-1704/biostat/staging/icer " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-1704/biostat/staging/icer " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent98 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent98 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-1704/biostat/staging/icer/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 7;
MPRINT(GETLASTSTATUS):   alllst = 61;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 99 -> /clinical/argx-113/mg/argx-113-1704/biostat/staging/ma
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
                                                           The SAS System

Returned a list of items in /clinical/argx-113/mg/argx-113-1704/biostat/staging/ma
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=30 ALLLST=102
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent99;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-1704/biostat/staging/ma";
MPRINT(GETLASTSTATUS):   output recontent99;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-1704/biostat/staging/ma " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-1704/biostat/staging/ma " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent99 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent99 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-1704/biostat/staging/ma/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 30;
MPRINT(GETLASTSTATUS):   alllst = 102;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 100 -> /clinical/argx-113/mg/argx-113-1704/biostat/staging/ma2022
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-1704/biostat/staging/ma2022
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=45 ALLLST=79
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent100;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-1704/biostat/staging/ma2022";
MPRINT(GETLASTSTATUS):   output recontent100;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-1704/biostat/staging/ma2022 " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-1704/biostat/staging/ma2022 " path;
MPRINT(GETLASTSTATUS):   else output splist;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=Y
MPRINT(GETLASTSTATUS):   proc sort data=recontent100 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent100 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-1704/biostat/staging/ma2022/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 45;
MPRINT(GETLASTSTATUS):   alllst = 79;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 101 -> /clinical/argx-113/mg/argx-113-1704/biostat/staging/ma2023
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-1704/biostat/staging/ma2023
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=4 ALLLST=6
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
                                                           The SAS System

(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent101;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-1704/biostat/staging/ma2023";
MPRINT(GETLASTSTATUS):   output recontent101;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-1704/biostat/staging/ma2023 " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-1704/biostat/staging/ma2023 " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent101 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent101 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-1704/biostat/staging/ma2023/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 4;
MPRINT(GETLASTSTATUS):   alllst = 6;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 102 -> /clinical/argx-113/mg/argx-113-1704/biostat/staging/narratives
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
                                                           The SAS System

Returned a list of items in /clinical/argx-113/mg/argx-113-1704/biostat/staging/narratives
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=0 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent102;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-1704/biostat/staging/narratives";
MPRINT(GETLASTSTATUS):   output recontent102;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-1704/biostat/staging/narratives " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-1704/biostat/staging/narratives " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent102 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent102 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-1704/biostat/staging/narratives/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 0;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 103 -> /clinical/argx-113/mg/argx-113-1704/biostat/staging/pmda
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-1704/biostat/staging/pmda
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=11 ALLLST=47
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent103;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-1704/biostat/staging/pmda";
MPRINT(GETLASTSTATUS):   output recontent103;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-1704/biostat/staging/pmda " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-1704/biostat/staging/pmda " path;
MPRINT(GETLASTSTATUS):   else output splist;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent103 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent103 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-1704/biostat/staging/pmda/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 11;
MPRINT(GETLASTSTATUS):   alllst = 47;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 104 -> /clinical/argx-113/mg/argx-113-1704/biostat/staging/pmda2
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-1704/biostat/staging/pmda2
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=9 ALLLST=133
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
                                                           The SAS System

(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent104;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-1704/biostat/staging/pmda2";
MPRINT(GETLASTSTATUS):   output recontent104;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-1704/biostat/staging/pmda2 " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-1704/biostat/staging/pmda2 " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent104 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent104 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-1704/biostat/staging/pmda2/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 9;
MPRINT(GETLASTSTATUS):   alllst = 133;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 105 -> /clinical/argx-113/mg/argx-113-1704/biostat/staging/posthoc
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
                                                           The SAS System

Returned a list of items in /clinical/argx-113/mg/argx-113-1704/biostat/staging/posthoc
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=14 ALLLST=36
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent105;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-1704/biostat/staging/posthoc";
MPRINT(GETLASTSTATUS):   output recontent105;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-1704/biostat/staging/posthoc " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-1704/biostat/staging/posthoc " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent105 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent105 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-1704/biostat/staging/posthoc/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 14;
MPRINT(GETLASTSTATUS):   alllst = 36;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 106 -> /clinical/argx-113/mg/argx-113-1704/biostat/staging/regain
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-1704/biostat/staging/regain
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=18 ALLLST=31
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent106;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-1704/biostat/staging/regain";
MPRINT(GETLASTSTATUS):   output recontent106;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-1704/biostat/staging/regain " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-1704/biostat/staging/regain " path;
MPRINT(GETLASTSTATUS):   else output splist;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent106 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent106 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-1704/biostat/staging/regain/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 18;
MPRINT(GETLASTSTATUS):   alllst = 31;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 107 -> /clinical/argx-113/mg/argx-113-1704/biostat/staging/sc_iv
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-1704/biostat/staging/sc_iv
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=12 ALLLST=21
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
                                                           The SAS System

(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent107;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-1704/biostat/staging/sc_iv";
MPRINT(GETLASTSTATUS):   output recontent107;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-1704/biostat/staging/sc_iv " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-1704/biostat/staging/sc_iv " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent107 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent107 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-1704/biostat/staging/sc_iv/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 12;
MPRINT(GETLASTSTATUS):   alllst = 21;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 108 -> /clinical/argx-113/mg/argx-113-1705/biostat/staging/ema
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
                                                           The SAS System

Returned a list of items in /clinical/argx-113/mg/argx-113-1705/biostat/staging/ema
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=3 ALLLST=3
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent108;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-1705/biostat/staging/ema";
MPRINT(GETLASTSTATUS):   output recontent108;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-1705/biostat/staging/ema " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-1705/biostat/staging/ema " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=Y
MPRINT(GETLASTSTATUS):   proc sort data=recontent108 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent108 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-1705/biostat/staging/ema/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 3;
MPRINT(GETLASTSTATUS):   alllst = 3;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 109 -> /clinical/argx-113/mg/argx-113-1705/biostat/staging/final/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-1705/biostat/staging/final/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-1705/biostat/staging/final/qc_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=5 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent109;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-1705/biostat/staging/final/qc_adam";
MPRINT(GETLASTSTATUS):   output recontent109;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-1705/biostat/staging/final/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-1705/biostat/staging/final/qc_adam " path;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=Y
MPRINT(GETLASTSTATUS):   proc sort data=recontent109 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent109 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-1705/biostat/staging/final/qc_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 5;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 110 -> /clinical/argx-113/mg/argx-113-1705/biostat/staging/ia-20201008/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-1705/biostat/staging/ia-20201008/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-1705/biostat/staging/ia-20201008/qc_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=7 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent110;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-1705/biostat/staging/ia-20201008/qc_adam";
MPRINT(GETLASTSTATUS):   output recontent110;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-1705/biostat/staging/ia-20201008/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-1705/biostat/staging/ia-20201008/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=N
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent110 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent110 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-1705/biostat/staging/ia-20201008/qc_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 7;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 111 -> /clinical/argx-113/mg/argx-113-1705/biostat/staging/ia-20201008/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
                                                           The SAS System

The item exists: /clinical/argx-113/mg/argx-113-1705/biostat/staging/ia-20201008/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-1705/biostat/staging/ia-20201008/qc_tlf
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=10 ALLLST=26
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent111;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-1705/biostat/staging/ia-20201008/qc_tlf";
MPRINT(GETLASTSTATUS):   output recontent111;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-1705/biostat/staging/ia-20201008/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-1705/biostat/staging/ia-20201008/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=N
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent111 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent111 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-1705/biostat/staging/ia-20201008/qc_tlf/documents/meta";
MPRINT(GETLASTSTATUS):   run;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 10;
MPRINT(GETLASTSTATUS):   alllst = 26;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 112 -> /clinical/argx-113/mg/argx-113-1705/biostat/staging/ia-20210201/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-1705/biostat/staging/ia-20210201/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-1705/biostat/staging/ia-20210201/qc_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=8 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent112;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-1705/biostat/staging/ia-20210201/qc_adam";
MPRINT(GETLASTSTATUS):   output recontent112;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-1705/biostat/staging/ia-20210201/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-1705/biostat/staging/ia-20210201/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent112 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent112 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-1705/biostat/staging/ia-20210201/qc_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 8;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 113 -> /clinical/argx-113/mg/argx-113-1705/biostat/staging/ia-20210201/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-1705/biostat/staging/ia-20210201/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-1705/biostat/staging/ia-20210201/qc_tlf
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=10 ALLLST=24
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent113;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-1705/biostat/staging/ia-20210201/qc_tlf";
MPRINT(GETLASTSTATUS):   output recontent113;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-1705/biostat/staging/ia-20210201/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-1705/biostat/staging/ia-20210201/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=Y
MPRINT(GETLASTSTATUS):   proc sort data=recontent113 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent113 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-1705/biostat/staging/ia-20210201/qc_tlf/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 10;
MPRINT(GETLASTSTATUS):   alllst = 24;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 114 -> /clinical/argx-113/mg/argx-113-1705/biostat/staging/ia-20220131/qc_adam
                                                           The SAS System

MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-1705/biostat/staging/ia-20220131/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-1705/biostat/staging/ia-20220131/qc_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=5 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent114;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-1705/biostat/staging/ia-20220131/qc_adam";
MPRINT(GETLASTSTATUS):   output recontent114;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-1705/biostat/staging/ia-20220131/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-1705/biostat/staging/ia-20220131/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=Y
MPRINT(GETLASTSTATUS):   proc sort data=recontent114 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent114 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
                                                           The SAS System

"/clinical/argx-113/mg/argx-113-1705/biostat/staging/ia-20220131/qc_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 5;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 115 -> /clinical/argx-113/mg/argx-113-1705/biostat/staging/ia-20220131/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-1705/biostat/staging/ia-20220131/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-1705/biostat/staging/ia-20220131/qc_tlf
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=9 ALLLST=24
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent115;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-1705/biostat/staging/ia-20220131/qc_tlf";
MPRINT(GETLASTSTATUS):   output recontent115;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-1705/biostat/staging/ia-20220131/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-1705/biostat/staging/ia-20220131/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent115 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent115 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-1705/biostat/staging/ia-20220131/qc_tlf/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 9;
MPRINT(GETLASTSTATUS):   alllst = 24;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 116 -> /clinical/argx-113/mg/argx-113-1705/biostat/staging/ma2022
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-1705/biostat/staging/ma2022
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=14 ALLLST=19
                                                           The SAS System

MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent116;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-1705/biostat/staging/ma2022";
MPRINT(GETLASTSTATUS):   output recontent116;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-1705/biostat/staging/ma2022 " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-1705/biostat/staging/ma2022 " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent116 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent116 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-1705/biostat/staging/ma2022/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 14;
MPRINT(GETLASTSTATUS):   alllst = 19;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
                                                           The SAS System

!!! 117 -> /clinical/argx-113/mg/argx-113-1705/biostat/staging/narratives
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-1705/biostat/staging/narratives
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=1 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent117;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-1705/biostat/staging/narratives";
MPRINT(GETLASTSTATUS):   output recontent117;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-1705/biostat/staging/narratives " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-1705/biostat/staging/narratives " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent117 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent117 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
                                                           The SAS System

"/clinical/argx-113/mg/argx-113-1705/biostat/staging/narratives/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 1;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 118 -> /clinical/argx-113/mg/argx-113-1705/biostat/staging/pmda2
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-1705/biostat/staging/pmda2
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=27 ALLLST=89
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent118;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-1705/biostat/staging/pmda2";
MPRINT(GETLASTSTATUS):   output recontent118;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-1705/biostat/staging/pmda2 " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-1705/biostat/staging/pmda2 " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent118 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent118 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-1705/biostat/staging/pmda2/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 27;
MPRINT(GETLASTSTATUS):   alllst = 89;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 119 -> /clinical/argx-113/mg/argx-113-1705/biostat/staging/posthoc
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-1705/biostat/staging/posthoc
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=21 ALLLST=1
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent119;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-1705/biostat/staging/posthoc";
MPRINT(GETLASTSTATUS):   output recontent119;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-1705/biostat/staging/posthoc " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-1705/biostat/staging/posthoc " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent119 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent119 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-1705/biostat/staging/posthoc/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 21;
MPRINT(GETLASTSTATUS):   alllst = 1;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 120 -> /clinical/argx-113/mg/argx-113-2001/biostat/staging/fda
                                                           The SAS System

MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-2001/biostat/staging/fda
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=6 ALLLST=19
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent120;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-2001/biostat/staging/fda";
MPRINT(GETLASTSTATUS):   output recontent120;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-2001/biostat/staging/fda " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-2001/biostat/staging/fda " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent120 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent120 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-2001/biostat/staging/fda/documents/meta";
                                                           The SAS System

MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 6;
MPRINT(GETLASTSTATUS):   alllst = 19;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 121 -> /clinical/argx-113/mg/argx-113-2001/biostat/staging/final/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-2001/biostat/staging/final/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-2001/biostat/staging/final/qc_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=22 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent121;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-2001/biostat/staging/final/qc_adam";
MPRINT(GETLASTSTATUS):   output recontent121;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-2001/biostat/staging/final/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-2001/biostat/staging/final/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=Y
MPRINT(GETLASTSTATUS):   proc sort data=recontent121 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent121 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-2001/biostat/staging/final/qc_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 22;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 122 -> /clinical/argx-113/mg/argx-113-2001/biostat/staging/final/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-2001/biostat/staging/final/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-2001/biostat/staging/final/qc_tlf
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=52 ALLLST=133
                                                           The SAS System

MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent122;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-2001/biostat/staging/final/qc_tlf";
MPRINT(GETLASTSTATUS):   output recontent122;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-2001/biostat/staging/final/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-2001/biostat/staging/final/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent122 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent122 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-2001/biostat/staging/final/qc_tlf/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 52;
MPRINT(GETLASTSTATUS):   alllst = 133;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
                                                           The SAS System

!!! 123 -> /clinical/argx-113/mg/argx-113-2001/biostat/staging/ma2023
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-2001/biostat/staging/ma2023
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=0 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent123;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-2001/biostat/staging/ma2023";
MPRINT(GETLASTSTATUS):   output recontent123;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-2001/biostat/staging/ma2023 " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-2001/biostat/staging/ma2023 " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent123 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent123 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
                                                           The SAS System

"/clinical/argx-113/mg/argx-113-2001/biostat/staging/ma2023/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 0;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 124 -> /clinical/argx-113/mg/argx-113-2001/biostat/staging/pmda
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-2001/biostat/staging/pmda
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=14 ALLLST=38
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent124;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-2001/biostat/staging/pmda";
MPRINT(GETLASTSTATUS):   output recontent124;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-2001/biostat/staging/pmda " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-2001/biostat/staging/pmda " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=Y
MPRINT(GETLASTSTATUS):   proc sort data=recontent124 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent124 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-2001/biostat/staging/pmda/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 14;
MPRINT(GETLASTSTATUS):   alllst = 38;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 125 -> /clinical/argx-113/mg/argx-113-2001/biostat/staging/posthoc
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-2001/biostat/staging/posthoc
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=19 ALLLST=67
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent125;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-2001/biostat/staging/posthoc";
MPRINT(GETLASTSTATUS):   output recontent125;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-2001/biostat/staging/posthoc " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-2001/biostat/staging/posthoc " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=Y
MPRINT(GETLASTSTATUS):   proc sort data=recontent125 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent125 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-2001/biostat/staging/posthoc/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 19;
MPRINT(GETLASTSTATUS):   alllst = 67;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 126 -> /clinical/argx-113/mg/argx-113-2001/biostat/staging/sc_iv
                                                           The SAS System

MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-2001/biostat/staging/sc_iv
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=11 ALLLST=22
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent126;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-2001/biostat/staging/sc_iv";
MPRINT(GETLASTSTATUS):   output recontent126;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-2001/biostat/staging/sc_iv " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-2001/biostat/staging/sc_iv " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent126 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent126 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-2001/biostat/staging/sc_iv/documents/meta";
                                                           The SAS System

MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 11;
MPRINT(GETLASTSTATUS):   alllst = 22;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 127 -> /clinical/argx-113/mg/argx-113-2001/biostat/staging/testrun1/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-2001/biostat/staging/testrun1/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-2001/biostat/staging/testrun1/qc_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=19 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent127;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-2001/biostat/staging/testrun1/qc_adam";
MPRINT(GETLASTSTATUS):   output recontent127;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-2001/biostat/staging/testrun1/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-2001/biostat/staging/testrun1/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent127 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent127 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-2001/biostat/staging/testrun1/qc_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 19;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 128 -> /clinical/argx-113/mg/argx-113-2001/biostat/staging/testrun1/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-2001/biostat/staging/testrun1/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-2001/biostat/staging/testrun1/qc_tlf
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=32 ALLLST=98
                                                           The SAS System

MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent128;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-2001/biostat/staging/testrun1/qc_tlf";
MPRINT(GETLASTSTATUS):   output recontent128;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-2001/biostat/staging/testrun1/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-2001/biostat/staging/testrun1/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent128 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent128 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-2001/biostat/staging/testrun1/qc_tlf/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 32;
MPRINT(GETLASTSTATUS):   alllst = 98;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
                                                           The SAS System

!!! 129 -> /clinical/argx-113/mg/argx-113-2001/biostat/staging/testrun2/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-2001/biostat/staging/testrun2/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-2001/biostat/staging/testrun2/qc_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=21 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent129;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-2001/biostat/staging/testrun2/qc_adam";
MPRINT(GETLASTSTATUS):   output recontent129;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-2001/biostat/staging/testrun2/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-2001/biostat/staging/testrun2/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent129 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent129 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-2001/biostat/staging/testrun2/qc_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 21;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 130 -> /clinical/argx-113/mg/argx-113-2001/biostat/staging/testrun2/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-2001/biostat/staging/testrun2/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-2001/biostat/staging/testrun2/qc_tlf
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=38 ALLLST=101
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent130;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-2001/biostat/staging/testrun2/qc_tlf";
MPRINT(GETLASTSTATUS):   output recontent130;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-2001/biostat/staging/testrun2/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-2001/biostat/staging/testrun2/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent130 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent130 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-2001/biostat/staging/testrun2/qc_tlf/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 38;
MPRINT(GETLASTSTATUS):   alllst = 101;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 131 -> /clinical/argx-113/mg/argx-113-2001/biostat/staging/testrun3/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-2001/biostat/staging/testrun3/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-2001/biostat/staging/testrun3/qc_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=25 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent131;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-2001/biostat/staging/testrun3/qc_adam";
MPRINT(GETLASTSTATUS):   output recontent131;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-2001/biostat/staging/testrun3/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-2001/biostat/staging/testrun3/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent131 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent131 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-2001/biostat/staging/testrun3/qc_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 25;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 132 -> /clinical/argx-113/mg/argx-113-2001/biostat/staging/testrun3/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-2001/biostat/staging/testrun3/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-2001/biostat/staging/testrun3/qc_tlf
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=44 ALLLST=119
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent132;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-2001/biostat/staging/testrun3/qc_tlf";
MPRINT(GETLASTSTATUS):   output recontent132;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-2001/biostat/staging/testrun3/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-2001/biostat/staging/testrun3/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent132 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   proc sort data=recontent132 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-2001/biostat/staging/testrun3/qc_tlf/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 44;
MPRINT(GETLASTSTATUS):   alllst = 119;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 133 -> /clinical/argx-113/mg/argx-113-2002/biostat/staging/exploratory
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-2002/biostat/staging/exploratory
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-2002/biostat/staging/exploratory
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=3 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent133;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-2002/biostat/staging/exploratory";
MPRINT(GETLASTSTATUS):   output recontent133;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
                                                           The SAS System

/clinical/argx-113/mg/argx-113-2002/biostat/staging/exploratory " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-2002/biostat/staging/exploratory " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent133 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent133 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-2002/biostat/staging/exploratory/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 3;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 134 -> /clinical/argx-113/mg/argx-113-2002/biostat/staging/fda
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-2002/biostat/staging/fda
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=0 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent134;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-2002/biostat/staging/fda";
MPRINT(GETLASTSTATUS):   output recontent134;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-2002/biostat/staging/fda " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-2002/biostat/staging/fda " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent134 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent134 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-2002/biostat/staging/fda/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 0;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 135 -> /clinical/argx-113/mg/argx-113-2002/biostat/staging/ia1/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-2002/biostat/staging/ia1/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-2002/biostat/staging/ia1/qc_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=19 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent135;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-2002/biostat/staging/ia1/qc_adam";
MPRINT(GETLASTSTATUS):   output recontent135;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-2002/biostat/staging/ia1/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-2002/biostat/staging/ia1/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent135 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent135 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-2002/biostat/staging/ia1/qc_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 19;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 136 -> /clinical/argx-113/mg/argx-113-2002/biostat/staging/ia1/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-2002/biostat/staging/ia1/qc_tlf
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=31 ALLLST=114
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent136;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-2002/biostat/staging/ia1/qc_tlf";
MPRINT(GETLASTSTATUS):   output recontent136;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
                                                           The SAS System

/clinical/argx-113/mg/argx-113-2002/biostat/staging/ia1/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-2002/biostat/staging/ia1/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent136 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent136 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-2002/biostat/staging/ia1/qc_tlf/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 31;
MPRINT(GETLASTSTATUS):   alllst = 114;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 137 -> /clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=82 ALLLST=79
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent137;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2";
MPRINT(GETLASTSTATUS):   output recontent137;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2 " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2 " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
WARNING: >1 projectstatus.html file in /clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2
/clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2/generic_adam/documents/projectstatus.html
WARNING: >1 projectstatus.html file in /clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2
/clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2/qc_adam/documents/projectstatus.html
WARNING: >1 projectstatus.html file in /clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2
/clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2/qc_tlf/documents/projectstatus.html
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent137 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent137 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 82;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   alllst = 79;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 138 -> /clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2/qc_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=19 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent138;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2/qc_adam";
MPRINT(GETLASTSTATUS):   output recontent138;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
                                                           The SAS System

MPRINT(GETLASTSTATUS):   proc sort data=recontent138 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent138 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2/qc_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 19;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 139 -> /clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2/qc_tlf
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=34 ALLLST=78
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent139;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2/qc_tlf";
MPRINT(GETLASTSTATUS):   output recontent139;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent139 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent139 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2/qc_tlf/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 34;
MPRINT(GETLASTSTATUS):   alllst = 78;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 140 -> /clinical/argx-113/mg/argx-113-2002/biostat/staging/ma2023
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-2002/biostat/staging/ma2023
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=1 ALLLST=2
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent140;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-2002/biostat/staging/ma2023";
MPRINT(GETLASTSTATUS):   output recontent140;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-2002/biostat/staging/ma2023 " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-2002/biostat/staging/ma2023 " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent140 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent140 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-2002/biostat/staging/ma2023/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 1;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   alllst = 2;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 141 -> /clinical/argx-113/mg/argx-113-2002/biostat/staging/narratives
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-2002/biostat/staging/narratives
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=1 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent141;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-2002/biostat/staging/narratives";
MPRINT(GETLASTSTATUS):   output recontent141;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-2002/biostat/staging/narratives " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-2002/biostat/staging/narratives " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent141 out=created;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent141 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-2002/biostat/staging/narratives/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 1;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 142 -> /clinical/argx-113/mg/argx-113-2002/biostat/staging/pmda
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-2002/biostat/staging/pmda
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=11 ALLLST=38
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent142;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-2002/biostat/staging/pmda";
                                                           The SAS System

MPRINT(GETLASTSTATUS):   output recontent142;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-2002/biostat/staging/pmda " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-2002/biostat/staging/pmda " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=Y
MPRINT(GETLASTSTATUS):   proc sort data=recontent142 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent142 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-2002/biostat/staging/pmda/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 11;
MPRINT(GETLASTSTATUS):   alllst = 38;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 143 -> /clinical/argx-113/mg/argx-113-2002/biostat/staging/posthoc
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-2002/biostat/staging/posthoc
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=4 ALLLST=13
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent143;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-2002/biostat/staging/posthoc";
MPRINT(GETLASTSTATUS):   output recontent143;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-2002/biostat/staging/posthoc " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-2002/biostat/staging/posthoc " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=Y
MPRINT(GETLASTSTATUS):   proc sort data=recontent143 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent143 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-2002/biostat/staging/posthoc/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 4;
MPRINT(GETLASTSTATUS):   alllst = 13;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 144 -> /clinical/argx-113/mg/argx-113-2002/biostat/staging/testrun1/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-2002/biostat/staging/testrun1/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-2002/biostat/staging/testrun1/qc_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=19 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent144;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-2002/biostat/staging/testrun1/qc_adam";
MPRINT(GETLASTSTATUS):   output recontent144;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-2002/biostat/staging/testrun1/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-2002/biostat/staging/testrun1/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=Y
MPRINT(GETLASTSTATUS):   proc sort data=recontent144 out=created;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent144 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-2002/biostat/staging/testrun1/qc_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 19;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 145 -> /clinical/argx-113/mg/argx-113-2002/biostat/staging/testrun1/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-2002/biostat/staging/testrun1/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-2002/biostat/staging/testrun1/qc_tlf
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=25 ALLLST=86
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent145;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-2002/biostat/staging/testrun1/qc_tlf";
MPRINT(GETLASTSTATUS):   output recontent145;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-2002/biostat/staging/testrun1/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-2002/biostat/staging/testrun1/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent145 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent145 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-2002/biostat/staging/testrun1/qc_tlf/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 25;
MPRINT(GETLASTSTATUS):   alllst = 86;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 146 -> /clinical/argx-113/mg/argx-113-2003/biostat/staging/ia1/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-2003/biostat/staging/ia1/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-2003/biostat/staging/ia1/qc_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
                                                           The SAS System

MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=6 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent146;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-2003/biostat/staging/ia1/qc_adam";
MPRINT(GETLASTSTATUS):   output recontent146;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-2003/biostat/staging/ia1/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-2003/biostat/staging/ia1/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=Y
MPRINT(GETLASTSTATUS):   proc sort data=recontent146 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent146 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-2003/biostat/staging/ia1/qc_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   allsaspgm = 6;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 147 -> /clinical/argx-113/mg/argx-113-2003/biostat/staging/ia1/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-2003/biostat/staging/ia1/qc_tlf
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=20 ALLLST=23
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent147;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-2003/biostat/staging/ia1/qc_tlf";
MPRINT(GETLASTSTATUS):   output recontent147;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-2003/biostat/staging/ia1/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-2003/biostat/staging/ia1/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
                                                           The SAS System

MPRINT(GETLASTSTATUS):   proc sort data=recontent147 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent147 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-2003/biostat/staging/ia1/qc_tlf/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 20;
MPRINT(GETLASTSTATUS):   alllst = 23;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 148 -> /clinical/argx-113/mg/argx-113-2003/biostat/staging/ia1_posthoc
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-2003/biostat/staging/ia1_posthoc
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-2003/biostat/staging/ia1_posthoc
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=5 ALLLST=11
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent148;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-2003/biostat/staging/ia1_posthoc";
MPRINT(GETLASTSTATUS):   output recontent148;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-2003/biostat/staging/ia1_posthoc " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-2003/biostat/staging/ia1_posthoc " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=Y
MPRINT(GETLASTSTATUS):   proc sort data=recontent148 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent148 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-2003/biostat/staging/ia1_posthoc/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 5;
MPRINT(GETLASTSTATUS):   alllst = 11;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 149 -> /clinical/argx-113/mg/argx-113-2003/biostat/staging/testrun1/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-2003/biostat/staging/testrun1/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-2003/biostat/staging/testrun1/qc_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=6 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent149;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-2003/biostat/staging/testrun1/qc_adam";
MPRINT(GETLASTSTATUS):   output recontent149;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-2003/biostat/staging/testrun1/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-2003/biostat/staging/testrun1/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=Y
MPRINT(GETLASTSTATUS):   proc sort data=recontent149 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent149 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-2003/biostat/staging/testrun1/qc_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 6;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 150 -> /clinical/argx-113/mg/argx-113-2003/biostat/staging/testrun1/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-2003/biostat/staging/testrun1/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-2003/biostat/staging/testrun1/qc_tlf
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=19 ALLLST=23
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent150;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-2003/biostat/staging/testrun1/qc_tlf";
MPRINT(GETLASTSTATUS):   output recontent150;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-2003/biostat/staging/testrun1/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-2003/biostat/staging/testrun1/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
                                                           The SAS System

PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent150 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent150 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-2003/biostat/staging/testrun1/qc_tlf/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 19;
MPRINT(GETLASTSTATUS):   alllst = 23;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 151 -> /clinical/argx-113/mg/argx-113-9001/biostat/staging/fda
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-9001/biostat/staging/fda
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=2 ALLLST=5
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent151;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-9001/biostat/staging/fda";
MPRINT(GETLASTSTATUS):   output recontent151;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-9001/biostat/staging/fda " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-9001/biostat/staging/fda " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent151 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent151 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-9001/biostat/staging/fda/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 2;
MPRINT(GETLASTSTATUS):   alllst = 5;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 152 -> /clinical/argx-113/mg/argx-113-9002/biostat/staging/posthoc
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-9002/biostat/staging/posthoc
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=2 ALLLST=1
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent152;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-9002/biostat/staging/posthoc";
MPRINT(GETLASTSTATUS):   output recontent152;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-9002/biostat/staging/posthoc " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-9002/biostat/staging/posthoc " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent152 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent152 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-9002/biostat/staging/posthoc/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 2;
MPRINT(GETLASTSTATUS):   alllst = 1;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 153 -> /clinical/argx-113/mg/argx-113-9004/biostat/staging/backup-tlf
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-9004/biostat/staging/backup-tlf
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=2 ALLLST=2
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent153;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-9004/biostat/staging/backup-tlf";
MPRINT(GETLASTSTATUS):   output recontent153;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-9004/biostat/staging/backup-tlf " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-9004/biostat/staging/backup-tlf " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
                                                           The SAS System

SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent153 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent153 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-9004/biostat/staging/backup-tlf/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 2;
MPRINT(GETLASTSTATUS):   alllst = 2;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 154 -> /clinical/argx-113/mg/argx-113-9004/biostat/staging/iss-90d-su/qc_adam-pb2
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-9004/biostat/staging/iss-90d-su/qc_adam-pb2
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-9004/biostat/staging/iss-90d-su/qc_adam-pb2
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=7 ALLLST=5
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent154;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-9004/biostat/staging/iss-90d-su/qc_adam-pb2";
MPRINT(GETLASTSTATUS):   output recontent154;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-9004/biostat/staging/iss-90d-su/qc_adam-pb2 " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-9004/biostat/staging/iss-90d-su/qc_adam-pb2 " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent154 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent154 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-9004/biostat/staging/iss-90d-su/qc_adam-pb2/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 7;
MPRINT(GETLASTSTATUS):   alllst = 5;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 155 -> /clinical/argx-113/mg/argx-113-9004/biostat/staging/iss-90d-su/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-9004/biostat/staging/iss-90d-su/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-9004/biostat/staging/iss-90d-su/qc_tlf
MPRINT(GETLASTSTATUS):   data pgms;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=5 ALLLST=13
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent155;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-9004/biostat/staging/iss-90d-su/qc_tlf";
MPRINT(GETLASTSTATUS):   output recontent155;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-9004/biostat/staging/iss-90d-su/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-9004/biostat/staging/iss-90d-su/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent155 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent155 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-9004/biostat/staging/iss-90d-su/qc_tlf/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 5;
MPRINT(GETLASTSTATUS):   alllst = 13;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 156 -> /clinical/argx-113/mg/argx-113-9004/biostat/staging/yearly_cycles
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-9004/biostat/staging/yearly_cycles
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-9004/biostat/staging/yearly_cycles
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=7 ALLLST=7
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent156;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-9004/biostat/staging/yearly_cycles";
MPRINT(GETLASTSTATUS):   output recontent156;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-9004/biostat/staging/yearly_cycles " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-9004/biostat/staging/yearly_cycles " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent156 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent156 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-9004/biostat/staging/yearly_cycles/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 7;
MPRINT(GETLASTSTATUS):   alllst = 7;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 157 -> /clinical/argx-113/mg/argx-113-9006/biostat/staging/iss/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-9006/biostat/staging/iss/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-9006/biostat/staging/iss/qc_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=2 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
                                                           The SAS System

(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent157;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-9006/biostat/staging/iss/qc_adam";
MPRINT(GETLASTSTATUS):   output recontent157;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-9006/biostat/staging/iss/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-9006/biostat/staging/iss/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent157 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent157 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-9006/biostat/staging/iss/qc_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 2;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 158 -> /clinical/argx-113/mg/argx-113-9006/biostat/staging/iss/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
                                                           The SAS System

Returned a list of items in /clinical/argx-113/mg/argx-113-9006/biostat/staging/iss/qc_tlf
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=0 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent158;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-9006/biostat/staging/iss/qc_tlf";
MPRINT(GETLASTSTATUS):   output recontent158;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-9006/biostat/staging/iss/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-9006/biostat/staging/iss/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent158 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent158 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-9006/biostat/staging/iss/qc_tlf/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 0;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 159 -> /clinical/argx-113/mg/argx-113-9011/biostat/staging/ema
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-9011/biostat/staging/ema
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=16 ALLLST=57
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent159;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-9011/biostat/staging/ema";
MPRINT(GETLASTSTATUS):   output recontent159;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-9011/biostat/staging/ema " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-9011/biostat/staging/ema " path;
MPRINT(GETLASTSTATUS):   else output splist;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=Y
MPRINT(GETLASTSTATUS):   proc sort data=recontent159 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent159 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-9011/biostat/staging/ema/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 16;
MPRINT(GETLASTSTATUS):   alllst = 57;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 160 -> /clinical/argx-113/mg/argx-113-9011/biostat/staging/iss-20210201/qc_adam-pb2
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-9011/biostat/staging/iss-20210201/qc_adam-pb2
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-9011/biostat/staging/iss-20210201/qc_adam-pb2
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=7 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent160;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-9011/biostat/staging/iss-20210201/qc_adam-pb2";
MPRINT(GETLASTSTATUS):   output recontent160;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-9011/biostat/staging/iss-20210201/qc_adam-pb2 " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-9011/biostat/staging/iss-20210201/qc_adam-pb2 " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent160 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent160 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-9011/biostat/staging/iss-20210201/qc_adam-pb2/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 7;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 161 -> /clinical/argx-113/mg/argx-113-9011/biostat/staging/iss-20210201/qc_adam-pb3
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-9011/biostat/staging/iss-20210201/qc_adam-pb3
MPRINT(GETLASTSTATUS):   options nomprint;
                                                           The SAS System

Returned a list of items in /clinical/argx-113/mg/argx-113-9011/biostat/staging/iss-20210201/qc_adam-pb3
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=2 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent161;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-9011/biostat/staging/iss-20210201/qc_adam-pb3";
MPRINT(GETLASTSTATUS):   output recontent161;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-9011/biostat/staging/iss-20210201/qc_adam-pb3 " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-9011/biostat/staging/iss-20210201/qc_adam-pb3 " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent161 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent161 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-9011/biostat/staging/iss-20210201/qc_adam-pb3/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
                                                           The SAS System

MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 2;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 162 -> /clinical/argx-113/mg/argx-113-9011/biostat/staging/iss-20210201/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-9011/biostat/staging/iss-20210201/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-9011/biostat/staging/iss-20210201/qc_tlf
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=5 ALLLST=8
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent162;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-9011/biostat/staging/iss-20210201/qc_tlf";
MPRINT(GETLASTSTATUS):   output recontent162;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-9011/biostat/staging/iss-20210201/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
                                                           The SAS System

/clinical/argx-113/mg/argx-113-9011/biostat/staging/iss-20210201/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent162 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent162 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-9011/biostat/staging/iss-20210201/qc_tlf/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 5;
MPRINT(GETLASTSTATUS):   alllst = 8;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 163 -> /clinical/argx-113/mg/argx-113-9011/biostat/staging/ma2022
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-9011/biostat/staging/ma2022
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=1 ALLLST=1
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent163;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-9011/biostat/staging/ma2022";
MPRINT(GETLASTSTATUS):   output recontent163;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-9011/biostat/staging/ma2022 " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-9011/biostat/staging/ma2022 " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent163 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent163 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-9011/biostat/staging/ma2022/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 1;
MPRINT(GETLASTSTATUS):   alllst = 1;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 164 -> /clinical/argx-113/mg/argx-113-9011/biostat/staging/pmda2
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
                                                           The SAS System

Returned a list of items in /clinical/argx-113/mg/argx-113-9011/biostat/staging/pmda2
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=8 ALLLST=81
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent164;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-9011/biostat/staging/pmda2";
MPRINT(GETLASTSTATUS):   output recontent164;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-9011/biostat/staging/pmda2 " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-9011/biostat/staging/pmda2 " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent164 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent164 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-9011/biostat/staging/pmda2/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
                                                           The SAS System

MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 8;
MPRINT(GETLASTSTATUS):   alllst = 81;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 165 -> /clinical/argx-113/mg/argx-113-9011/biostat/staging/yearly_cycles
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-9011/biostat/staging/yearly_cycles
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-9011/biostat/staging/yearly_cycles
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=5 ALLLST=9
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent165;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-9011/biostat/staging/yearly_cycles";
MPRINT(GETLASTSTATUS):   output recontent165;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-9011/biostat/staging/yearly_cycles " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
                                                           The SAS System

/clinical/argx-113/mg/argx-113-9011/biostat/staging/yearly_cycles " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent165 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent165 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-9011/biostat/staging/yearly_cycles/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 5;
MPRINT(GETLASTSTATUS):   alllst = 9;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 166 -> /clinical/argx-113/mg/argx-113-9012/biostat/staging/ema
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-9012/biostat/staging/ema
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=2 ALLLST=4
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent166;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-9012/biostat/staging/ema";
MPRINT(GETLASTSTATUS):   output recontent166;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-9012/biostat/staging/ema " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-9012/biostat/staging/ema " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=Y
MPRINT(GETLASTSTATUS):   proc sort data=recontent166 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent166 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-9012/biostat/staging/ema/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 2;
MPRINT(GETLASTSTATUS):   alllst = 4;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 167 -> /clinical/argx-113/mg/argx-113-9012/biostat/staging/ma
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
                                                           The SAS System

Returned a list of items in /clinical/argx-113/mg/argx-113-9012/biostat/staging/ma
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=0 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent167;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-9012/biostat/staging/ma";
MPRINT(GETLASTSTATUS):   output recontent167;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-9012/biostat/staging/ma " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-9012/biostat/staging/ma " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent167 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent167 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-9012/biostat/staging/ma/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
                                                           The SAS System

MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 0;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 168 -> /clinical/argx-113/mg/argx-113-9012/biostat/staging/regain
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-9012/biostat/staging/regain
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=2 ALLLST=2
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent168;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-9012/biostat/staging/regain";
MPRINT(GETLASTSTATUS):   output recontent168;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-9012/biostat/staging/regain " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-9012/biostat/staging/regain " path;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent168 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent168 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-9012/biostat/staging/regain/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 2;
MPRINT(GETLASTSTATUS):   alllst = 2;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 169 -> /clinical/argx-113/mg/argx-113-9013/biostat/staging/ema
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-9013/biostat/staging/ema
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=2 ALLLST=13
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent169;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-9013/biostat/staging/ema";
MPRINT(GETLASTSTATUS):   output recontent169;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-9013/biostat/staging/ema " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-9013/biostat/staging/ema " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=Y
MPRINT(GETLASTSTATUS):   proc sort data=recontent169 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent169 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-9013/biostat/staging/ema/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 2;
MPRINT(GETLASTSTATUS):   alllst = 13;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 170 -> /clinical/argx-113/mg/argx-113-9021/biostat/staging/ema
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
                                                           The SAS System

Returned a list of items in /clinical/argx-113/mg/argx-113-9021/biostat/staging/ema
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=1 ALLLST=4
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent170;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-9021/biostat/staging/ema";
MPRINT(GETLASTSTATUS):   output recontent170;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-9021/biostat/staging/ema " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-9021/biostat/staging/ema " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent170 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent170 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-9021/biostat/staging/ema/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 1;
MPRINT(GETLASTSTATUS):   alllst = 4;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 171 -> /clinical/argx-113/mg/argx-113-9021/biostat/staging/final/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-9021/biostat/staging/final/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-9021/biostat/staging/final/qc_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=14 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent171;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-9021/biostat/staging/final/qc_adam";
MPRINT(GETLASTSTATUS):   output recontent171;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-9021/biostat/staging/final/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-9021/biostat/staging/final/qc_adam " path;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent171 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent171 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-9021/biostat/staging/final/qc_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 14;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 172 -> /clinical/argx-113/mg/argx-113-9021/biostat/staging/final/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-9021/biostat/staging/final/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-9021/biostat/staging/final/qc_tlf
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=23 ALLLST=80
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent172;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-9021/biostat/staging/final/qc_tlf";
MPRINT(GETLASTSTATUS):   output recontent172;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-9021/biostat/staging/final/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-9021/biostat/staging/final/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent172 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent172 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-9021/biostat/staging/final/qc_tlf/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 23;
MPRINT(GETLASTSTATUS):   alllst = 80;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 173 -> /clinical/argx-113/mg/argx-113-9021/biostat/staging/posthoc
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
                                                           The SAS System

Returned a list of items in /clinical/argx-113/mg/argx-113-9021/biostat/staging/posthoc
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=9 ALLLST=24
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent173;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-9021/biostat/staging/posthoc";
MPRINT(GETLASTSTATUS):   output recontent173;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-9021/biostat/staging/posthoc " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-9021/biostat/staging/posthoc " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=Y
MPRINT(GETLASTSTATUS):   proc sort data=recontent173 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent173 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-9021/biostat/staging/posthoc/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
                                                           The SAS System

MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 9;
MPRINT(GETLASTSTATUS):   alllst = 24;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 174 -> /clinical/argx-113/mg/argx-113-9021/biostat/staging/testrun1/qc_adam_pb1
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-9021/biostat/staging/testrun1/qc_adam_pb1
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-9021/biostat/staging/testrun1/qc_adam_pb1
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=9 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent174;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-9021/biostat/staging/testrun1/qc_adam_pb1";
MPRINT(GETLASTSTATUS):   output recontent174;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-9021/biostat/staging/testrun1/qc_adam_pb1 " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
                                                           The SAS System

/clinical/argx-113/mg/argx-113-9021/biostat/staging/testrun1/qc_adam_pb1 " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent174 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent174 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-9021/biostat/staging/testrun1/qc_adam_pb1/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 9;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 175 -> /clinical/argx-113/mg/argx-113-9021/biostat/staging/testrun1/qc_adam_pb2
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-9021/biostat/staging/testrun1/qc_adam_pb2
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-9021/biostat/staging/testrun1/qc_adam_pb2
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=15 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent175;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-9021/biostat/staging/testrun1/qc_adam_pb2";
MPRINT(GETLASTSTATUS):   output recontent175;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-9021/biostat/staging/testrun1/qc_adam_pb2 " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-9021/biostat/staging/testrun1/qc_adam_pb2 " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent175 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent175 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-9021/biostat/staging/testrun1/qc_adam_pb2/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 15;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 176 -> /clinical/argx-113/mg/argx-113-9021/biostat/staging/testrun1/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
                                                           The SAS System

The item exists: /clinical/argx-113/mg/argx-113-9021/biostat/staging/testrun1/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-9021/biostat/staging/testrun1/qc_tlf
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=23 ALLLST=74
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent176;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-9021/biostat/staging/testrun1/qc_tlf";
MPRINT(GETLASTSTATUS):   output recontent176;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-9021/biostat/staging/testrun1/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-9021/biostat/staging/testrun1/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent176 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent176 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-9021/biostat/staging/testrun1/qc_tlf/documents/meta";
MPRINT(GETLASTSTATUS):   run;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 23;
MPRINT(GETLASTSTATUS):   alllst = 74;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 177 -> /clinical/argx-113/mg/argx-113-9022/biostat/staging/eff_subm
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-9022/biostat/staging/eff_subm
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=31 ALLLST=49
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent177;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-9022/biostat/staging/eff_subm";
MPRINT(GETLASTSTATUS):   output recontent177;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-9022/biostat/staging/eff_subm " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
                                                           The SAS System

MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-9022/biostat/staging/eff_subm " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=Y
MPRINT(GETLASTSTATUS):   proc sort data=recontent177 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent177 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-9022/biostat/staging/eff_subm/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 31;
MPRINT(GETLASTSTATUS):   alllst = 49;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 178 -> /clinical/argx-113/mg/argx-113-9023/biostat/staging/ema
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-9023/biostat/staging/ema
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=2 ALLLST=3
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent178;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-9023/biostat/staging/ema";
MPRINT(GETLASTSTATUS):   output recontent178;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-9023/biostat/staging/ema " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-9023/biostat/staging/ema " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent178 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent178 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-9023/biostat/staging/ema/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 2;
MPRINT(GETLASTSTATUS):   alllst = 3;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 179 -> /clinical/argx-113/mg/argx-113-9023/biostat/staging/final/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
                                                           The SAS System

The item exists: /clinical/argx-113/mg/argx-113-9023/biostat/staging/final/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-9023/biostat/staging/final/qc_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=4 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent179;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-9023/biostat/staging/final/qc_adam";
MPRINT(GETLASTSTATUS):   output recontent179;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-9023/biostat/staging/final/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-9023/biostat/staging/final/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent179 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent179 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-9023/biostat/staging/final/qc_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 4;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 180 -> /clinical/argx-113/mg/argx-113-9023/biostat/staging/final/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-9023/biostat/staging/final/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-9023/biostat/staging/final/qc_tlf
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=3 ALLLST=16
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent180;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-9023/biostat/staging/final/qc_tlf";
MPRINT(GETLASTSTATUS):   output recontent180;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-9023/biostat/staging/final/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-9023/biostat/staging/final/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent180 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent180 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-9023/biostat/staging/final/qc_tlf/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 3;
MPRINT(GETLASTSTATUS):   alllst = 16;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 181 -> /clinical/argx-113/mg/argx-113-9023/biostat/staging/posthoc
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-9023/biostat/staging/posthoc
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=9 ALLLST=8
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent181;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-9023/biostat/staging/posthoc";
MPRINT(GETLASTSTATUS):   output recontent181;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-9023/biostat/staging/posthoc " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-9023/biostat/staging/posthoc " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent181 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent181 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-9023/biostat/staging/posthoc/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 9;
MPRINT(GETLASTSTATUS):   alllst = 8;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 182 -> /clinical/argx-113/mg/argx-113-9023/biostat/staging/testrun1/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
                                                           The SAS System

The item exists: /clinical/argx-113/mg/argx-113-9023/biostat/staging/testrun1/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-9023/biostat/staging/testrun1/qc_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=4 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent182;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-9023/biostat/staging/testrun1/qc_adam";
MPRINT(GETLASTSTATUS):   output recontent182;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-9023/biostat/staging/testrun1/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-9023/biostat/staging/testrun1/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent182 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent182 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-9023/biostat/staging/testrun1/qc_adam/documents/meta";
                                                           The SAS System

MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 4;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 183 -> /clinical/argx-113/mg/argx-113-9023/biostat/staging/testrun1/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-9023/biostat/staging/testrun1/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-9023/biostat/staging/testrun1/qc_tlf
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=3 ALLLST=20
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent183;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-9023/biostat/staging/testrun1/qc_tlf";
MPRINT(GETLASTSTATUS):   output recontent183;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-9023/biostat/staging/testrun1/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-9023/biostat/staging/testrun1/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent183 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent183 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-9023/biostat/staging/testrun1/qc_tlf/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 3;
MPRINT(GETLASTSTATUS):   alllst = 20;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 184 -> /clinical/argx-113/mg/argx-113-9025/biostat/staging/final/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-9025/biostat/staging/final/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-9025/biostat/staging/final/qc_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=4 ALLLST=0
                                                           The SAS System

MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent184;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-9025/biostat/staging/final/qc_adam";
MPRINT(GETLASTSTATUS):   output recontent184;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-9025/biostat/staging/final/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-9025/biostat/staging/final/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent184 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent184 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-9025/biostat/staging/final/qc_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 4;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
                                                           The SAS System

!!! 185 -> /clinical/argx-113/mg/argx-113-9025/biostat/staging/final/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-9025/biostat/staging/final/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-9025/biostat/staging/final/qc_tlf
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=3 ALLLST=16
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent185;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-9025/biostat/staging/final/qc_tlf";
MPRINT(GETLASTSTATUS):   output recontent185;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-9025/biostat/staging/final/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-9025/biostat/staging/final/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent185 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent185 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-9025/biostat/staging/final/qc_tlf/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 3;
MPRINT(GETLASTSTATUS):   alllst = 16;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 186 -> /clinical/argx-113/mg/argx-113-9025/biostat/staging/pmda_1yr
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-9025/biostat/staging/pmda_1yr
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=0 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent186;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-9025/biostat/staging/pmda_1yr";
MPRINT(GETLASTSTATUS):   output recontent186;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-9025/biostat/staging/pmda_1yr " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-9025/biostat/staging/pmda_1yr " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent186 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent186 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-9025/biostat/staging/pmda_1yr/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 0;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 187 -> /clinical/argx-113/mg/argx-113-9025/biostat/staging/posthoc
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-9025/biostat/staging/posthoc
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=5 ALLLST=6
                                                           The SAS System

MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent187;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-9025/biostat/staging/posthoc";
MPRINT(GETLASTSTATUS):   output recontent187;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-9025/biostat/staging/posthoc " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-9025/biostat/staging/posthoc " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent187 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent187 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-9025/biostat/staging/posthoc/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 5;
MPRINT(GETLASTSTATUS):   alllst = 6;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
                                                           The SAS System

!!! 188 -> /clinical/argx-113/mg/argx-113-9031/biostat/staging/ema
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-9031/biostat/staging/ema
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=5 ALLLST=6
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent188;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-9031/biostat/staging/ema";
MPRINT(GETLASTSTATUS):   output recontent188;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-9031/biostat/staging/ema " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-9031/biostat/staging/ema " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=Y
MPRINT(GETLASTSTATUS):   proc sort data=recontent188 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent188 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
                                                           The SAS System

"/clinical/argx-113/mg/argx-113-9031/biostat/staging/ema/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 5;
MPRINT(GETLASTSTATUS):   alllst = 6;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 189 -> /clinical/argx-113/mg/argx-113-9031/biostat/staging/iss_20220131/qc_adam_pb2
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-9031/biostat/staging/iss_20220131/qc_adam_pb2
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-9031/biostat/staging/iss_20220131/qc_adam_pb2
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=8 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent189;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-9031/biostat/staging/iss_20220131/qc_adam_pb2";
MPRINT(GETLASTSTATUS):   output recontent189;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-9031/biostat/staging/iss_20220131/qc_adam_pb2 " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-9031/biostat/staging/iss_20220131/qc_adam_pb2 " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=Y
MPRINT(GETLASTSTATUS):   proc sort data=recontent189 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent189 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-9031/biostat/staging/iss_20220131/qc_adam_pb2/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 8;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 190 -> /clinical/argx-113/mg/argx-113-9031/biostat/staging/iss_20220131/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-9031/biostat/staging/iss_20220131/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-9031/biostat/staging/iss_20220131/qc_tlf
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
                                                           The SAS System

ALLSASPGM=5 ALLLST=13
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent190;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-9031/biostat/staging/iss_20220131/qc_tlf";
MPRINT(GETLASTSTATUS):   output recontent190;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-9031/biostat/staging/iss_20220131/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-9031/biostat/staging/iss_20220131/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent190 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent190 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-9031/biostat/staging/iss_20220131/qc_tlf/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 5;
MPRINT(GETLASTSTATUS):   alllst = 13;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
                                                           The SAS System

MPRINT(GETLASTSTATUS):   run;
!!! 191 -> /clinical/argx-113/mg/argx-113-9031/biostat/staging/ma2022
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-9031/biostat/staging/ma2022
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=12 ALLLST=17
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent191;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-9031/biostat/staging/ma2022";
MPRINT(GETLASTSTATUS):   output recontent191;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-9031/biostat/staging/ma2022 " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-9031/biostat/staging/ma2022 " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent191 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent191 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-9031/biostat/staging/ma2022/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 12;
MPRINT(GETLASTSTATUS):   alllst = 17;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 192 -> /clinical/argx-113/mg/argx-113-9041/biostat/staging/dsmb
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-9041/biostat/staging/dsmb
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=1 ALLLST=2
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent192;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-9041/biostat/staging/dsmb";
MPRINT(GETLASTSTATUS):   output recontent192;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-9041/biostat/staging/dsmb " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-9041/biostat/staging/dsmb " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent192 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent192 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-9041/biostat/staging/dsmb/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 1;
MPRINT(GETLASTSTATUS):   alllst = 2;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 193 -> /clinical/argx-113/mg/argx-113-9041/biostat/staging/ma2023
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-9041/biostat/staging/ma2023
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=9 ALLLST=37
                                                           The SAS System

MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent193;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-9041/biostat/staging/ma2023";
MPRINT(GETLASTSTATUS):   output recontent193;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-9041/biostat/staging/ma2023 " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-9041/biostat/staging/ma2023 " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent193 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent193 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-9041/biostat/staging/ma2023/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 9;
MPRINT(GETLASTSTATUS):   alllst = 37;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
                                                           The SAS System

!!! 194 -> /clinical/argx-113/pemphigus/argx-113-1701/biostat/staging/final/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/pemphigus/argx-113-1701/biostat/staging/final/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/pemphigus/argx-113-1701/biostat/staging/final/qc_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=7 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent194;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/pemphigus/argx-113-1701/biostat/staging/final/qc_adam";
MPRINT(GETLASTSTATUS):   output recontent194;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/pemphigus/argx-113-1701/biostat/staging/final/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/pemphigus/argx-113-1701/biostat/staging/final/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent194 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent194 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/pemphigus/argx-113-1701/biostat/staging/final/qc_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 7;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 195 -> /clinical/argx-113/pemphigus/argx-113-1701/biostat/staging/final/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/pemphigus/argx-113-1701/biostat/staging/final/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/pemphigus/argx-113-1701/biostat/staging/final/qc_tlf
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=21 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent195;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/pemphigus/argx-113-1701/biostat/staging/final/qc_tlf";
MPRINT(GETLASTSTATUS):   output recontent195;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/pemphigus/argx-113-1701/biostat/staging/final/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/pemphigus/argx-113-1701/biostat/staging/final/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent195 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent195 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/pemphigus/argx-113-1701/biostat/staging/final/qc_tlf/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 21;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 196 -> /clinical/argx-113/pemphigus/argx-113-1701/biostat/staging/patient_profiles
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/pemphigus/argx-113-1701/biostat/staging/patient_profiles
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/pemphigus/argx-113-1701/biostat/staging/patient_profiles
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=2 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent196;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/pemphigus/argx-113-1701/biostat/staging/patient_profiles";
MPRINT(GETLASTSTATUS):   output recontent196;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/pemphigus/argx-113-1701/biostat/staging/patient_profiles " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/pemphigus/argx-113-1701/biostat/staging/patient_profiles " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent196 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent196 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/pemphigus/argx-113-1701/biostat/staging/patient_profiles/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 2;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 197 -> /clinical/argx-113/pemphigus/argx-113-1701/biostat/staging/posthoc
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/pemphigus/argx-113-1701/biostat/staging/posthoc
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/pemphigus/argx-113-1701/biostat/staging/posthoc
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=2 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent197;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/pemphigus/argx-113-1701/biostat/staging/posthoc";
MPRINT(GETLASTSTATUS):   output recontent197;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/pemphigus/argx-113-1701/biostat/staging/posthoc " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/pemphigus/argx-113-1701/biostat/staging/posthoc " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent197 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   proc sort data=recontent197 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/pemphigus/argx-113-1701/biostat/staging/posthoc/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 2;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 198 -> /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/csr_figures
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/csr_figures
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/csr_figures
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=25 ALLLST=31
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent198;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/csr_figures";
MPRINT(GETLASTSTATUS):   output recontent198;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
                                                           The SAS System

/clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/csr_figures " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/csr_figures " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent198 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent198 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/csr_figures/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 25;
MPRINT(GETLASTSTATUS):   alllst = 31;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 199 -> /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/dsmb2
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/dsmb2
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/dsmb2
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=3 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent199;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/dsmb2";
MPRINT(GETLASTSTATUS):   output recontent199;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/dsmb2 " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/dsmb2 " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent199 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent199 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/dsmb2/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 3;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
                                                           The SAS System

MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 200 -> /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/generic_sdtm
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/generic_sdtm
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/generic_sdtm
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=7 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent200;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/generic_sdtm";
MPRINT(GETLASTSTATUS):   output recontent200;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/generic_sdtm " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/generic_sdtm " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent200 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
                                                           The SAS System

MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent200 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/generic_sdtm/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 7;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 201 -> /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun1/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun1/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun1/qc_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=9 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent201;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun1/qc_adam";
MPRINT(GETLASTSTATUS):   output recontent201;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun1/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun1/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=Y
MPRINT(GETLASTSTATUS):   proc sort data=recontent201 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent201 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun1/qc_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 9;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 202 -> /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun1/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun1/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun1/qc_tlf
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=32 ALLLST=39
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent202;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun1/qc_tlf";
MPRINT(GETLASTSTATUS):   output recontent202;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun1/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun1/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent202 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent202 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun1/qc_tlf/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 32;
MPRINT(GETLASTSTATUS):   alllst = 39;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 203 -> /clinical/argx-113/pemphigus/argx-113-1905/biostat/staging/dsmb2
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/pemphigus/argx-113-1905/biostat/staging/dsmb2
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/pemphigus/argx-113-1905/biostat/staging/dsmb2
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=0 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent203;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/pemphigus/argx-113-1905/biostat/staging/dsmb2";
MPRINT(GETLASTSTATUS):   output recontent203;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/pemphigus/argx-113-1905/biostat/staging/dsmb2 " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/pemphigus/argx-113-1905/biostat/staging/dsmb2 " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent203 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent203 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/pemphigus/argx-113-1905/biostat/staging/dsmb2/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 0;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 204 -> /clinical/argx-113/x-ind/argx-113-0000/biostat/staging/dsmb_ae_smq
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/x-ind/argx-113-0000/biostat/staging/dsmb_ae_smq
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/x-ind/argx-113-0000/biostat/staging/dsmb_ae_smq
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=3 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent204;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/x-ind/argx-113-0000/biostat/staging/dsmb_ae_smq";
MPRINT(GETLASTSTATUS):   output recontent204;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/x-ind/argx-113-0000/biostat/staging/dsmb_ae_smq " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/x-ind/argx-113-0000/biostat/staging/dsmb_ae_smq " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent204 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent204 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/x-ind/argx-113-0000/biostat/staging/dsmb_ae_smq/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 3;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 205 -> /clinical/argx-113/x-ind/argx-113-0000/biostat/staging/ma
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/x-ind/argx-113-0000/biostat/staging/ma
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=4 ALLLST=1
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent205;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/x-ind/argx-113-0000/biostat/staging/ma";
MPRINT(GETLASTSTATUS):   output recontent205;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/x-ind/argx-113-0000/biostat/staging/ma " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/x-ind/argx-113-0000/biostat/staging/ma " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent205 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent205 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/x-ind/argx-113-0000/biostat/staging/ma/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 4;
MPRINT(GETLASTSTATUS):   alllst = 1;
MPRINT(GETLASTSTATUS):   run;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 206 -> /clinical/argx-113/x-ind/argx-113-0000/biostat/staging/psur_20221216
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/x-ind/argx-113-0000/biostat/staging/psur_20221216
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/x-ind/argx-113-0000/biostat/staging/psur_20221216
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=7 ALLLST=2
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent206;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/x-ind/argx-113-0000/biostat/staging/psur_20221216";
MPRINT(GETLASTSTATUS):   output recontent206;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/x-ind/argx-113-0000/biostat/staging/psur_20221216 " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/x-ind/argx-113-0000/biostat/staging/psur_20221216 " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
WARNING: >1 projectstatus.html file in /clinical/argx-113/x-ind/argx-113-0000/biostat/staging/psur_20221216
/clinical/argx-113/x-ind/argx-113-0000/biostat/staging/psur_20221216/generic_adam/documents/projectstatus.html
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
                                                           The SAS System

MPRINT(GETLASTSTATUS):   proc sort data=recontent206 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent206 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/x-ind/argx-113-0000/biostat/staging/psur_20221216/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 7;
MPRINT(GETLASTSTATUS):   alllst = 2;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 207 -> /clinical/argx-117/hv/argx-117-1901/biostat/staging/ia_csr
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-117/hv/argx-117-1901/biostat/staging/ia_csr
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=6 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent207;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-117/hv/argx-117-1901/biostat/staging/ia_csr";
MPRINT(GETLASTSTATUS):   output recontent207;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-117/hv/argx-117-1901/biostat/staging/ia_csr " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-117/hv/argx-117-1901/biostat/staging/ia_csr " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent207 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent207 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-117/hv/argx-117-1901/biostat/staging/ia_csr/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 6;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 208 -> /clinical/argx-117/hv/argx-117-1901/biostat/staging/interim-analysis/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-117/hv/argx-117-1901/biostat/staging/interim-analysis/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-117/hv/argx-117-1901/biostat/staging/interim-analysis/qc_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
                                                           The SAS System

MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=3 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent208;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-117/hv/argx-117-1901/biostat/staging/interim-analysis/qc_adam";
MPRINT(GETLASTSTATUS):   output recontent208;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-117/hv/argx-117-1901/biostat/staging/interim-analysis/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-117/hv/argx-117-1901/biostat/staging/interim-analysis/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent208 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent208 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-117/hv/argx-117-1901/biostat/staging/interim-analysis/qc_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   allsaspgm = 3;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 209 -> /clinical/argx-117/hv/argx-117-1901/biostat/staging/interim-analysis/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-117/hv/argx-117-1901/biostat/staging/interim-analysis/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-117/hv/argx-117-1901/biostat/staging/interim-analysis/qc_tlf
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=3 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent209;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-117/hv/argx-117-1901/biostat/staging/interim-analysis/qc_tlf";
MPRINT(GETLASTSTATUS):   output recontent209;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-117/hv/argx-117-1901/biostat/staging/interim-analysis/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-117/hv/argx-117-1901/biostat/staging/interim-analysis/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
                                                           The SAS System

SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent209 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent209 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-117/hv/argx-117-1901/biostat/staging/interim-analysis/qc_tlf/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 3;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 210 -> /clinical/argx-117/hv/argx-117-1901/biostat/staging/mad4_figures
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-117/hv/argx-117-1901/biostat/staging/mad4_figures
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-117/hv/argx-117-1901/biostat/staging/mad4_figures
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=11 ALLLST=34
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent210;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-117/hv/argx-117-1901/biostat/staging/mad4_figures";
MPRINT(GETLASTSTATUS):   output recontent210;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-117/hv/argx-117-1901/biostat/staging/mad4_figures " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-117/hv/argx-117-1901/biostat/staging/mad4_figures " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=Y
MPRINT(GETLASTSTATUS):   proc sort data=recontent210 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent210 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-117/hv/argx-117-1901/biostat/staging/mad4_figures/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 11;
MPRINT(GETLASTSTATUS):   alllst = 34;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 211 -> /clinical/argx-117/hv/argx-117-1901/biostat/staging/mad4_lock/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-117/hv/argx-117-1901/biostat/staging/mad4_lock/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-117/hv/argx-117-1901/biostat/staging/mad4_lock/qc_adam
MPRINT(GETLASTSTATUS):   data pgms;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=4 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent211;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-117/hv/argx-117-1901/biostat/staging/mad4_lock/qc_adam";
MPRINT(GETLASTSTATUS):   output recontent211;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-117/hv/argx-117-1901/biostat/staging/mad4_lock/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-117/hv/argx-117-1901/biostat/staging/mad4_lock/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=Y
MPRINT(GETLASTSTATUS):   proc sort data=recontent211 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent211 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-117/hv/argx-117-1901/biostat/staging/mad4_lock/qc_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 4;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 212 -> /clinical/argx-117/hv/argx-117-1901/biostat/staging/mad4_lock/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-117/hv/argx-117-1901/biostat/staging/mad4_lock/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-117/hv/argx-117-1901/biostat/staging/mad4_lock/qc_tlf
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=5 ALLLST=5
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent212;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-117/hv/argx-117-1901/biostat/staging/mad4_lock/qc_tlf";
MPRINT(GETLASTSTATUS):   output recontent212;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-117/hv/argx-117-1901/biostat/staging/mad4_lock/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-117/hv/argx-117-1901/biostat/staging/mad4_lock/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent212 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent212 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-117/hv/argx-117-1901/biostat/staging/mad4_lock/qc_tlf/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 5;
MPRINT(GETLASTSTATUS):   alllst = 5;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 213 -> /clinical/argx-117/hv/argx-117-1901/biostat/staging/mad4_tables
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-117/hv/argx-117-1901/biostat/staging/mad4_tables
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-117/hv/argx-117-1901/biostat/staging/mad4_tables
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=2 ALLLST=2
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
                                                           The SAS System

(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent213;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-117/hv/argx-117-1901/biostat/staging/mad4_tables";
MPRINT(GETLASTSTATUS):   output recontent213;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-117/hv/argx-117-1901/biostat/staging/mad4_tables " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-117/hv/argx-117-1901/biostat/staging/mad4_tables " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=Y
MPRINT(GETLASTSTATUS):   proc sort data=recontent213 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent213 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-117/hv/argx-117-1901/biostat/staging/mad4_tables/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 2;
MPRINT(GETLASTSTATUS):   alllst = 2;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 214 -> /clinical/argx-117/hv/argx-117-1901/biostat/staging/mad5_figures_pub_iv
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-117/hv/argx-117-1901/biostat/staging/mad5_figures_pub_iv
MPRINT(GETLASTSTATUS):   options nomprint;
                                                           The SAS System

Returned a list of items in /clinical/argx-117/hv/argx-117-1901/biostat/staging/mad5_figures_pub_iv
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=0 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent214;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-117/hv/argx-117-1901/biostat/staging/mad5_figures_pub_iv";
MPRINT(GETLASTSTATUS):   output recontent214;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-117/hv/argx-117-1901/biostat/staging/mad5_figures_pub_iv " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-117/hv/argx-117-1901/biostat/staging/mad5_figures_pub_iv " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent214 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent214 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-117/hv/argx-117-1901/biostat/staging/mad5_figures_pub_iv/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 0;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 215 -> /clinical/argx-117/hv/argx-117-1901/biostat/staging/mad5_lock/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-117/hv/argx-117-1901/biostat/staging/mad5_lock/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-117/hv/argx-117-1901/biostat/staging/mad5_lock/qc_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=3 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent215;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-117/hv/argx-117-1901/biostat/staging/mad5_lock/qc_adam";
MPRINT(GETLASTSTATUS):   output recontent215;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-117/hv/argx-117-1901/biostat/staging/mad5_lock/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-117/hv/argx-117-1901/biostat/staging/mad5_lock/qc_adam " path;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=Y
MPRINT(GETLASTSTATUS):   proc sort data=recontent215 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent215 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-117/hv/argx-117-1901/biostat/staging/mad5_lock/qc_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 3;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 216 -> /clinical/argx-117/hv/argx-117-1901/biostat/staging/mad5_lock/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-117/hv/argx-117-1901/biostat/staging/mad5_lock/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-117/hv/argx-117-1901/biostat/staging/mad5_lock/qc_tlf
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=5 ALLLST=5
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent216;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-117/hv/argx-117-1901/biostat/staging/mad5_lock/qc_tlf";
MPRINT(GETLASTSTATUS):   output recontent216;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-117/hv/argx-117-1901/biostat/staging/mad5_lock/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-117/hv/argx-117-1901/biostat/staging/mad5_lock/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent216 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent216 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-117/hv/argx-117-1901/biostat/staging/mad5_lock/qc_tlf/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 5;
MPRINT(GETLASTSTATUS):   alllst = 5;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 217 -> /clinical/argx-117/x-ind/argx-117-0000/biostat/staging/dsur_20230219
MPRINT(GETLASTSTATUS):   options nomprint;
                                                           The SAS System

The item exists: /clinical/argx-117/x-ind/argx-117-0000/biostat/staging/dsur_20230219
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-117/x-ind/argx-117-0000/biostat/staging/dsur_20230219
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=2 ALLLST=4
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent217;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-117/x-ind/argx-117-0000/biostat/staging/dsur_20230219";
MPRINT(GETLASTSTATUS):   output recontent217;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-117/x-ind/argx-117-0000/biostat/staging/dsur_20230219 " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-117/x-ind/argx-117-0000/biostat/staging/dsur_20230219 " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent217 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent217 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-117/x-ind/argx-117-0000/biostat/staging/dsur_20230219/documents/meta";
MPRINT(GETLASTSTATUS):   run;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 2;
MPRINT(GETLASTSTATUS):   alllst = 4;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 218 -> /clinical/test/gadam-tests/test-0001/biostat/staging/final/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/test/gadam-tests/test-0001/biostat/staging/final/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/test/gadam-tests/test-0001/biostat/staging/final/qc_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=0 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent218;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/test/gadam-tests/test-0001/biostat/staging/final/qc_adam";
MPRINT(GETLASTSTATUS):   output recontent218;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/test/gadam-tests/test-0001/biostat/staging/final/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/test/gadam-tests/test-0001/biostat/staging/final/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent218 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent218 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/test/gadam-tests/test-0001/biostat/staging/final/qc_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 0;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 219 -> /clinical/test/gadam-tests/test-0002/biostat/staging/final/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/test/gadam-tests/test-0002/biostat/staging/final/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/test/gadam-tests/test-0002/biostat/staging/final/qc_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=0 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent219;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/test/gadam-tests/test-0002/biostat/staging/final/qc_adam";
MPRINT(GETLASTSTATUS):   output recontent219;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/test/gadam-tests/test-0002/biostat/staging/final/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/test/gadam-tests/test-0002/biostat/staging/final/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent219 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent219 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/test/gadam-tests/test-0002/biostat/staging/final/qc_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 0;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 220 -> /clinical/test/indic/cdisc-pilot-0001/biostat/staging/fda_rconsortium
                                                           The SAS System

MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/test/indic/cdisc-pilot-0001/biostat/staging/fda_rconsortium
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/test/indic/cdisc-pilot-0001/biostat/staging/fda_rconsortium
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=0 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent220;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/test/indic/cdisc-pilot-0001/biostat/staging/fda_rconsortium";
MPRINT(GETLASTSTATUS):   output recontent220;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/test/indic/cdisc-pilot-0001/biostat/staging/fda_rconsortium " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/test/indic/cdisc-pilot-0001/biostat/staging/fda_rconsortium " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent220 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent220 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
                                                           The SAS System

"/clinical/test/indic/cdisc-pilot-0001/biostat/staging/fda_rconsortium/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 0;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 221 -> /clinical/test/indic/cdisc-pilot-0001/biostat/staging/rstudio_teams_uat
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/test/indic/cdisc-pilot-0001/biostat/staging/rstudio_teams_uat
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/test/indic/cdisc-pilot-0001/biostat/staging/rstudio_teams_uat
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=0 ALLLST=1
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent221;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/test/indic/cdisc-pilot-0001/biostat/staging/rstudio_teams_uat";
MPRINT(GETLASTSTATUS):   output recontent221;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/test/indic/cdisc-pilot-0001/biostat/staging/rstudio_teams_uat " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/test/indic/cdisc-pilot-0001/biostat/staging/rstudio_teams_uat " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent221 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent221 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/test/indic/cdisc-pilot-0001/biostat/staging/rstudio_teams_uat/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 0;
MPRINT(GETLASTSTATUS):   alllst = 1;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 222 -> /clinical/test/indic/test-0000/biostat/staging/figures
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/test/indic/test-0000/biostat/staging/figures
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=33 ALLLST=9
                                                           The SAS System

MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent222;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/test/indic/test-0000/biostat/staging/figures";
MPRINT(GETLASTSTATUS):   output recontent222;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/test/indic/test-0000/biostat/staging/figures " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/test/indic/test-0000/biostat/staging/figures " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent222 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent222 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/test/indic/test-0000/biostat/staging/figures/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 33;
MPRINT(GETLASTSTATUS):   alllst = 9;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
                                                           The SAS System

433        %getlaststatus (gadam);
MPRINT(GETLASTSTATUS):   data _null_;
MPRINT(GETLASTSTATUS):   set gadam end=last;
MPRINT(GETLASTSTATUS):   call symputx("re"||strip(put(_n_,8.)),strip(Reporting_Event_Path));
MPRINT(GETLASTSTATUS):   if last then call symputx("nbre",strip(put(_n_,8.)));
MPRINT(GETLASTSTATUS):   run;
NBRE=114
!!! 1 -> /clinical/argx-110/aml/argx-110-0000/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-110/aml/argx-110-0000/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-110/aml/argx-110-0000/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=29 ALLLST=10
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent1;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-110/aml/argx-110-0000/biostat/staging/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent1;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-110/aml/argx-110-0000/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-110/aml/argx-110-0000/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent1 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent1 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-110/aml/argx-110-0000/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 29;
MPRINT(GETLASTSTATUS):   alllst = 10;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 2 -> /clinical/argx-110/aml/argx-110-1002/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-110/aml/argx-110-1002/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-110/aml/argx-110-1002/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=29 ALLLST=9
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent2;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-110/aml/argx-110-1002/biostat/staging/generic_adam";
                                                           The SAS System

MPRINT(GETLASTSTATUS):   output recontent2;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-110/aml/argx-110-1002/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-110/aml/argx-110-1002/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent2 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent2 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-110/aml/argx-110-1002/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 29;
MPRINT(GETLASTSTATUS):   alllst = 9;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 3 -> /clinical/argx-110/aml/argx-110-1003/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-110/aml/argx-110-1003/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-110/aml/argx-110-1003/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=29 ALLLST=9
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent3;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-110/aml/argx-110-1003/biostat/staging/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent3;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-110/aml/argx-110-1003/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-110/aml/argx-110-1003/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent3 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent3 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-110/aml/argx-110-1003/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 29;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   alllst = 9;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 4 -> /clinical/argx-110/aml/argx-110-1601/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-110/aml/argx-110-1601/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-110/aml/argx-110-1601/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=29 ALLLST=10
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent4;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-110/aml/argx-110-1601/biostat/staging/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent4;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-110/aml/argx-110-1601/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-110/aml/argx-110-1601/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
                                                           The SAS System

MPRINT(GETLASTSTATUS):   proc sort data=recontent4 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent4 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-110/aml/argx-110-1601/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 29;
MPRINT(GETLASTSTATUS):   alllst = 10;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 5 -> /clinical/argx-110/aml/argx-110-2001/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-110/aml/argx-110-2001/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-110/aml/argx-110-2001/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=29 ALLLST=10
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent5;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-110/aml/argx-110-2001/biostat/staging/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent5;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-110/aml/argx-110-2001/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-110/aml/argx-110-2001/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent5 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent5 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-110/aml/argx-110-2001/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 29;
MPRINT(GETLASTSTATUS):   alllst = 10;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 6 -> /clinical/argx-113/bp/argx-113-0000/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/bp/argx-113-0000/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/bp/argx-113-0000/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=29 ALLLST=12
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent6;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/bp/argx-113-0000/biostat/staging/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent6;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/bp/argx-113-0000/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/bp/argx-113-0000/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent6 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent6 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/bp/argx-113-0000/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 29;
MPRINT(GETLASTSTATUS):   alllst = 12;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 7 -> /clinical/argx-113/bp/argx-113-2009/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/bp/argx-113-2009/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/bp/argx-113-2009/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=29 ALLLST=12
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent7;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/bp/argx-113-2009/biostat/staging/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent7;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/bp/argx-113-2009/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/bp/argx-113-2009/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
                                                           The SAS System

PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent7 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent7 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/bp/argx-113-2009/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 29;
MPRINT(GETLASTSTATUS):   alllst = 12;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 8 -> /clinical/argx-113/cidp/argx-113-0000/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-0000/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/cidp/argx-113-0000/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=29 ALLLST=13
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent8;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-0000/biostat/staging/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent8;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/cidp/argx-113-0000/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/cidp/argx-113-0000/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent8 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent8 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/cidp/argx-113-0000/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 29;
MPRINT(GETLASTSTATUS):   alllst = 13;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 9 -> /clinical/argx-113/cidp/argx-113-1802/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
                                                           The SAS System

Returned a list of items in /clinical/argx-113/cidp/argx-113-1802/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=31 ALLLST=13
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent9;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1802/biostat/staging/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent9;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/cidp/argx-113-1802/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/cidp/argx-113-1802/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent9 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent9 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/cidp/argx-113-1802/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 31;
MPRINT(GETLASTSTATUS):   alllst = 13;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 10 -> /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun1/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun1/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun1/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=28 ALLLST=10
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent10;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun1/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent10;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun1/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun1/generic_adam " path;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent10 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent10 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun1/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 28;
MPRINT(GETLASTSTATUS):   alllst = 10;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 11 -> /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=0 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent11;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent11;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=N
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent11 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent11 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 0;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 12 -> /clinical/argx-113/cidp/argx-113-1902/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
                                                           The SAS System

The item exists: /clinical/argx-113/cidp/argx-113-1902/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/cidp/argx-113-1902/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=29 ALLLST=15
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent12;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1902/biostat/staging/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent12;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/cidp/argx-113-1902/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/cidp/argx-113-1902/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent12 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent12 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/cidp/argx-113-1902/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 29;
MPRINT(GETLASTSTATUS):   alllst = 15;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 13 -> /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=0 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent13;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):
Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent13;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=N
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent13 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent13 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 0;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 14 -> /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20231206/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20231206/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20231206/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=0 ALLLST=0
                                                           The SAS System

MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent14;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):
Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20231206/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent14;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20231206/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20231206/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=N
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent14 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent14 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20231206/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 0;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
                                                           The SAS System

MPRINT(GETLASTSTATUS):   run;
!!! 15 -> /clinical/argx-113/cidp/argx-113-1902/biostat/staging/testrun1/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-1902/biostat/staging/testrun1/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/cidp/argx-113-1902/biostat/staging/testrun1/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=28 ALLLST=10
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent15;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1902/biostat/staging/testrun1/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent15;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/cidp/argx-113-1902/biostat/staging/testrun1/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/cidp/argx-113-1902/biostat/staging/testrun1/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent15 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent15 out=lastmod;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/cidp/argx-113-1902/biostat/staging/testrun1/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 28;
MPRINT(GETLASTSTATUS):   alllst = 10;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 16 -> /clinical/argx-113/cidp/argx-113-9301/biostat/staging/testrun1/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-9301/biostat/staging/testrun1/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/cidp/argx-113-9301/biostat/staging/testrun1/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=0 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent16;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-9301/biostat/staging/testrun1/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent16;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/cidp/argx-113-9301/biostat/staging/testrun1/generic_adam " path;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/cidp/argx-113-9301/biostat/staging/testrun1/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=N
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent16 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent16 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/cidp/argx-113-9301/biostat/staging/testrun1/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 0;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 17 -> /clinical/argx-113/cidp/argx-113-9303/biostat/staging/testrun1/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-9303/biostat/staging/testrun1/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/cidp/argx-113-9303/biostat/staging/testrun1/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=0 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent17;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-9303/biostat/staging/testrun1/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent17;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/cidp/argx-113-9303/biostat/staging/testrun1/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/cidp/argx-113-9303/biostat/staging/testrun1/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=N
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent17 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent17 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/cidp/argx-113-9303/biostat/staging/testrun1/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 0;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 18 -> /clinical/argx-113/hv/argx-113-0000/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/hv/argx-113-0000/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/hv/argx-113-0000/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=29 ALLLST=11
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent18;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/hv/argx-113-0000/biostat/staging/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent18;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/hv/argx-113-0000/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/hv/argx-113-0000/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent18 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent18 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/hv/argx-113-0000/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 29;
MPRINT(GETLASTSTATUS):   alllst = 11;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 19 -> /clinical/argx-113/hv/argx-113-1501/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/hv/argx-113-1501/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/hv/argx-113-1501/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=29 ALLLST=10
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent19;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/hv/argx-113-1501/biostat/staging/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent19;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
                                                           The SAS System

MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/hv/argx-113-1501/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/hv/argx-113-1501/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent19 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent19 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/hv/argx-113-1501/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 29;
MPRINT(GETLASTSTATUS):   alllst = 10;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 20 -> /clinical/argx-113/hv/argx-113-1702/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/hv/argx-113-1702/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/hv/argx-113-1702/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=29 ALLLST=10
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent20;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/hv/argx-113-1702/biostat/staging/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent20;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/hv/argx-113-1702/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/hv/argx-113-1702/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent20 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent20 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/hv/argx-113-1702/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 29;
MPRINT(GETLASTSTATUS):   alllst = 10;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 21 -> /clinical/argx-113/hv/argx-113-1901/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/hv/argx-113-1901/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/hv/argx-113-1901/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=29 ALLLST=10
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent21;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/hv/argx-113-1901/biostat/staging/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent21;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/hv/argx-113-1901/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/hv/argx-113-1901/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent21 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent21 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/hv/argx-113-1901/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 29;
MPRINT(GETLASTSTATUS):   alllst = 10;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 22 -> /clinical/argx-113/hv/argx-113-1907/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/hv/argx-113-1907/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/hv/argx-113-1907/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=29 ALLLST=10
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent22;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/hv/argx-113-1907/biostat/staging/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent22;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/hv/argx-113-1907/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/hv/argx-113-1907/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent22 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent22 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/hv/argx-113-1907/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 29;
MPRINT(GETLASTSTATUS):   alllst = 10;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 23 -> /clinical/argx-113/hv/argx-113-2102/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/hv/argx-113-2102/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/hv/argx-113-2102/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=29 ALLLST=11
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent23;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/hv/argx-113-2102/biostat/staging/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent23;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/hv/argx-113-2102/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/hv/argx-113-2102/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent23 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent23 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/hv/argx-113-2102/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 29;
MPRINT(GETLASTSTATUS):   alllst = 11;
MPRINT(GETLASTSTATUS):   run;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 24 -> /clinical/argx-113/hv/argx-113-2102/biostat/staging/testrun1/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/hv/argx-113-2102/biostat/staging/testrun1/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/hv/argx-113-2102/biostat/staging/testrun1/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=0 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent24;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/hv/argx-113-2102/biostat/staging/testrun1/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent24;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/hv/argx-113-2102/biostat/staging/testrun1/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/hv/argx-113-2102/biostat/staging/testrun1/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent24 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent24 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/hv/argx-113-2102/biostat/staging/testrun1/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 0;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 25 -> /clinical/argx-113/hv/argx-113-2201/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/hv/argx-113-2201/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/hv/argx-113-2201/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=29 ALLLST=9
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent25;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/hv/argx-113-2201/biostat/staging/generic_adam";
                                                           The SAS System

MPRINT(GETLASTSTATUS):   output recontent25;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/hv/argx-113-2201/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/hv/argx-113-2201/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent25 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent25 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/hv/argx-113-2201/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 29;
MPRINT(GETLASTSTATUS):   alllst = 9;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 26 -> /clinical/argx-113/hv/argx-113-z005/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/hv/argx-113-z005/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/hv/argx-113-z005/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=29 ALLLST=4
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent26;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/hv/argx-113-z005/biostat/staging/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent26;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/hv/argx-113-z005/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/hv/argx-113-z005/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent26 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent26 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/hv/argx-113-z005/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 29;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   alllst = 4;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 27 -> /clinical/argx-113/hv/argx-113-z006/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/hv/argx-113-z006/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/hv/argx-113-z006/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=29 ALLLST=4
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent27;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/hv/argx-113-z006/biostat/staging/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent27;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/hv/argx-113-z006/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/hv/argx-113-z006/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
                                                           The SAS System

MPRINT(GETLASTSTATUS):   proc sort data=recontent27 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent27 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/hv/argx-113-z006/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 29;
MPRINT(GETLASTSTATUS):   alllst = 4;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 28 -> /clinical/argx-113/iim/argx-113-0000/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/iim/argx-113-0000/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/iim/argx-113-0000/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=29 ALLLST=9
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent28;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/iim/argx-113-0000/biostat/staging/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent28;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/iim/argx-113-0000/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/iim/argx-113-0000/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent28 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent28 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/iim/argx-113-0000/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 29;
MPRINT(GETLASTSTATUS):   alllst = 9;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 29 -> /clinical/argx-113/iim/argx-113-2007/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/iim/argx-113-2007/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/iim/argx-113-2007/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=29 ALLLST=9
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent29;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/iim/argx-113-2007/biostat/staging/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent29;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/iim/argx-113-2007/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/iim/argx-113-2007/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent29 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent29 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/iim/argx-113-2007/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 29;
MPRINT(GETLASTSTATUS):   alllst = 9;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 30 -> /clinical/argx-113/iim/argx-113-2011/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/iim/argx-113-2011/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/iim/argx-113-2011/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=29 ALLLST=9
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent30;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/iim/argx-113-2011/biostat/staging/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent30;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/iim/argx-113-2011/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/iim/argx-113-2011/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
                                                           The SAS System

PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent30 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent30 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/iim/argx-113-2011/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 29;
MPRINT(GETLASTSTATUS):   alllst = 9;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 31 -> /clinical/argx-113/itp/argx-113-0000/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-0000/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/itp/argx-113-0000/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=29 ALLLST=13
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent31;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-0000/biostat/staging/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent31;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/itp/argx-113-0000/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/itp/argx-113-0000/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent31 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent31 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/itp/argx-113-0000/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 29;
MPRINT(GETLASTSTATUS):   alllst = 13;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 32 -> /clinical/argx-113/itp/argx-113-1603/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-1603/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
                                                           The SAS System

Returned a list of items in /clinical/argx-113/itp/argx-113-1603/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=30 ALLLST=10
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent32;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-1603/biostat/staging/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent32;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/itp/argx-113-1603/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/itp/argx-113-1603/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent32 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent32 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/itp/argx-113-1603/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 30;
MPRINT(GETLASTSTATUS):   alllst = 10;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 33 -> /clinical/argx-113/itp/argx-113-1801/biostat/staging/final/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-1801/biostat/staging/final/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/itp/argx-113-1801/biostat/staging/final/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=25 ALLLST=1
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent33;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-1801/biostat/staging/final/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent33;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/itp/argx-113-1801/biostat/staging/final/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/itp/argx-113-1801/biostat/staging/final/generic_adam " path;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent33 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent33 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/itp/argx-113-1801/biostat/staging/final/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 25;
MPRINT(GETLASTSTATUS):   alllst = 1;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 34 -> /clinical/argx-113/itp/argx-113-1801/biostat/staging/final_pmda/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-1801/biostat/staging/final_pmda/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/itp/argx-113-1801/biostat/staging/final_pmda/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=0 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent34;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-1801/biostat/staging/final_pmda/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent34;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/itp/argx-113-1801/biostat/staging/final_pmda/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/itp/argx-113-1801/biostat/staging/final_pmda/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=N
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent34 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent34 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/itp/argx-113-1801/biostat/staging/final_pmda/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 0;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 35 -> /clinical/argx-113/itp/argx-113-1801/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
                                                           The SAS System

The item exists: /clinical/argx-113/itp/argx-113-1801/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/itp/argx-113-1801/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=34 ALLLST=13
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent35;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-1801/biostat/staging/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent35;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/itp/argx-113-1801/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/itp/argx-113-1801/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent35 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent35 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/itp/argx-113-1801/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 34;
MPRINT(GETLASTSTATUS):   alllst = 13;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 36 -> /clinical/argx-113/itp/argx-113-1801/biostat/staging/testrun3/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-1801/biostat/staging/testrun3/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/itp/argx-113-1801/biostat/staging/testrun3/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=0 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent36;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-1801/biostat/staging/testrun3/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent36;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/itp/argx-113-1801/biostat/staging/testrun3/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/itp/argx-113-1801/biostat/staging/testrun3/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent36 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent36 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/itp/argx-113-1801/biostat/staging/testrun3/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 0;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 37 -> /clinical/argx-113/itp/argx-113-1803/biostat/staging/final/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-1803/biostat/staging/final/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/itp/argx-113-1803/biostat/staging/final/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=0 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent37;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-1803/biostat/staging/final/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent37;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/itp/argx-113-1803/biostat/staging/final/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/itp/argx-113-1803/biostat/staging/final/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=N
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent37 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent37 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/itp/argx-113-1803/biostat/staging/final/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 0;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 38 -> /clinical/argx-113/itp/argx-113-1803/biostat/staging/generic_adam
                                                           The SAS System

MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-1803/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/itp/argx-113-1803/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=29 ALLLST=15
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent38;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-1803/biostat/staging/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent38;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/itp/argx-113-1803/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/itp/argx-113-1803/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent38 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent38 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
                                                           The SAS System

"/clinical/argx-113/itp/argx-113-1803/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 29;
MPRINT(GETLASTSTATUS):   alllst = 15;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 39 -> /clinical/argx-113/itp/argx-113-1803/biostat/staging/ia1/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-1803/biostat/staging/ia1/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/itp/argx-113-1803/biostat/staging/ia1/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=0 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent39;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-1803/biostat/staging/ia1/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent39;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/itp/argx-113-1803/biostat/staging/ia1/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/itp/argx-113-1803/biostat/staging/ia1/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=N
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent39 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent39 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/itp/argx-113-1803/biostat/staging/ia1/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 0;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 40 -> /clinical/argx-113/itp/argx-113-1803/biostat/staging/ia1_pmda/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-1803/biostat/staging/ia1_pmda/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/itp/argx-113-1803/biostat/staging/ia1_pmda/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
                                                           The SAS System

ALLSASPGM=0 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent40;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-1803/biostat/staging/ia1_pmda/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent40;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/itp/argx-113-1803/biostat/staging/ia1_pmda/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/itp/argx-113-1803/biostat/staging/ia1_pmda/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=N
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent40 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent40 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/itp/argx-113-1803/biostat/staging/ia1_pmda/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 0;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
                                                           The SAS System

MPRINT(GETLASTSTATUS):   run;
!!! 41 -> /clinical/argx-113/itp/argx-113-1803/biostat/staging/testrun1b/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-1803/biostat/staging/testrun1b/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/itp/argx-113-1803/biostat/staging/testrun1b/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=0 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent41;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-1803/biostat/staging/testrun1b/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent41;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/itp/argx-113-1803/biostat/staging/testrun1b/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/itp/argx-113-1803/biostat/staging/testrun1b/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=N
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent41 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent41 out=lastmod;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/itp/argx-113-1803/biostat/staging/testrun1b/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 0;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 42 -> /clinical/argx-113/itp/argx-113-2004/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-2004/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/itp/argx-113-2004/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=29 ALLLST=15
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent42;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-2004/biostat/staging/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent42;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/itp/argx-113-2004/biostat/staging/generic_adam " path;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/itp/argx-113-2004/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent42 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent42 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/itp/argx-113-2004/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 29;
MPRINT(GETLASTSTATUS):   alllst = 15;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 43 -> /clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun0/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun0/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun0/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=0 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent43;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun0/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent43;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun0/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun0/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=N
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent43 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent43 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun0/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 0;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 44 -> /clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=0 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent44;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent44;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=N
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent44 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent44 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 0;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 45 -> /clinical/argx-113/itp/argx-113-2005/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-2005/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/itp/argx-113-2005/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=29 ALLLST=15
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent45;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-2005/biostat/staging/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent45;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
                                                           The SAS System

MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/itp/argx-113-2005/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/itp/argx-113-2005/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent45 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent45 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/itp/argx-113-2005/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 29;
MPRINT(GETLASTSTATUS):   alllst = 15;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 46 -> /clinical/argx-113/itp/argx-113-2005/biostat/staging/testrun0/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-2005/biostat/staging/testrun0/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/itp/argx-113-2005/biostat/staging/testrun0/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=0 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent46;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-2005/biostat/staging/testrun0/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent46;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/itp/argx-113-2005/biostat/staging/testrun0/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/itp/argx-113-2005/biostat/staging/testrun0/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=N
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent46 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent46 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/itp/argx-113-2005/biostat/staging/testrun0/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 0;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 47 -> /clinical/argx-113/itp/argx-113-2005/biostat/staging/testrun1/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-2005/biostat/staging/testrun1/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/itp/argx-113-2005/biostat/staging/testrun1/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=0 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent47;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-2005/biostat/staging/testrun1/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent47;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/itp/argx-113-2005/biostat/staging/testrun1/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/itp/argx-113-2005/biostat/staging/testrun1/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=N
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent47 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent47 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/itp/argx-113-2005/biostat/staging/testrun1/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 0;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 48 -> /clinical/argx-113/itp/argx-113-9101/biostat/staging/ia1/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-9101/biostat/staging/ia1/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/itp/argx-113-9101/biostat/staging/ia1/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=0 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent48;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-9101/biostat/staging/ia1/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent48;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/itp/argx-113-9101/biostat/staging/ia1/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/itp/argx-113-9101/biostat/staging/ia1/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=N
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent48 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent48 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/itp/argx-113-9101/biostat/staging/ia1/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 0;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 49 -> /clinical/argx-113/itp/argx-113-9103/biostat/staging/ia1/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-9103/biostat/staging/ia1/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/itp/argx-113-9103/biostat/staging/ia1/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=0 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent49;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-9103/biostat/staging/ia1/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent49;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/itp/argx-113-9103/biostat/staging/ia1/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/itp/argx-113-9103/biostat/staging/ia1/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=N
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent49 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent49 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/itp/argx-113-9103/biostat/staging/ia1/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 0;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 50 -> /clinical/argx-113/itp/argx-113-9103/biostat/staging/testrun1/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-9103/biostat/staging/testrun1/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/itp/argx-113-9103/biostat/staging/testrun1/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=0 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent50;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-9103/biostat/staging/testrun1/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent50;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/itp/argx-113-9103/biostat/staging/testrun1/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/itp/argx-113-9103/biostat/staging/testrun1/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=N
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent50 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent50 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/itp/argx-113-9103/biostat/staging/testrun1/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 0;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 51 -> /clinical/argx-113/ln/argx-113-0000/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/ln/argx-113-0000/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/ln/argx-113-0000/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=29 ALLLST=9
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent51;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/ln/argx-113-0000/biostat/staging/generic_adam";
                                                           The SAS System

MPRINT(GETLASTSTATUS):   output recontent51;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/ln/argx-113-0000/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/ln/argx-113-0000/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent51 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent51 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/ln/argx-113-0000/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 29;
MPRINT(GETLASTSTATUS):   alllst = 9;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 52 -> /clinical/argx-113/ln/argx-113-2202/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/ln/argx-113-2202/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/ln/argx-113-2202/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=29 ALLLST=9
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent52;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/ln/argx-113-2202/biostat/staging/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent52;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/ln/argx-113-2202/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/ln/argx-113-2202/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent52 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent52 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/ln/argx-113-2202/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 29;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   alllst = 9;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 53 -> /clinical/argx-113/mg/argx-113-0000/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-0000/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-0000/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=33 ALLLST=17
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent53;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-0000/biostat/staging/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent53;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-0000/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-0000/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
                                                           The SAS System

MPRINT(GETLASTSTATUS):   proc sort data=recontent53 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent53 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-0000/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 33;
MPRINT(GETLASTSTATUS):   alllst = 17;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 54 -> /clinical/argx-113/mg/argx-113-1602/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-1602/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-1602/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=30 ALLLST=11
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent54;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-1602/biostat/staging/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent54;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-1602/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-1602/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent54 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent54 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-1602/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 30;
MPRINT(GETLASTSTATUS):   alllst = 11;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 55 -> /clinical/argx-113/mg/argx-113-1704/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-1704/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-1704/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=29 ALLLST=13
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent55;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-1704/biostat/staging/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent55;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-1704/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-1704/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent55 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent55 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-1704/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 29;
MPRINT(GETLASTSTATUS):   alllst = 13;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 56 -> /clinical/argx-113/mg/argx-113-1705/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-1705/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-1705/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=32 ALLLST=16
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent56;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-1705/biostat/staging/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent56;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-1705/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-1705/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
                                                           The SAS System

PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent56 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent56 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-1705/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 32;
MPRINT(GETLASTSTATUS):   alllst = 16;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 57 -> /clinical/argx-113/mg/argx-113-1705/biostat/staging/ia-20220131/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-1705/biostat/staging/ia-20220131/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-1705/biostat/staging/ia-20220131/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=24 ALLLST=9
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent57;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-1705/biostat/staging/ia-20220131/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent57;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-1705/biostat/staging/ia-20220131/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-1705/biostat/staging/ia-20220131/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent57 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent57 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-1705/biostat/staging/ia-20220131/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 24;
MPRINT(GETLASTSTATUS):   alllst = 9;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 58 -> /clinical/argx-113/mg/argx-113-2001/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-2001/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
                                                           The SAS System

Returned a list of items in /clinical/argx-113/mg/argx-113-2001/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=32 ALLLST=29
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent58;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-2001/biostat/staging/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent58;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-2001/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-2001/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent58 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent58 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-2001/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 32;
MPRINT(GETLASTSTATUS):   alllst = 29;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 59 -> /clinical/argx-113/mg/argx-113-2002/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-2002/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-2002/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=29 ALLLST=18
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent59;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-2002/biostat/staging/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent59;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-2002/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-2002/biostat/staging/generic_adam " path;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent59 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent59 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-2002/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 29;
MPRINT(GETLASTSTATUS):   alllst = 18;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 60 -> /clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=29 ALLLST=1
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent60;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent60;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent60 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent60 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 29;
MPRINT(GETLASTSTATUS):   alllst = 1;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 61 -> /clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2_1yr/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
                                                           The SAS System

The item exists: /clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2_1yr/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2_1yr/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=29 ALLLST=1
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent61;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2_1yr/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent61;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2_1yr/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2_1yr/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent61 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent61 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2_1yr/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 29;
MPRINT(GETLASTSTATUS):   alllst = 1;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 62 -> /clinical/argx-113/mg/argx-113-2003/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-2003/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-2003/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=29 ALLLST=13
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent62;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-2003/biostat/staging/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent62;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-2003/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-2003/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent62 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent62 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-2003/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 29;
MPRINT(GETLASTSTATUS):   alllst = 13;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 63 -> /clinical/argx-113/mg/argx-113-2003/biostat/staging/ia1/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-2003/biostat/staging/ia1/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-2003/biostat/staging/ia1/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=28 ALLLST=1
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent63;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-2003/biostat/staging/ia1/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent63;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-2003/biostat/staging/ia1/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-2003/biostat/staging/ia1/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent63 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent63 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-2003/biostat/staging/ia1/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 28;
MPRINT(GETLASTSTATUS):   alllst = 1;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 64 -> /clinical/argx-113/mg/argx-113-2006/biostat/staging/generic_adam
                                                           The SAS System

MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-2006/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-2006/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=29 ALLLST=12
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent64;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-2006/biostat/staging/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent64;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-2006/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-2006/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent64 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent64 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
                                                           The SAS System

"/clinical/argx-113/mg/argx-113-2006/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 29;
MPRINT(GETLASTSTATUS):   alllst = 12;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 65 -> /clinical/argx-113/mg/argx-113-2008/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-2008/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-2008/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=29 ALLLST=15
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent65;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-2008/biostat/staging/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent65;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-2008/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-2008/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent65 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent65 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-2008/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 29;
MPRINT(GETLASTSTATUS):   alllst = 15;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 66 -> /clinical/argx-113/mg/argx-113-9006/biostat/staging/iss/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-9006/biostat/staging/iss/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-9006/biostat/staging/iss/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
                                                           The SAS System

ALLSASPGM=0 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent66;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-9006/biostat/staging/iss/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent66;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-9006/biostat/staging/iss/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-9006/biostat/staging/iss/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=N
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent66 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent66 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-9006/biostat/staging/iss/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 0;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
                                                           The SAS System

MPRINT(GETLASTSTATUS):   run;
!!! 67 -> /clinical/argx-113/mg/argx-113-9021/biostat/staging/final/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-9021/biostat/staging/final/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-9021/biostat/staging/final/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=0 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent67;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-9021/biostat/staging/final/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent67;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-9021/biostat/staging/final/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-9021/biostat/staging/final/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=N
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent67 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent67 out=lastmod;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-9021/biostat/staging/final/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 0;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 68 -> /clinical/argx-113/mg/argx-113-9023/biostat/staging/final/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-9023/biostat/staging/final/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-9023/biostat/staging/final/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=0 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent68;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-9023/biostat/staging/final/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent68;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-9023/biostat/staging/final/generic_adam " path;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-9023/biostat/staging/final/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=N
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent68 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent68 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-9023/biostat/staging/final/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 0;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 69 -> /clinical/argx-113/mg/argx-113-9025/biostat/staging/final/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-9025/biostat/staging/final/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-9025/biostat/staging/final/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=0 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent69;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-9025/biostat/staging/final/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent69;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-9025/biostat/staging/final/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-9025/biostat/staging/final/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=N
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent69 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent69 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-9025/biostat/staging/final/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 0;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 70 -> /clinical/argx-113/mg/argx-113-9031/biostat/staging/iss_20220131/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-9031/biostat/staging/iss_20220131/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-9031/biostat/staging/iss_20220131/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=0 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent70;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-9031/biostat/staging/iss_20220131/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent70;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-9031/biostat/staging/iss_20220131/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-9031/biostat/staging/iss_20220131/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=N
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent70 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent70 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-9031/biostat/staging/iss_20220131/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 0;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 71 -> /clinical/argx-113/mn/argx-113-0000/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/mn/argx-113-0000/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mn/argx-113-0000/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=29 ALLLST=9
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent71;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mn/argx-113-0000/biostat/staging/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent71;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
                                                           The SAS System

MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mn/argx-113-0000/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mn/argx-113-0000/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent71 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent71 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mn/argx-113-0000/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 29;
MPRINT(GETLASTSTATUS):   alllst = 9;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 72 -> /clinical/argx-113/mn/argx-113-2203/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/mn/argx-113-2203/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mn/argx-113-2203/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=29 ALLLST=9
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent72;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mn/argx-113-2203/biostat/staging/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent72;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mn/argx-113-2203/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mn/argx-113-2203/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent72 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent72 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mn/argx-113-2203/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 29;
MPRINT(GETLASTSTATUS):   alllst = 9;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 73 -> /clinical/argx-113/pemphigus/argx-113-0000/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/pemphigus/argx-113-0000/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/pemphigus/argx-113-0000/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=29 ALLLST=13
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent73;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/pemphigus/argx-113-0000/biostat/staging/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent73;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/pemphigus/argx-113-0000/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/pemphigus/argx-113-0000/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent73 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent73 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/pemphigus/argx-113-0000/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 29;
MPRINT(GETLASTSTATUS):   alllst = 13;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 74 -> /clinical/argx-113/pemphigus/argx-113-1701/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/pemphigus/argx-113-1701/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/pemphigus/argx-113-1701/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=29 ALLLST=10
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent74;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/pemphigus/argx-113-1701/biostat/staging/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent74;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/pemphigus/argx-113-1701/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/pemphigus/argx-113-1701/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent74 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent74 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/pemphigus/argx-113-1701/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 29;
MPRINT(GETLASTSTATUS):   alllst = 10;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 75 -> /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=29 ALLLST=15
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent75;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent75;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent75 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent75 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 29;
MPRINT(GETLASTSTATUS):   alllst = 15;
MPRINT(GETLASTSTATUS):   run;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 76 -> /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun1/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun1/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun1/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=15 ALLLST=9
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent76;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun1/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent76;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun1/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun1/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent76 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent76 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun1/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 15;
MPRINT(GETLASTSTATUS):   alllst = 9;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 77 -> /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun2/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun2/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun2/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=0 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent77;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun2/generic_adam";
                                                           The SAS System

MPRINT(GETLASTSTATUS):   output recontent77;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun2/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun2/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=N
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent77 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent77 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun2/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 0;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 78 -> /clinical/argx-113/pemphigus/argx-113-1905/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/pemphigus/argx-113-1905/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/pemphigus/argx-113-1905/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=29 ALLLST=15
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent78;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/pemphigus/argx-113-1905/biostat/staging/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent78;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/pemphigus/argx-113-1905/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/pemphigus/argx-113-1905/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent78 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent78 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/pemphigus/argx-113-1905/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 29;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   alllst = 15;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 79 -> /clinical/argx-113/pemphigus/argx-113-2010/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item does not exist: /clinical/argx-113/pemphigus/argx-113-2010/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/pemphigus/argx-113-2010/biostat/staging/generic_adam";
MPRINT(GETLASTSTATUS):   dbnote="reporting event path doesn't exists in LSAF";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 80 -> /clinical/argx-113/pemphigus/argx-113-9201/biostat/staging/testrun1/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/pemphigus/argx-113-9201/biostat/staging/testrun1/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/pemphigus/argx-113-9201/biostat/staging/testrun1/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=0 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent80;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/pemphigus/argx-113-9201/biostat/staging/testrun1/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent80;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/pemphigus/argx-113-9201/biostat/staging/testrun1/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/pemphigus/argx-113-9201/biostat/staging/testrun1/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=N
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent80 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent80 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/pemphigus/argx-113-9201/biostat/staging/testrun1/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 0;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 81 -> /clinical/argx-113/pots/argx-113-0000/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/pots/argx-113-0000/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/pots/argx-113-0000/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=29 ALLLST=9
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent81;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/pots/argx-113-0000/biostat/staging/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent81;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/pots/argx-113-0000/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/pots/argx-113-0000/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent81 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent81 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/pots/argx-113-0000/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 29;
MPRINT(GETLASTSTATUS):   alllst = 9;
MPRINT(GETLASTSTATUS):   run;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 82 -> /clinical/argx-113/pots/argx-113-2104/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/pots/argx-113-2104/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/pots/argx-113-2104/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=29 ALLLST=9
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent82;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/pots/argx-113-2104/biostat/staging/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent82;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/pots/argx-113-2104/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/pots/argx-113-2104/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent82 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent82 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/pots/argx-113-2104/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 29;
MPRINT(GETLASTSTATUS):   alllst = 9;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 83 -> /clinical/argx-113/sjogren/argx-113-0000/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/sjogren/argx-113-0000/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/sjogren/argx-113-0000/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=29 ALLLST=9
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent83;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/sjogren/argx-113-0000/biostat/staging/generic_adam";
                                                           The SAS System

MPRINT(GETLASTSTATUS):   output recontent83;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/sjogren/argx-113-0000/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/sjogren/argx-113-0000/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent83 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent83 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/sjogren/argx-113-0000/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 29;
MPRINT(GETLASTSTATUS):   alllst = 9;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 84 -> /clinical/argx-113/sjogren/argx-113-2106/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/sjogren/argx-113-2106/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/sjogren/argx-113-2106/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=29 ALLLST=9
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent84;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/sjogren/argx-113-2106/biostat/staging/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent84;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/sjogren/argx-113-2106/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/sjogren/argx-113-2106/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent84 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent84 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/sjogren/argx-113-2106/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 29;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   alllst = 9;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 85 -> /clinical/argx-113/x-ind/argx-113-0000/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/x-ind/argx-113-0000/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/x-ind/argx-113-0000/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=44 ALLLST=14
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent85;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/x-ind/argx-113-0000/biostat/staging/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent85;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/x-ind/argx-113-0000/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/x-ind/argx-113-0000/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
                                                           The SAS System

MPRINT(GETLASTSTATUS):   proc sort data=recontent85 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent85 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/x-ind/argx-113-0000/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 44;
MPRINT(GETLASTSTATUS):   alllst = 14;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 86 -> /clinical/argx-113/x-ind/argx-113-0000/biostat/staging/psur_20221216/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/x-ind/argx-113-0000/biostat/staging/psur_20221216/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/x-ind/argx-113-0000/biostat/staging/psur_20221216/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=7 ALLLST=2
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent86;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/x-ind/argx-113-0000/biostat/staging/psur_20221216/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent86;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/x-ind/argx-113-0000/biostat/staging/psur_20221216/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/x-ind/argx-113-0000/biostat/staging/psur_20221216/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent86 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent86 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/x-ind/argx-113-0000/biostat/staging/psur_20221216/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 7;
MPRINT(GETLASTSTATUS):   alllst = 2;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 87 -> /clinical/argx-117/covid-19/argx-117-0000/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-117/covid-19/argx-117-0000/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-117/covid-19/argx-117-0000/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=29 ALLLST=9
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent87;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-117/covid-19/argx-117-0000/biostat/staging/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent87;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-117/covid-19/argx-117-0000/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-117/covid-19/argx-117-0000/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent87 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent87 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-117/covid-19/argx-117-0000/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 29;
MPRINT(GETLASTSTATUS):   alllst = 9;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 88 -> /clinical/argx-117/covid-19/argx-117-2001/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-117/covid-19/argx-117-2001/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-117/covid-19/argx-117-2001/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=29 ALLLST=9
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent88;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-117/covid-19/argx-117-2001/biostat/staging/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent88;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-117/covid-19/argx-117-2001/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-117/covid-19/argx-117-2001/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
                                                           The SAS System

PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent88 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent88 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-117/covid-19/argx-117-2001/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 29;
MPRINT(GETLASTSTATUS):   alllst = 9;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 89 -> /clinical/argx-117/dgf/argx-117-0000/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-117/dgf/argx-117-0000/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-117/dgf/argx-117-0000/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=29 ALLLST=1
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent89;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-117/dgf/argx-117-0000/biostat/staging/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent89;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-117/dgf/argx-117-0000/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-117/dgf/argx-117-0000/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent89 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent89 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-117/dgf/argx-117-0000/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 29;
MPRINT(GETLASTSTATUS):   alllst = 1;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 90 -> /clinical/argx-117/dgf/argx-117-2201/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-117/dgf/argx-117-2201/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
                                                           The SAS System

Returned a list of items in /clinical/argx-117/dgf/argx-117-2201/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=29 ALLLST=1
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent90;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-117/dgf/argx-117-2201/biostat/staging/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent90;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-117/dgf/argx-117-2201/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-117/dgf/argx-117-2201/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent90 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent90 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-117/dgf/argx-117-2201/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 29;
MPRINT(GETLASTSTATUS):   alllst = 1;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 91 -> /clinical/argx-117/hv/argx-117-0000/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-117/hv/argx-117-0000/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-117/hv/argx-117-0000/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=29 ALLLST=9
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent91;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-117/hv/argx-117-0000/biostat/staging/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent91;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-117/hv/argx-117-0000/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-117/hv/argx-117-0000/biostat/staging/generic_adam " path;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent91 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent91 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-117/hv/argx-117-0000/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 29;
MPRINT(GETLASTSTATUS):   alllst = 9;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 92 -> /clinical/argx-117/hv/argx-117-1901/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-117/hv/argx-117-1901/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-117/hv/argx-117-1901/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=29 ALLLST=10
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent92;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-117/hv/argx-117-1901/biostat/staging/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent92;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-117/hv/argx-117-1901/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-117/hv/argx-117-1901/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent92 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent92 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-117/hv/argx-117-1901/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 29;
MPRINT(GETLASTSTATUS):   alllst = 10;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 93 -> /clinical/argx-117/hv/argx-117-1901/biostat/staging/mad4_lock/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
                                                           The SAS System

The item exists: /clinical/argx-117/hv/argx-117-1901/biostat/staging/mad4_lock/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-117/hv/argx-117-1901/biostat/staging/mad4_lock/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=0 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent93;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-117/hv/argx-117-1901/biostat/staging/mad4_lock/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent93;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-117/hv/argx-117-1901/biostat/staging/mad4_lock/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-117/hv/argx-117-1901/biostat/staging/mad4_lock/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=N
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent93 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent93 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-117/hv/argx-117-1901/biostat/staging/mad4_lock/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 0;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 94 -> /clinical/argx-117/hv/argx-117-1901/biostat/staging/mad5_lock/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-117/hv/argx-117-1901/biostat/staging/mad5_lock/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-117/hv/argx-117-1901/biostat/staging/mad5_lock/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=0 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent94;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-117/hv/argx-117-1901/biostat/staging/mad5_lock/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent94;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-117/hv/argx-117-1901/biostat/staging/mad5_lock/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-117/hv/argx-117-1901/biostat/staging/mad5_lock/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=N
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent94 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent94 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-117/hv/argx-117-1901/biostat/staging/mad5_lock/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 0;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 95 -> /clinical/argx-117/mmn/argx-117-0000/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-117/mmn/argx-117-0000/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-117/mmn/argx-117-0000/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=29 ALLLST=9
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent95;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-117/mmn/argx-117-0000/biostat/staging/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent95;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-117/mmn/argx-117-0000/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-117/mmn/argx-117-0000/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent95 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent95 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-117/mmn/argx-117-0000/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 29;
MPRINT(GETLASTSTATUS):   alllst = 9;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 96 -> /clinical/argx-117/mmn/argx-117-2002/biostat/staging/generic_adam
                                                           The SAS System

MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-117/mmn/argx-117-2002/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-117/mmn/argx-117-2002/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=29 ALLLST=9
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent96;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-117/mmn/argx-117-2002/biostat/staging/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent96;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-117/mmn/argx-117-2002/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-117/mmn/argx-117-2002/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent96 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent96 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
                                                           The SAS System

"/clinical/argx-117/mmn/argx-117-2002/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 29;
MPRINT(GETLASTSTATUS):   alllst = 9;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 97 -> /clinical/argx-117/mmn/argx-117-2003/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-117/mmn/argx-117-2003/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-117/mmn/argx-117-2003/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=29 ALLLST=9
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent97;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-117/mmn/argx-117-2003/biostat/staging/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent97;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-117/mmn/argx-117-2003/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-117/mmn/argx-117-2003/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent97 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent97 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-117/mmn/argx-117-2003/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 29;
MPRINT(GETLASTSTATUS):   alllst = 9;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 98 -> /clinical/argx-117/x-ind/argx-117-0000/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-117/x-ind/argx-117-0000/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-117/x-ind/argx-117-0000/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
                                                           The SAS System

ALLSASPGM=33 ALLLST=13
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent98;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-117/x-ind/argx-117-0000/biostat/staging/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent98;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-117/x-ind/argx-117-0000/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-117/x-ind/argx-117-0000/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent98 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent98 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-117/x-ind/argx-117-0000/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 33;
MPRINT(GETLASTSTATUS):   alllst = 13;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
                                                           The SAS System

MPRINT(GETLASTSTATUS):   run;
!!! 99 -> /clinical/argx-119/hv/argx-119-0000/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-119/hv/argx-119-0000/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-119/hv/argx-119-0000/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=0 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent99;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-119/hv/argx-119-0000/biostat/staging/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent99;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-119/hv/argx-119-0000/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-119/hv/argx-119-0000/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=N
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent99 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent99 out=lastmod;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-119/hv/argx-119-0000/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 0;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 100 -> /clinical/argx-119/hv/argx-119-2201/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-119/hv/argx-119-2201/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-119/hv/argx-119-2201/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=29 ALLLST=3
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent100;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-119/hv/argx-119-2201/biostat/staging/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent100;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-119/hv/argx-119-2201/biostat/staging/generic_adam " path;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-119/hv/argx-119-2201/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent100 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent100 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-119/hv/argx-119-2201/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 29;
MPRINT(GETLASTSTATUS):   alllst = 3;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 101 -> /clinical/argx-119/x-ind/argx-119-0000/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-119/x-ind/argx-119-0000/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-119/x-ind/argx-119-0000/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=0 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent101;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-119/x-ind/argx-119-0000/biostat/staging/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent101;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-119/x-ind/argx-119-0000/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-119/x-ind/argx-119-0000/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=N
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent101 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent101 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-119/x-ind/argx-119-0000/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 0;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 102 -> /clinical/test/gadam-tests/test-0000/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/test/gadam-tests/test-0000/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/test/gadam-tests/test-0000/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=29 ALLLST=3
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent102;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/test/gadam-tests/test-0000/biostat/staging/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent102;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/test/gadam-tests/test-0000/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/test/gadam-tests/test-0000/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent102 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent102 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/test/gadam-tests/test-0000/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 29;
MPRINT(GETLASTSTATUS):   alllst = 3;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 103 -> /clinical/test/gadam-tests/test-0001/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/test/gadam-tests/test-0001/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/test/gadam-tests/test-0001/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=29 ALLLST=1
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent103;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/test/gadam-tests/test-0001/biostat/staging/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent103;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
                                                           The SAS System

MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/test/gadam-tests/test-0001/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/test/gadam-tests/test-0001/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent103 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent103 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/test/gadam-tests/test-0001/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 29;
MPRINT(GETLASTSTATUS):   alllst = 1;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 104 -> /clinical/test/gadam-tests/test-0002/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/test/gadam-tests/test-0002/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/test/gadam-tests/test-0002/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=29 ALLLST=1
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent104;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/test/gadam-tests/test-0002/biostat/staging/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent104;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/test/gadam-tests/test-0002/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/test/gadam-tests/test-0002/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent104 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent104 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/test/gadam-tests/test-0002/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 29;
MPRINT(GETLASTSTATUS):   alllst = 1;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 105 -> /clinical/test/gadam-tests/test-0003/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/test/gadam-tests/test-0003/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/test/gadam-tests/test-0003/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=29 ALLLST=1
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent105;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/test/gadam-tests/test-0003/biostat/staging/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent105;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/test/gadam-tests/test-0003/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/test/gadam-tests/test-0003/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent105 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent105 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/test/gadam-tests/test-0003/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 29;
MPRINT(GETLASTSTATUS):   alllst = 1;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 106 -> /clinical/test/gadam-tests/test-0004/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/test/gadam-tests/test-0004/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/test/gadam-tests/test-0004/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=29 ALLLST=1
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent106;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/test/gadam-tests/test-0004/biostat/staging/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent106;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/test/gadam-tests/test-0004/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/test/gadam-tests/test-0004/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent106 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent106 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/test/gadam-tests/test-0004/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 29;
MPRINT(GETLASTSTATUS):   alllst = 1;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 107 -> /clinical/test/gsdtm-tests/gsdtm-test-0001/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/test/gsdtm-tests/gsdtm-test-0001/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/test/gsdtm-tests/gsdtm-test-0001/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=0 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent107;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/test/gsdtm-tests/gsdtm-test-0001/biostat/staging/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent107;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/test/gsdtm-tests/gsdtm-test-0001/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/test/gsdtm-tests/gsdtm-test-0001/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=N
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent107 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent107 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/test/gsdtm-tests/gsdtm-test-0001/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 0;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 108 -> /clinical/test/indic/cdisc-pilot-0000/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/test/indic/cdisc-pilot-0000/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/test/indic/cdisc-pilot-0000/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=29 ALLLST=1
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent108;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/test/indic/cdisc-pilot-0000/biostat/staging/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent108;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/test/indic/cdisc-pilot-0000/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/test/indic/cdisc-pilot-0000/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent108 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent108 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/test/indic/cdisc-pilot-0000/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 29;
MPRINT(GETLASTSTATUS):   alllst = 1;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 109 -> /clinical/test/indic/cdisc-pilot-0001/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/test/indic/cdisc-pilot-0001/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/test/indic/cdisc-pilot-0001/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=46 ALLLST=18
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent109;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/test/indic/cdisc-pilot-0001/biostat/staging/generic_adam";
                                                           The SAS System

MPRINT(GETLASTSTATUS):   output recontent109;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/test/indic/cdisc-pilot-0001/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/test/indic/cdisc-pilot-0001/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent109 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent109 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/test/indic/cdisc-pilot-0001/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 46;
MPRINT(GETLASTSTATUS):   alllst = 18;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 110 -> /clinical/test/indic/test-0000/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/test/indic/test-0000/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=29 ALLLST=1
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent110;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/test/indic/test-0000/biostat/staging/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent110;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/test/indic/test-0000/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/test/indic/test-0000/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent110 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent110 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/test/indic/test-0000/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 29;
MPRINT(GETLASTSTATUS):   alllst = 1;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 111 -> /clinical/test/indic/test-001/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/test/indic/test-001/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=29 ALLLST=11
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent111;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/test/indic/test-001/biostat/staging/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent111;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/test/indic/test-001/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/test/indic/test-001/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent111 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent111 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/test/indic/test-001/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 29;
MPRINT(GETLASTSTATUS):   alllst = 11;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 112 -> /clinical/test/indic/test-002/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/test/indic/test-002/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=29 ALLLST=2
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent112;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/test/indic/test-002/biostat/staging/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent112;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/test/indic/test-002/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/test/indic/test-002/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent112 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent112 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/test/indic/test-002/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 29;
MPRINT(GETLASTSTATUS):   alllst = 2;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 113 -> /clinical/test/indic/training-001/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/test/indic/training-001/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=29 ALLLST=1
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent113;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/test/indic/training-001/biostat/staging/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent113;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/test/indic/training-001/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/test/indic/training-001/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent113 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent113 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/test/indic/training-001/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 29;
MPRINT(GETLASTSTATUS):   alllst = 1;
MPRINT(GETLASTSTATUS):   run;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 114 -> /clinical/test/indic/training-002/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/test/indic/training-002/biostat/staging/generic_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=29 ALLLST=1
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent114;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/test/indic/training-002/biostat/staging/generic_adam";
MPRINT(GETLASTSTATUS):   output recontent114;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/test/indic/training-002/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/test/indic/training-002/biostat/staging/generic_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent114 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent114 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/test/indic/training-002/biostat/staging/generic_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 29;
MPRINT(GETLASTSTATUS):   alllst = 1;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
434        %getlaststatus (development);
MPRINT(GETLASTSTATUS):   data _null_;
MPRINT(GETLASTSTATUS):   set development end=last;
MPRINT(GETLASTSTATUS):   call symputx("re"||strip(put(_n_,8.)),strip(Reporting_Event_Path));
MPRINT(GETLASTSTATUS):   if last then call symputx("nbre",strip(put(_n_,8.)));
MPRINT(GETLASTSTATUS):   run;
NBRE=47
!!! 1 -> /clinical/argx-113/bp/argx-113-2009/biostat/staging/patient_profiles
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/bp/argx-113-2009/biostat/staging/patient_profiles
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/bp/argx-113-2009/biostat/staging/patient_profiles
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=12 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent1;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/bp/argx-113-2009/biostat/staging/patient_profiles";
MPRINT(GETLASTSTATUS):   output recontent1;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/bp/argx-113-2009/biostat/staging/patient_profiles " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/bp/argx-113-2009/biostat/staging/patient_profiles " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent1 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent1 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/bp/argx-113-2009/biostat/staging/patient_profiles/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 12;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 2 -> /clinical/argx-113/cidp/argx-113-1802/biostat/staging/figures_ba
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/figures_ba
MPRINT(GETLASTSTATUS):   options nomprint;
                                                           The SAS System

Returned a list of items in /clinical/argx-113/cidp/argx-113-1802/biostat/staging/figures_ba
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=0 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent2;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1802/biostat/staging/figures_ba";
MPRINT(GETLASTSTATUS):   output recontent2;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/cidp/argx-113-1802/biostat/staging/figures_ba " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/cidp/argx-113-1802/biostat/staging/figures_ba " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent2 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent2 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/cidp/argx-113-1802/biostat/staging/figures_ba/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
                                                           The SAS System

MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 0;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 3 -> /clinical/argx-113/cidp/argx-113-1802/biostat/staging/patient-profiles
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/patient-profiles
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/cidp/argx-113-1802/biostat/staging/patient-profiles
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=107 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent3;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1802/biostat/staging/patient-profiles";
MPRINT(GETLASTSTATUS):   output recontent3;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/cidp/argx-113-1802/biostat/staging/patient-profiles " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
                                                           The SAS System

/clinical/argx-113/cidp/argx-113-1802/biostat/staging/patient-profiles " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent3 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent3 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/cidp/argx-113-1802/biostat/staging/patient-profiles/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 107;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 4 -> /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun1/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun1/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun1/qc_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=17 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent4;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun1/qc_adam";
MPRINT(GETLASTSTATUS):   output recontent4;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun1/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun1/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=Y
MPRINT(GETLASTSTATUS):   proc sort data=recontent4 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent4 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun1/qc_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 17;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 5 -> /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/figures_ba
MPRINT(GETLASTSTATUS):   options nomprint;
                                                           The SAS System

The item exists: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/figures_ba
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/figures_ba
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=0 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent5;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/figures_ba";
MPRINT(GETLASTSTATUS):   output recontent5;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/figures_ba " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/figures_ba " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent5 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent5 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/figures_ba/documents/meta";
MPRINT(GETLASTSTATUS):   run;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 0;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 6 -> /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=28 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent6;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_adam";
MPRINT(GETLASTSTATUS):   output recontent6;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=Y
MPRINT(GETLASTSTATUS):   proc sort data=recontent6 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent6 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 28;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 7 -> /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_tlf
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=60 ALLLST=166
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent7;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_tlf";
MPRINT(GETLASTSTATUS):   output recontent7;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent7 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent7 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_tlf/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 60;
MPRINT(GETLASTSTATUS):   alllst = 166;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 8 -> /clinical/argx-113/cidp/argx-113-1902/biostat/staging/figures
                                                           The SAS System

MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/cidp/argx-113-1902/biostat/staging/figures
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=0 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent8;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1902/biostat/staging/figures";
MPRINT(GETLASTSTATUS):   output recontent8;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/cidp/argx-113-1902/biostat/staging/figures " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/cidp/argx-113-1902/biostat/staging/figures " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent8 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent8 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/cidp/argx-113-1902/biostat/staging/figures/documents/meta";
                                                           The SAS System

MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 0;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 9 -> /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=8 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent9;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_adam";
MPRINT(GETLASTSTATUS):   output recontent9;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=Y
MPRINT(GETLASTSTATUS):   proc sort data=recontent9 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent9 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 8;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 10 -> /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_tlf
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=32 ALLLST=44
                                                           The SAS System

MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent10;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_tlf";
MPRINT(GETLASTSTATUS):   output recontent10;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent10 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent10 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_tlf/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 32;
MPRINT(GETLASTSTATUS):   alllst = 44;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
                                                           The SAS System

!!! 11 -> /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20231206/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20231206/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20231206/qc_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=0 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent11;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20231206/qc_adam";
MPRINT(GETLASTSTATUS):   output recontent11;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20231206/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20231206/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent11 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent11 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20231206/qc_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 0;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 12 -> /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20231206/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20231206/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20231206/qc_tlf
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=0 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent12;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20231206/qc_tlf";
MPRINT(GETLASTSTATUS):   output recontent12;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20231206/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20231206/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent12 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent12 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20231206/qc_tlf/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 0;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 13 -> /clinical/argx-113/cidp/argx-113-1902/biostat/staging/patient-profiles
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-1902/biostat/staging/patient-profiles
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/cidp/argx-113-1902/biostat/staging/patient-profiles
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=7 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent13;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1902/biostat/staging/patient-profiles";
MPRINT(GETLASTSTATUS):   output recontent13;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/cidp/argx-113-1902/biostat/staging/patient-profiles " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/cidp/argx-113-1902/biostat/staging/patient-profiles " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent13 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent13 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/cidp/argx-113-1902/biostat/staging/patient-profiles/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 7;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 14 -> /clinical/argx-113/cidp/argx-113-1902/biostat/staging/testrun1/figures
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-1902/biostat/staging/testrun1/figures
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/cidp/argx-113-1902/biostat/staging/testrun1/figures
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=0 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent14;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1902/biostat/staging/testrun1/figures";
MPRINT(GETLASTSTATUS):   output recontent14;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/cidp/argx-113-1902/biostat/staging/testrun1/figures " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/cidp/argx-113-1902/biostat/staging/testrun1/figures " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent14 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   proc sort data=recontent14 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/cidp/argx-113-1902/biostat/staging/testrun1/figures/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 0;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 15 -> /clinical/argx-113/cidp/argx-113-9303/biostat/staging/testrun1/figures_ba
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-9303/biostat/staging/testrun1/figures_ba
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/cidp/argx-113-9303/biostat/staging/testrun1/figures_ba
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=0 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent15;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-9303/biostat/staging/testrun1/figures_ba";
MPRINT(GETLASTSTATUS):   output recontent15;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
                                                           The SAS System

/clinical/argx-113/cidp/argx-113-9303/biostat/staging/testrun1/figures_ba " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/cidp/argx-113-9303/biostat/staging/testrun1/figures_ba " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent15 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent15 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/cidp/argx-113-9303/biostat/staging/testrun1/figures_ba/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 0;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 16 -> /clinical/argx-113/cidp/argx-113-9303/biostat/staging/testrun1/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-9303/biostat/staging/testrun1/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/cidp/argx-113-9303/biostat/staging/testrun1/qc_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=5 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent16;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-9303/biostat/staging/testrun1/qc_adam";
MPRINT(GETLASTSTATUS):   output recontent16;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/cidp/argx-113-9303/biostat/staging/testrun1/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/cidp/argx-113-9303/biostat/staging/testrun1/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=Y
MPRINT(GETLASTSTATUS):   proc sort data=recontent16 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent16 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/cidp/argx-113-9303/biostat/staging/testrun1/qc_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 5;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
                                                           The SAS System

MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 17 -> /clinical/argx-113/itp/argx-113-1801/biostat/staging/patient_profiles
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-1801/biostat/staging/patient_profiles
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/itp/argx-113-1801/biostat/staging/patient_profiles
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=14 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent17;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-1801/biostat/staging/patient_profiles";
MPRINT(GETLASTSTATUS):   output recontent17;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/itp/argx-113-1801/biostat/staging/patient_profiles " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/itp/argx-113-1801/biostat/staging/patient_profiles " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent17 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
                                                           The SAS System

MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent17 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/itp/argx-113-1801/biostat/staging/patient_profiles/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 14;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 18 -> /clinical/argx-113/itp/argx-113-1801/biostat/staging/posthoc
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/itp/argx-113-1801/biostat/staging/posthoc
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=49 ALLLST=167
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent18;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-1801/biostat/staging/posthoc";
MPRINT(GETLASTSTATUS):   output recontent18;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
                                                           The SAS System

MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/itp/argx-113-1801/biostat/staging/posthoc " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/itp/argx-113-1801/biostat/staging/posthoc " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=Y
MPRINT(GETLASTSTATUS):   proc sort data=recontent18 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent18 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/itp/argx-113-1801/biostat/staging/posthoc/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 49;
MPRINT(GETLASTSTATUS):   alllst = 167;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 19 -> /clinical/argx-113/itp/argx-113-1803/biostat/staging/patient_profiles
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-1803/biostat/staging/patient_profiles
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/itp/argx-113-1803/biostat/staging/patient_profiles
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=8 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent19;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-1803/biostat/staging/patient_profiles";
MPRINT(GETLASTSTATUS):   output recontent19;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/itp/argx-113-1803/biostat/staging/patient_profiles " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/itp/argx-113-1803/biostat/staging/patient_profiles " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent19 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent19 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/itp/argx-113-1803/biostat/staging/patient_profiles/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 8;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 20 -> /clinical/argx-113/itp/argx-113-1803/biostat/staging/posthoc
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/itp/argx-113-1803/biostat/staging/posthoc
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=10 ALLLST=12
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent20;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-1803/biostat/staging/posthoc";
MPRINT(GETLASTSTATUS):   output recontent20;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/itp/argx-113-1803/biostat/staging/posthoc " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/itp/argx-113-1803/biostat/staging/posthoc " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent20 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
                                                           The SAS System

MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent20 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/itp/argx-113-1803/biostat/staging/posthoc/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 10;
MPRINT(GETLASTSTATUS):   alllst = 12;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 21 -> /clinical/argx-113/itp/argx-113-2004/biostat/staging/adhoc
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/itp/argx-113-2004/biostat/staging/adhoc
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=2 ALLLST=3
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent21;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-2004/biostat/staging/adhoc";
MPRINT(GETLASTSTATUS):   output recontent21;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
                                                           The SAS System

MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/itp/argx-113-2004/biostat/staging/adhoc " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/itp/argx-113-2004/biostat/staging/adhoc " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=Y
MPRINT(GETLASTSTATUS):   proc sort data=recontent21 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent21 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/itp/argx-113-2004/biostat/staging/adhoc/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 2;
MPRINT(GETLASTSTATUS):   alllst = 3;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 22 -> /clinical/argx-113/itp/argx-113-2004/biostat/staging/patient_profiles
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-2004/biostat/staging/patient_profiles
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/itp/argx-113-2004/biostat/staging/patient_profiles
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=4 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent22;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-2004/biostat/staging/patient_profiles";
MPRINT(GETLASTSTATUS):   output recontent22;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/itp/argx-113-2004/biostat/staging/patient_profiles " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/itp/argx-113-2004/biostat/staging/patient_profiles " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent22 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent22 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/itp/argx-113-2004/biostat/staging/patient_profiles/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 4;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 23 -> /clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/qc_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=8 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent23;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/qc_adam";
MPRINT(GETLASTSTATUS):   output recontent23;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=Y
MPRINT(GETLASTSTATUS):   proc sort data=recontent23 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent23 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/qc_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 8;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 24 -> /clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/qc_tlf
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=18 ALLLST=32
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent24;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/qc_tlf";
MPRINT(GETLASTSTATUS):   output recontent24;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent24 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent24 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/qc_tlf/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 18;
MPRINT(GETLASTSTATUS):   alllst = 32;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 25 -> /clinical/argx-113/itp/argx-113-2005/biostat/staging/testrun1/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-2005/biostat/staging/testrun1/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/itp/argx-113-2005/biostat/staging/testrun1/qc_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=5 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent25;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-2005/biostat/staging/testrun1/qc_adam";
MPRINT(GETLASTSTATUS):   output recontent25;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/itp/argx-113-2005/biostat/staging/testrun1/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/itp/argx-113-2005/biostat/staging/testrun1/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=Y
MPRINT(GETLASTSTATUS):   proc sort data=recontent25 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent25 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/itp/argx-113-2005/biostat/staging/testrun1/qc_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 5;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 26 -> /clinical/argx-113/itp/argx-113-9101/biostat/staging/posthoc
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/itp/argx-113-9101/biostat/staging/posthoc
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=4 ALLLST=6
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent26;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-9101/biostat/staging/posthoc";
MPRINT(GETLASTSTATUS):   output recontent26;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/itp/argx-113-9101/biostat/staging/posthoc " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/itp/argx-113-9101/biostat/staging/posthoc " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent26 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent26 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/itp/argx-113-9101/biostat/staging/posthoc/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 4;
MPRINT(GETLASTSTATUS):   alllst = 6;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 27 -> /clinical/argx-113/mg/argx-113-1602/biostat/staging/fda_irr
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-1602/biostat/staging/fda_irr
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=2 ALLLST=8
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent27;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-1602/biostat/staging/fda_irr";
MPRINT(GETLASTSTATUS):   output recontent27;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-1602/biostat/staging/fda_irr " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-1602/biostat/staging/fda_irr " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent27 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent27 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-1602/biostat/staging/fda_irr/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 2;
MPRINT(GETLASTSTATUS):   alllst = 8;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 28 -> /clinical/argx-113/mg/argx-113-1704/biostat/staging/fda_irr
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-1704/biostat/staging/fda_irr
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=2 ALLLST=8
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent28;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-1704/biostat/staging/fda_irr";
MPRINT(GETLASTSTATUS):   output recontent28;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-1704/biostat/staging/fda_irr " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-1704/biostat/staging/fda_irr " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent28 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent28 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-1704/biostat/staging/fda_irr/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 2;
MPRINT(GETLASTSTATUS):   alllst = 8;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 29 -> /clinical/argx-113/mg/argx-113-1705/biostat/staging/fda_irr
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-1705/biostat/staging/fda_irr
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=2 ALLLST=8
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent29;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-1705/biostat/staging/fda_irr";
MPRINT(GETLASTSTATUS):   output recontent29;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-1705/biostat/staging/fda_irr " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-1705/biostat/staging/fda_irr " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent29 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent29 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-1705/biostat/staging/fda_irr/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 2;
MPRINT(GETLASTSTATUS):   alllst = 8;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 30 -> /clinical/argx-113/mg/argx-113-1705/biostat/staging/final/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-1705/biostat/staging/final/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-1705/biostat/staging/final/qc_tlf
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=10 ALLLST=26
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent30;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-1705/biostat/staging/final/qc_tlf";
MPRINT(GETLASTSTATUS):   output recontent30;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-1705/biostat/staging/final/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-1705/biostat/staging/final/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent30 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent30 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-1705/biostat/staging/final/qc_tlf/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 10;
MPRINT(GETLASTSTATUS):   alllst = 26;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 31 -> /clinical/argx-113/mg/argx-113-1705/biostat/staging/final_posthoc
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-1705/biostat/staging/final_posthoc
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-1705/biostat/staging/final_posthoc
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=1 ALLLST=2
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent31;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-1705/biostat/staging/final_posthoc";
MPRINT(GETLASTSTATUS):   output recontent31;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-1705/biostat/staging/final_posthoc " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-1705/biostat/staging/final_posthoc " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent31 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent31 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-1705/biostat/staging/final_posthoc/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 1;
MPRINT(GETLASTSTATUS):   alllst = 2;
MPRINT(GETLASTSTATUS):   run;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 32 -> /clinical/argx-113/mg/argx-113-1705/biostat/staging/ma2023
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-1705/biostat/staging/ma2023
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=14 ALLLST=2
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent32;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-1705/biostat/staging/ma2023";
MPRINT(GETLASTSTATUS):   output recontent32;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-1705/biostat/staging/ma2023 " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-1705/biostat/staging/ma2023 " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent32 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent32 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-1705/biostat/staging/ma2023/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 14;
MPRINT(GETLASTSTATUS):   alllst = 2;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 33 -> /clinical/argx-113/mg/argx-113-2001/biostat/staging/ema
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-2001/biostat/staging/ema
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=14 ALLLST=54
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent33;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-2001/biostat/staging/ema";
MPRINT(GETLASTSTATUS):   output recontent33;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-2001/biostat/staging/ema " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-2001/biostat/staging/ema " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent33 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent33 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-2001/biostat/staging/ema/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 14;
MPRINT(GETLASTSTATUS):   alllst = 54;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 34 -> /clinical/argx-113/mg/argx-113-2002/biostat/staging/ema
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-2002/biostat/staging/ema
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=3 ALLLST=6
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent34;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-2002/biostat/staging/ema";
MPRINT(GETLASTSTATUS):   output recontent34;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-2002/biostat/staging/ema " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-2002/biostat/staging/ema " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent34 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent34 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-2002/biostat/staging/ema/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 3;
MPRINT(GETLASTSTATUS):   alllst = 6;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 35 -> /clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2_1yr/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2_1yr/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2_1yr/qc_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=18 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent35;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2_1yr/qc_adam";
MPRINT(GETLASTSTATUS):   output recontent35;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2_1yr/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2_1yr/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent35 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent35 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2_1yr/qc_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 18;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 36 -> /clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2_1yr/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2_1yr/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2_1yr/qc_tlf
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=27 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent36;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2_1yr/qc_tlf";
MPRINT(GETLASTSTATUS):   output recontent36;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2_1yr/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2_1yr/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent36 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent36 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2_1yr/qc_tlf/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 27;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 37 -> /clinical/argx-113/mg/argx-113-2002/biostat/staging/patient_profiles
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-2002/biostat/staging/patient_profiles
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-2002/biostat/staging/patient_profiles
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=0 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent37;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-2002/biostat/staging/patient_profiles";
MPRINT(GETLASTSTATUS):   output recontent37;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-2002/biostat/staging/patient_profiles " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-2002/biostat/staging/patient_profiles " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent37 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent37 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-2002/biostat/staging/patient_profiles/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 0;
MPRINT(GETLASTSTATUS):   alllst = 0;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 38 -> /clinical/argx-113/mg/argx-113-2002/biostat/staging/pmda_1yr
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-2002/biostat/staging/pmda_1yr
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=10 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent38;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-2002/biostat/staging/pmda_1yr";
MPRINT(GETLASTSTATUS):   output recontent38;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-2002/biostat/staging/pmda_1yr " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-2002/biostat/staging/pmda_1yr " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent38 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent38 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-2002/biostat/staging/pmda_1yr/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 10;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 39 -> /clinical/argx-113/mg/argx-113-9041/biostat/staging/final_adam
MPRINT(GETLASTSTATUS):   options nomprint;
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/mg/argx-113-9041/biostat/staging/final_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=6 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent39;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-9041/biostat/staging/final_adam";
MPRINT(GETLASTSTATUS):   output recontent39;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/mg/argx-113-9041/biostat/staging/final_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/mg/argx-113-9041/biostat/staging/final_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent39 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent39 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/mg/argx-113-9041/biostat/staging/final_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 6;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 40 -> /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/patient_profiles
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/patient_profiles
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/patient_profiles
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=17 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent40;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/patient_profiles";
MPRINT(GETLASTSTATUS):   output recontent40;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/patient_profiles " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/patient_profiles " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent40 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent40 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/patient_profiles/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 17;
MPRINT(GETLASTSTATUS):   alllst = 0;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 41 -> /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun2/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun2/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun2/qc_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=5 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent41;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun2/qc_adam";
MPRINT(GETLASTSTATUS):   output recontent41;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun2/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun2/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=Y
MPRINT(GETLASTSTATUS):   proc sort data=recontent41 out=created;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent41 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun2/qc_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 5;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 42 -> /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun2/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun2/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun2/qc_tlf
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=0 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent42;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun2/qc_tlf";
MPRINT(GETLASTSTATUS):   output recontent42;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun2/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun2/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent42 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent42 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun2/qc_tlf/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 0;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 43 -> /clinical/argx-113/pemphigus/argx-113-1905/biostat/staging/patient_profiles
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/pemphigus/argx-113-1905/biostat/staging/patient_profiles
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/pemphigus/argx-113-1905/biostat/staging/patient_profiles
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
                                                           The SAS System

MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=23 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent43;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/pemphigus/argx-113-1905/biostat/staging/patient_profiles";
MPRINT(GETLASTSTATUS):   output recontent43;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/pemphigus/argx-113-1905/biostat/staging/patient_profiles " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/pemphigus/argx-113-1905/biostat/staging/patient_profiles " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent43 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent43 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/pemphigus/argx-113-1905/biostat/staging/patient_profiles/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   allsaspgm = 23;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 44 -> /clinical/argx-113/pemphigus/argx-113-9201/biostat/staging/testrun1/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/pemphigus/argx-113-9201/biostat/staging/testrun1/qc_adam
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/pemphigus/argx-113-9201/biostat/staging/testrun1/qc_adam
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=0 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent44;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/pemphigus/argx-113-9201/biostat/staging/testrun1/qc_adam";
MPRINT(GETLASTSTATUS):   output recontent44;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/pemphigus/argx-113-9201/biostat/staging/testrun1/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/pemphigus/argx-113-9201/biostat/staging/testrun1/qc_adam " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
                                                           The SAS System

SPLISTEXISTS=Y
MPRINT(GETLASTSTATUS):   proc sort data=recontent44 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent44 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/pemphigus/argx-113-9201/biostat/staging/testrun1/qc_adam/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 0;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 45 -> /clinical/argx-113/pemphigus/argx-113-9201/biostat/staging/testrun1/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-113/pemphigus/argx-113-9201/biostat/staging/testrun1/qc_tlf
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-113/pemphigus/argx-113-9201/biostat/staging/testrun1/qc_tlf
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=0 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent45;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-113/pemphigus/argx-113-9201/biostat/staging/testrun1/qc_tlf";
MPRINT(GETLASTSTATUS):   output recontent45;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-113/pemphigus/argx-113-9201/biostat/staging/testrun1/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-113/pemphigus/argx-113-9201/biostat/staging/testrun1/qc_tlf " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent45 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent45 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-113/pemphigus/argx-113-9201/biostat/staging/testrun1/qc_tlf/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 0;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 46 -> /clinical/argx-117/hv/argx-117-1901/biostat/staging/mad5_tables
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-117/hv/argx-117-1901/biostat/staging/mad5_tables
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-117/hv/argx-117-1901/biostat/staging/mad5_tables
MPRINT(GETLASTSTATUS):   data pgms;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=17 ALLLST=40
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent46;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-117/hv/argx-117-1901/biostat/staging/mad5_tables";
MPRINT(GETLASTSTATUS):   output recontent46;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-117/hv/argx-117-1901/biostat/staging/mad5_tables " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-117/hv/argx-117-1901/biostat/staging/mad5_tables " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=Y
MPRINT(GETLASTSTATUS):   proc sort data=recontent46 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent46 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-117/hv/argx-117-1901/biostat/staging/mad5_tables/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 17;
MPRINT(GETLASTSTATUS):   alllst = 40;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
!!! 47 -> /clinical/argx-117/mmn/argx-117-2002/biostat/staging/patient_profiles
MPRINT(GETLASTSTATUS):   options nomprint;
The item exists: /clinical/argx-117/mmn/argx-117-2002/biostat/staging/patient_profiles
MPRINT(GETLASTSTATUS):   options nomprint;
Returned a list of items in /clinical/argx-117/mmn/argx-117-2002/biostat/staging/patient_profiles
MPRINT(GETLASTSTATUS):   data pgms;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/programs/")>0 and itemtype="sas:sasprogram";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data op;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   where index(path,"/output/")>0 and index(name,'.lst')>0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sql noprint;
MPRINT(GETLASTSTATUS):   select count(name) into : allsaspgm from pgms;
MPRINT(GETLASTSTATUS):   select count(name) into : alllst from op;
MPRINT(GETLASTSTATUS):   quit;
ALLSASPGM=14 ALLLST=0
MPRINT(GETLASTSTATUS):   proc means data=recontent noprint;
MPRINT(GETLASTSTATUS):   var size;
MPRINT(GETLASTSTATUS):   output out=fsumm (drop=_:) n=nbfiles sum=totalsize;
MPRINT(GETLASTSTATUS):   where not iscontainer;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data projectstatus (keep=dateLastModified rename=(dateLastModified=projectstatuslastmodified)) splist
(keep=dateLastModified rename=(dateLastModified=splistlastmodified)) recontent47;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path $200;
MPRINT(GETLASTSTATUS):   set recontent;
MPRINT(GETLASTSTATUS):   keep path name dateLastModified iscontainer dateCreated Reporting_Event_Path isLocked size;
MPRINT(GETLASTSTATUS):   Reporting_Event_Path="/clinical/argx-117/mmn/argx-117-2002/biostat/staging/patient_profiles";
MPRINT(GETLASTSTATUS):   output recontent47;
MPRINT(GETLASTSTATUS):   if name eq 'projectstatus.html' then do;
MPRINT(GETLASTSTATUS):   pscounter+1;
MPRINT(GETLASTSTATUS):   call symputx('projectstatusexists','Y');
MPRINT(GETLASTSTATUS):   if pscounter>1 then put "W" "ARNING: >1 projectstatus.html file in
/clinical/argx-117/mmn/argx-117-2002/biostat/staging/patient_profiles " path;
MPRINT(GETLASTSTATUS):   else output projectstatus;
MPRINT(GETLASTSTATUS):   end;
MPRINT(GETLASTSTATUS):   if index(name, '_splist.xlsx')>0 then do;
MPRINT(GETLASTSTATUS):   splcounter+1;
MPRINT(GETLASTSTATUS):   call symputx('splistexists','Y');
MPRINT(GETLASTSTATUS):   if splcounter>1 then put "W" "ARNING: >1 _splist.xlsx file in
/clinical/argx-117/mmn/argx-117-2002/biostat/staging/patient_profiles " path;
MPRINT(GETLASTSTATUS):   else output splist;
MPRINT(GETLASTSTATUS):   end;
                                                           The SAS System

MPRINT(GETLASTSTATUS):   run;
PROJECTSTATUSEXISTS=Y
SPLISTEXISTS=N
MPRINT(GETLASTSTATUS):   proc sort data=recontent47 out=created;
MPRINT(GETLASTSTATUS):   by dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data creation;
MPRINT(GETLASTSTATUS):   set created (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateCreated;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   proc sort data=recontent47 out=lastmod;
MPRINT(GETLASTSTATUS):   by descending dateLastModified;
MPRINT(GETLASTSTATUS):   where not (iscontainer) and name ne 'projectstatus.html' and path ne:
"/clinical/argx-117/mmn/argx-117-2002/biostat/staging/patient_profiles/documents/meta";
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data lastmodified (rename=(name=nameLastModified));
MPRINT(GETLASTSTATUS):   set lastmod (obs=1);
MPRINT(GETLASTSTATUS):   keep Reporting_Event_Path dateLastModified name;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data currfolder;
MPRINT(GETLASTSTATUS):   merge creation lastmodified projectstatus splist fsumm;
MPRINT(GETLASTSTATUS):   length allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   allsaspgm = 14;
MPRINT(GETLASTSTATUS):   alllst = 0;
MPRINT(GETLASTSTATUS):   run;
MPRINT(GETLASTSTATUS):   data metaplus;
MPRINT(GETLASTSTATUS):   length Reporting_Event_Path dbnote $200 allsaspgm alllst 8;
MPRINT(GETLASTSTATUS):   merge metaplus (in=a) currfolder (in=b);
MPRINT(GETLASTSTATUS):   by Reporting_Event_Path;
MPRINT(GETLASTSTATUS):   if a;
MPRINT(GETLASTSTATUS):   if b and not a then put "W" "ARNING; something wrong with merge";
MPRINT(GETLASTSTATUS):   run;
435
436        data metaplus (drop=re1 re2);
437             length compound indication study $30 re $50 re1 re2 $200;
438             set metaplus;
439             reldays = today()-datepart(dateLastModified);
440             daysactive = datepart(dateLastModified)-datepart(dateCreated);
441             totalsizemb = round(totalsize/1000000,.01);
442             compound = scan(Reporting_Event_Path,2,'/');
443             indication = scan(Reporting_Event_Path,3,'/');
444             study = scan(Reporting_Event_Path,4,'/');
445             re1 = scan(Reporting_Event_Path,7,'/');
446             re2 = scan(Reporting_Event_Path,8,'/');
447             if not missing(re2) then re=strip(re1)||"/"||strip(re2);
448             else re=strip(re1);
449        run;
450        proc sort data=metaplus;
451             by Reporting_Event_Path;
452        run;
453
454        data jobout.metaplus;
455             set metaplus;
456        run;
457
458        %clock (dashboard + status);
MPRINT(CLOCK):   * seconds ;
MPRINT(CLOCK):   * convert seconds to days ;
                                                           The SAS System

MPRINT(CLOCK):   * subtract days from run time ;
COMPUTATION TIME for dashboard + status : 0 days 0 hours 24 minutes 17.2 seconds
=================================================================================================================
459        /*%mend bu;*/
460
461
462        /* 3) Retrieve dashboard info for all active reporting events */
463        %let nbre=0;
464        data _null_;
465             set development end=last;
466             call symputx("re"||strip(put(_n_,8.)),strip(Reporting_Event_Path));
467             if last then call symputx("nbre",strip(put(_n_,8.)));
468        run;
469        %put &=nbre;
NBRE=47
470
471        %macro removeemptyvar (din, var);
472             %if %varexist(&din,&var) %then %do;
473                  proc freq data=&din noprint;
474                       table &var / norow nocol nopercent nocum list out=f&var;
475                  run;
476                  %let isempty=0;
477                  data _null_;
478                       set f&var;
479                       if _n_=1 and &var="" then call symputx('isempty','1');
480                       if _n_>1 then call symputx('isempty','0');
481                  run;
482                  data &din;
483                       set &din;
484                       %if &isempty=1 %then %do;
485                       drop &var;
486                       %end;
487                  run;
488             %end;
489        %mend removeemptyvar;
490        %macro getj (filename);
491             %getjsonfile(&&re&di/documents/meta/&filename..json);
492             %put &=jsonfileexists;
493             %put &=_lsafExists_;
494             data &filename.&di;
495                  length Reporting_Event_Path db2message $200;
496                  Reporting_Event_Path="&&re&di";
497                  %if &jsonfileexists = yes %then %do;
498                       set root;
499                       db2message = "&filename. exists";
500                  %end;
501                  %else %do;
502                       db2message = "&filename. doesn't exists";
503                  %end;
504             run;
505             %if &filename=report2 %then %do;
506                  %removeemptyvar(&filename.&di, Analysis_Set);
507                  %removeemptyvar(&filename.&di, DATASET);
508                  %removeemptyvar(&filename.&di, Num);
509                  %removeemptyvar(&filename.&di, Section);
510                  %removeemptyvar(&filename.&di, Title);
511                  %removeemptyvar(&filename.&di, datasetlogpath);
512                  %removeemptyvar(&filename.&di, datasetpath);
                                                           The SAS System

513                  %removeemptyvar(&filename.&di, dateLastModifiedlog);
514                  %removeemptyvar(&filename.&di, dateLastModifiedlst);
515                  %removeemptyvar(&filename.&di, logcheck);
516                  %removeemptyvar(&filename.&di, message);
517                  %removeemptyvar(&filename.&di, outputfilename);
518                  %removeemptyvar(&filename.&di, pathlog);
519                  %removeemptyvar(&filename.&di, programmer);
520                  %removeemptyvar(&filename.&di, qcstatus);
521                  %removeemptyvar(&filename.&di, sas_program);
522                  %removeemptyvar(&filename.&di, type);
523             %end;
524             %if &filename=report1 %then %do;
525                 %removeemptyvar(&filename.&di, headercheck);
526                 %removeemptyvar(&filename.&di, headerfailmess);
527                 %removeemptyvar(&filename.&di, lastModifiedBy);
528                 %removeemptyvar(&filename.&di, logcheck);
529                 %removeemptyvar(&filename.&di, manifestname);
530                 %removeemptyvar(&filename.&di, message);
531                 %removeemptyvar(&filename.&di, path);
532                 %removeemptyvar(&filename.&di, sas_program);
533                 %removeemptyvar(&filename.&di, sasprog_exist);
534             %end;
535
536             %if &di=1 %then %do;
537                  data &filename;
538                       set &filename.&di;
539                  run;
540                  %end;
541                  %else %if &di>1 %then %do;
542                  %app(&filename,&filename.&di);
543             %end;
544        %mend getj;
545        %macro collect;
546             %do di = 1 %to &nbre;
547                  %getj (log_dashboard);
548                  %getj (refreshedoutputs);
549                  %getj (report1);
550                  %getj (report2);
551             %end;
552        %mend collect;
553        %collect;
MPRINT(GETJ):  *********************************************************************** * Project :
/general/biostat/jobs/dashboard/dev/ * Program : getjsonfile.sas * Author : mbusselen * Creation Date : 2022-04-02 * Purpose : read
json file from jpath, depending on how the job is run it is available or not
***********************************************************************;
MAUTOCOMPLOC:  The autocall macro GETJSONFILE is compiling using the autocall source file
            /lsafshared/SASWorkspaces/.transient/dashboard2.job-4a37a855-ba33-4b52-9ced-c0df0b457280/general/biostat/jobs/dashboard/
            dev/macros/getjsonfile.sas.
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/bp/argx-113-2009/biostat/staging/patient_profiles/documents/meta/log_dashboard.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
MAUTOCOMPLOC:  The autocall macro LSAF_EXISTSINWORKSPACE is compiling using the autocall source file
            /sso/sfw/sas/940/SASFoundation/9.4/lsafapi/lsaf-sas-macro-2.6.1/sasmacros/lsaf_existsinworkspace.sas.
                                                           The SAS System

The item does not exist in the workspace: /clinical/argx-113/bp/argx-113-2009/biostat/staging/patient_profiles/documents/meta/log_da
shboard.json
MAUTOCOMPLOC:  The autocall macro LSAF_SYNCFILETOWORKSPACE is compiling using the autocall source file
            /sso/sfw/sas/940/SASFoundation/9.4/lsafapi/lsaf-sas-macro-2.6.1/sasmacros/lsaf_syncfiletoworkspace.sas.
The repository item was synchronized to the workspace: /clinical/argx-113/bp/argx-113-2009/biostat/staging/patient_profiles/document
s/meta/log_dashboard.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/bp/argx-113-2009/biostat/staging/patient_profiles/documents/meta/log_dashboar
d.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
MAUTOCOMPLOC:  The autocall macro LSAF_DELETEWORKSPACEITEM is compiling using the autocall source file
            /sso/sfw/sas/940/SASFoundation/9.4/lsafapi/lsaf-sas-macro-2.6.1/sasmacros/lsaf_deleteworkspaceitem.sas.
The item was deleted from the workspace: /clinical/argx-113/bp/argx-113-2009/biostat/staging/patient_profiles/documents/meta/log_das
hboard.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data log_dashboard1;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/bp/argx-113-2009/biostat/staging/patient_profiles";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "log_dashboard exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):   data log_dashboard;
MPRINT(GETJ):   set log_dashboard1;
MPRINT(GETJ):   run;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/bp/argx-113-2009/biostat/staging/patient_profiles/documents/meta/refreshedoutputs.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/bp/argx-113-2009/biostat/staging/patient_profiles/documents/meta/refres
hedoutputs.json
The repository item was synchronized to the workspace: /clinical/argx-113/bp/argx-113-2009/biostat/staging/patient_profiles/document
s/meta/refreshedoutputs.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/bp/argx-113-2009/biostat/staging/patient_profiles/documents/meta/refreshedout
puts.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/bp/argx-113-2009/biostat/staging/patient_profiles/documents/meta/refresh
edoutputs.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data refreshedoutputs1;
                                                           The SAS System

MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/bp/argx-113-2009/biostat/staging/patient_profiles";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "refreshedoutputs exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):   data refreshedoutputs;
MPRINT(GETJ):   set refreshedoutputs1;
MPRINT(GETJ):   run;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/bp/argx-113-2009/biostat/staging/patient_profiles/documents/meta/report1.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/bp/argx-113-2009/biostat/staging/patient_profiles/documents/meta/report
1.json
The repository item was synchronized to the workspace: /clinical/argx-113/bp/argx-113-2009/biostat/staging/patient_profiles/document
s/meta/report1.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/bp/argx-113-2009/biostat/staging/patient_profiles/documents/meta/report1.json
";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/bp/argx-113-2009/biostat/staging/patient_profiles/documents/meta/report1
.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data report11;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/bp/argx-113-2009/biostat/staging/patient_profiles";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "report1 exists";
MPRINT(GETJ):   run;
MAUTOCOMPLOC:  The autocall macro VAREXIST is compiling using the autocall source file
            /lsafshared/SASWorkspaces/.transient/dashboard2.job-4a37a855-ba33-4b52-9ced-c0df0b457280/general/biostat/macros/_library
            /varexist.sas.
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):   data report1;
MPRINT(GETJ):   set report11;
MPRINT(GETJ):   run;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
                                                           The SAS System

The item exists: /clinical/argx-113/bp/argx-113-2009/biostat/staging/patient_profiles/documents/meta/report2.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/bp/argx-113-2009/biostat/staging/patient_profiles/documents/meta/report
2.json
The repository item was synchronized to the workspace: /clinical/argx-113/bp/argx-113-2009/biostat/staging/patient_profiles/document
s/meta/report2.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/bp/argx-113-2009/biostat/staging/patient_profiles/documents/meta/report2.json
";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/bp/argx-113-2009/biostat/staging/patient_profiles/documents/meta/report2
.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data report21;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/bp/argx-113-2009/biostat/staging/patient_profiles";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "report2 exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):   data report2;
MPRINT(GETJ):   set report21;
MPRINT(GETJ):   run;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/figures_ba/documents/meta/log_dashboard.json
_LSAFEXISTS_=0
MPRINT(GETJ):  ;
JSONFILEEXISTS=no
_LSAFEXISTS_=0
                                                           The SAS System

MPRINT(GETJ):   data log_dashboard2;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1802/biostat/staging/figures_ba";
MPRINT(GETJ):   db2message = "log_dashboard doesn't exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  *********************************************************************** * Project :
/general/biostat/jobs/dashboard/dev/ * Program : app.sas * Author : mbusselen * Creation Date : 2022-04-23 * Purpose : append 2
datasets, but avoids truncation ***********************************************************************;
MAUTOCOMPLOC:  The autocall macro APP is compiling using the autocall source file
            /lsafshared/SASWorkspaces/.transient/dashboard2.job-4a37a855-ba33-4b52-9ced-c0df0b457280/general/biostat/jobs/dashboard/
            dev/macros/app.sas.
MPRINT(APP):   proc contents data=log_dashboard2 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=log_dashboard out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data log_dashboard;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length message $121;
MPRINT(APP):   length path $84;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set log_dashboard log_dashboard2 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/figures_ba/documents/meta/refreshedoutputs.json
_LSAFEXISTS_=0
MPRINT(GETJ):  ;
                                                           The SAS System

JSONFILEEXISTS=no
_LSAFEXISTS_=0
MPRINT(GETJ):   data refreshedoutputs2;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1802/biostat/staging/figures_ba";
MPRINT(GETJ):   db2message = "refreshedoutputs doesn't exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=refreshedoutputs2 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=refreshedoutputs out=vold (keep=name type length where=(type=2) rename=(length=lengthold))
noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data refreshedoutputs;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length msg $17;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set refreshedoutputs refreshedoutputs2 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/figures_ba/documents/meta/report1.json
_LSAFEXISTS_=0
MPRINT(GETJ):  ;
JSONFILEEXISTS=no
_LSAFEXISTS_=0
MPRINT(GETJ):   data report12;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
                                                           The SAS System

MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1802/biostat/staging/figures_ba";
MPRINT(GETJ):   db2message = "report1 doesn't exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report12 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report1 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report1;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report1 report12 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/figures_ba/documents/meta/report2.json
_LSAFEXISTS_=0
MPRINT(GETJ):  ;
                                                           The SAS System

JSONFILEEXISTS=no
_LSAFEXISTS_=0
MPRINT(GETJ):   data report22;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1802/biostat/staging/figures_ba";
MPRINT(GETJ):   db2message = "report2 doesn't exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report22 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report2 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report2;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report2 report22 (in=b);
                                                           The SAS System

MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/patient-profiles/documents/meta/log_dashboard.json
_LSAFEXISTS_=0
MPRINT(GETJ):  ;
JSONFILEEXISTS=no
_LSAFEXISTS_=0
MPRINT(GETJ):   data log_dashboard3;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1802/biostat/staging/patient-profiles";
MPRINT(GETJ):   db2message = "log_dashboard doesn't exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=log_dashboard3 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=log_dashboard out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data log_dashboard;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length message $121;
MPRINT(APP):   length path $84;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set log_dashboard log_dashboard3 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
                                                           The SAS System

MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/patient-profiles/documents/meta/refreshedoutputs.json
_LSAFEXISTS_=0
MPRINT(GETJ):  ;
JSONFILEEXISTS=no
_LSAFEXISTS_=0
MPRINT(GETJ):   data refreshedoutputs3;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1802/biostat/staging/patient-profiles";
MPRINT(GETJ):   db2message = "refreshedoutputs doesn't exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=refreshedoutputs3 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=refreshedoutputs out=vold (keep=name type length where=(type=2) rename=(length=lengthold))
noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data refreshedoutputs;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length msg $17;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set refreshedoutputs refreshedoutputs3 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
                                                           The SAS System

The item does not exist: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/patient-profiles/documents/meta/report1.json
_LSAFEXISTS_=0
MPRINT(GETJ):  ;
JSONFILEEXISTS=no
_LSAFEXISTS_=0
MPRINT(GETJ):   data report13;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1802/biostat/staging/patient-profiles";
MPRINT(GETJ):   db2message = "report1 doesn't exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report13 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report1 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report1;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report1 report13 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
                                                           The SAS System

MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/patient-profiles/documents/meta/report2.json
_LSAFEXISTS_=0
MPRINT(GETJ):  ;
JSONFILEEXISTS=no
_LSAFEXISTS_=0
MPRINT(GETJ):   data report23;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1802/biostat/staging/patient-profiles";
MPRINT(GETJ):   db2message = "report2 doesn't exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report23 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report2 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
                                                           The SAS System

MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report2;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report2 report23 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun1/qc_adam/documents/meta/log_dashboard.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun1/qc_adam/documents/meta/log_
dashboard.json
The repository item was synchronized to the workspace: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun1/qc_adam/docume
nts/meta/log_dashboard.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun1/qc_adam/documents/meta/log_dashbo
ard.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun1/qc_adam/documents/meta/log_d
ashboard.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data log_dashboard4;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun1/qc_adam";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "log_dashboard exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=log_dashboard4 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=log_dashboard out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
                                                           The SAS System

MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data log_dashboard;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length message $121;
MPRINT(APP):   length path $86;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set log_dashboard log_dashboard4 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun1/qc_adam/documents/meta/refreshedoutputs.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun1/qc_adam/documents/meta/refr
eshedoutputs.json
The repository item was synchronized to the workspace: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun1/qc_adam/docume
nts/meta/refreshedoutputs.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun1/qc_adam/documents/meta/refreshedo
utputs.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun1/qc_adam/documents/meta/refre
shedoutputs.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data refreshedoutputs4;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun1/qc_adam";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "refreshedoutputs exists";
                                                           The SAS System

MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=refreshedoutputs4 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=refreshedoutputs out=vold (keep=name type length where=(type=2) rename=(length=lengthold))
noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data refreshedoutputs;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length msg $17;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set refreshedoutputs refreshedoutputs4 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun1/qc_adam/documents/meta/report1.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun1/qc_adam/documents/meta/repo
rt1.json
The repository item was synchronized to the workspace: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun1/qc_adam/docume
nts/meta/report1.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun1/qc_adam/documents/meta/report1.js
on";
                                                           The SAS System

MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun1/qc_adam/documents/meta/repor
t1.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data report14;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun1/qc_adam";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "report1 exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report14 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report1 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report1;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report1 report14 (in=b);
                                                           The SAS System

MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun1/qc_adam/documents/meta/report2.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun1/qc_adam/documents/meta/repo
rt2.json
The repository item was synchronized to the workspace: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun1/qc_adam/docume
nts/meta/report2.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun1/qc_adam/documents/meta/report2.js
on";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun1/qc_adam/documents/meta/repor
t2.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data report24;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun1/qc_adam";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "report2 exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report24 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report2 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
                                                           The SAS System

MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report2;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report2 report24 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/figures_ba/documents/meta/log_dashboard.json
_LSAFEXISTS_=0
MPRINT(GETJ):  ;
JSONFILEEXISTS=no
_LSAFEXISTS_=0
MPRINT(GETJ):   data log_dashboard5;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/figures_ba";
MPRINT(GETJ):   db2message = "log_dashboard doesn't exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=log_dashboard5 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=log_dashboard out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
                                                           The SAS System

MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data log_dashboard;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length message $121;
MPRINT(APP):   length path $86;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set log_dashboard log_dashboard5 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/figures_ba/documents/meta/refreshedoutputs.j
son
_LSAFEXISTS_=0
MPRINT(GETJ):  ;
JSONFILEEXISTS=no
_LSAFEXISTS_=0
MPRINT(GETJ):   data refreshedoutputs5;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/figures_ba";
MPRINT(GETJ):   db2message = "refreshedoutputs doesn't exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=refreshedoutputs5 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=refreshedoutputs out=vold (keep=name type length where=(type=2) rename=(length=lengthold))
noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
                                                           The SAS System

MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data refreshedoutputs;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length msg $17;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set refreshedoutputs refreshedoutputs5 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/figures_ba/documents/meta/report1.json
_LSAFEXISTS_=0
MPRINT(GETJ):  ;
JSONFILEEXISTS=no
_LSAFEXISTS_=0
MPRINT(GETJ):   data report15;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/figures_ba";
MPRINT(GETJ):   db2message = "report1 doesn't exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report15 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report1 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
                                                           The SAS System

MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report1;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report1 report15 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/figures_ba/documents/meta/report2.json
_LSAFEXISTS_=0
MPRINT(GETJ):  ;
JSONFILEEXISTS=no
_LSAFEXISTS_=0
MPRINT(GETJ):   data report25;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/figures_ba";
MPRINT(GETJ):   db2message = "report2 doesn't exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
                                                           The SAS System

MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report25 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report2 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report2;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report2 report25 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_adam/documents/meta/log_dashboard.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_adam/documents/meta/log_
dashboard.json
The repository item was synchronized to the workspace: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_adam/docume
nts/meta/log_dashboard.json.
MPRINT(GETJSONFILE):  ;
                                                           The SAS System

MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_adam/documents/meta/log_dashbo
ard.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_adam/documents/meta/log_d
ashboard.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data log_dashboard6;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_adam";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "log_dashboard exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=log_dashboard6 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=log_dashboard out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data log_dashboard;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length message $121;
MPRINT(APP):   length path $86;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set log_dashboard log_dashboard6 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
                                                           The SAS System

MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_adam/documents/meta/refreshedoutputs.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_adam/documents/meta/refr
eshedoutputs.json
The repository item was synchronized to the workspace: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_adam/docume
nts/meta/refreshedoutputs.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_adam/documents/meta/refreshedo
utputs.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_adam/documents/meta/refre
shedoutputs.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data refreshedoutputs6;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_adam";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "refreshedoutputs exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=refreshedoutputs6 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=refreshedoutputs out=vold (keep=name type length where=(type=2) rename=(length=lengthold))
noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
                                                           The SAS System

MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data refreshedoutputs;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length msg $17;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set refreshedoutputs refreshedoutputs6 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_adam/documents/meta/report1.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_adam/documents/meta/repo
rt1.json
The repository item was synchronized to the workspace: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_adam/docume
nts/meta/report1.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_adam/documents/meta/report1.js
on";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_adam/documents/meta/repor
t1.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data report16;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_adam";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "report1 exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report16 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report1 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
                                                           The SAS System

MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report1;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report1 report16 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_adam/documents/meta/report2.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_adam/documents/meta/repo
rt2.json
The repository item was synchronized to the workspace: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_adam/docume
nts/meta/report2.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_adam/documents/meta/report2.js
on";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
                                                           The SAS System

The item was deleted from the workspace: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_adam/documents/meta/repor
t2.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data report26;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_adam";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "report2 exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report26 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report2 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report2;
                                                           The SAS System

MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report2 report26 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_tlf/documents/meta/log_dashboard.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_tlf/documents/meta/log_d
ashboard.json
The repository item was synchronized to the workspace: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_tlf/documen
ts/meta/log_dashboard.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_tlf/documents/meta/log_dashboa
rd.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_tlf/documents/meta/log_da
shboard.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data log_dashboard7;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_tlf";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "log_dashboard exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=log_dashboard7 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=log_dashboard out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
                                                           The SAS System

MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data log_dashboard;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length message $121;
MPRINT(APP):   length path $86;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set log_dashboard log_dashboard7 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_tlf/documents/meta/refreshedoutputs.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_tlf/documents/meta/refre
shedoutputs.json
The repository item was synchronized to the workspace: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_tlf/documen
ts/meta/refreshedoutputs.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_tlf/documents/meta/refreshedou
tputs.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_tlf/documents/meta/refres
hedoutputs.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data refreshedoutputs7;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_tlf";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "refreshedoutputs exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=refreshedoutputs7 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=refreshedoutputs out=vold (keep=name type length where=(type=2) rename=(length=lengthold))
                                                           The SAS System

noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data refreshedoutputs;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length msg $17;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set refreshedoutputs refreshedoutputs7 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_tlf/documents/meta/report1.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_tlf/documents/meta/repor
t1.json
The repository item was synchronized to the workspace: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_tlf/documen
ts/meta/report1.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_tlf/documents/meta/report1.jso
n";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
                                                           The SAS System

The item was deleted from the workspace: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_tlf/documents/meta/report
1.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data report17;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_tlf";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "report1 exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report17 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report1 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report1;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report1 report17 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
                                                           The SAS System

MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_tlf/documents/meta/report2.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_tlf/documents/meta/repor
t2.json
The repository item was synchronized to the workspace: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_tlf/documen
ts/meta/report2.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_tlf/documents/meta/report2.jso
n";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_tlf/documents/meta/report
2.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data report27;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1802/biostat/staging/testrun2/qc_tlf";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "report2 exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report27 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report2 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
                                                           The SAS System

MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report2;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report2 report27 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist: /clinical/argx-113/cidp/argx-113-1902/biostat/staging/figures/documents/meta/log_dashboard.json
_LSAFEXISTS_=0
MPRINT(GETJ):  ;
JSONFILEEXISTS=no
_LSAFEXISTS_=0
MPRINT(GETJ):   data log_dashboard8;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1902/biostat/staging/figures";
MPRINT(GETJ):   db2message = "log_dashboard doesn't exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=log_dashboard8 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=log_dashboard out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
                                                           The SAS System

MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data log_dashboard;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length message $121;
MPRINT(APP):   length path $86;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set log_dashboard log_dashboard8 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist: /clinical/argx-113/cidp/argx-113-1902/biostat/staging/figures/documents/meta/refreshedoutputs.json
_LSAFEXISTS_=0
MPRINT(GETJ):  ;
JSONFILEEXISTS=no
_LSAFEXISTS_=0
MPRINT(GETJ):   data refreshedoutputs8;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1902/biostat/staging/figures";
MPRINT(GETJ):   db2message = "refreshedoutputs doesn't exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=refreshedoutputs8 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=refreshedoutputs out=vold (keep=name type length where=(type=2) rename=(length=lengthold))
noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
                                                           The SAS System

MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data refreshedoutputs;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length msg $17;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set refreshedoutputs refreshedoutputs8 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist: /clinical/argx-113/cidp/argx-113-1902/biostat/staging/figures/documents/meta/report1.json
_LSAFEXISTS_=0
MPRINT(GETJ):  ;
JSONFILEEXISTS=no
_LSAFEXISTS_=0
MPRINT(GETJ):   data report18;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1902/biostat/staging/figures";
MPRINT(GETJ):   db2message = "report1 doesn't exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report18 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report1 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
                                                           The SAS System

MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report1;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report1 report18 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist: /clinical/argx-113/cidp/argx-113-1902/biostat/staging/figures/documents/meta/report2.json
_LSAFEXISTS_=0
MPRINT(GETJ):  ;
JSONFILEEXISTS=no
_LSAFEXISTS_=0
MPRINT(GETJ):   data report28;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1902/biostat/staging/figures";
MPRINT(GETJ):   db2message = "report2 doesn't exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
                                                           The SAS System

MPRINT(APP):   proc contents data=report28 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report2 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report2;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report2 report28 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_adam/documents/meta/log_dashboard.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_adam/document
s/meta/log_dashboard.json
The repository item was synchronized to the workspace: /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_
adam/documents/meta/log_dashboard.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_adam/documents/meta
/log_dashboard.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
                                                           The SAS System

MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_adam/documents
/meta/log_dashboard.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data log_dashboard9;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_adam";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "log_dashboard exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=log_dashboard9 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=log_dashboard out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data log_dashboard;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length message $121;
MPRINT(APP):   length path $97;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set log_dashboard log_dashboard9 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
                                                           The SAS System

The item exists: /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_adam/documents/meta/refreshedoutputs.j
son
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_adam/document
s/meta/refreshedoutputs.json
The repository item was synchronized to the workspace: /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_
adam/documents/meta/refreshedoutputs.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_adam/documents/meta
/refreshedoutputs.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_adam/documents
/meta/refreshedoutputs.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data refreshedoutputs9;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_adam";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "refreshedoutputs exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=refreshedoutputs9 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=refreshedoutputs out=vold (keep=name type length where=(type=2) rename=(length=lengthold))
noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
                                                           The SAS System

MPRINT(APP):   run;
MPRINT(APP):   data refreshedoutputs;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length msg $17;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set refreshedoutputs refreshedoutputs9 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_adam/documents/meta/report1.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_adam/document
s/meta/report1.json
The repository item was synchronized to the workspace: /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_
adam/documents/meta/report1.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_adam/documents/meta
/report1.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_adam/documents
/meta/report1.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data report19;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_adam";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "report1 exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report19 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report1 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
                                                           The SAS System

MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report1;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report1 report19 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_adam/documents/meta/report2.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_adam/document
s/meta/report2.json
The repository item was synchronized to the workspace: /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_
adam/documents/meta/report2.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_adam/documents/meta
/report2.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_adam/documents
/meta/report2.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
                                                           The SAS System

_LSAFEXISTS_=1
MPRINT(GETJ):   data report29;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_adam";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "report2 exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report29 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report2 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report2;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report2 report29 (in=b);
                                                           The SAS System

MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_tlf/documents/meta/log_dashboard.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_tlf/documents
/meta/log_dashboard.json
The repository item was synchronized to the workspace: /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_
tlf/documents/meta/log_dashboard.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_tlf/documents/meta/
log_dashboard.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_tlf/documents/
meta/log_dashboard.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data log_dashboard10;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_tlf";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "log_dashboard exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=log_dashboard10 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=log_dashboard out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
                                                           The SAS System

MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data log_dashboard;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length message $121;
MPRINT(APP):   length path $97;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set log_dashboard log_dashboard10 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_tlf/documents/meta/refreshedoutputs.js
on
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_tlf/documents
/meta/refreshedoutputs.json
The repository item was synchronized to the workspace: /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_
tlf/documents/meta/refreshedoutputs.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_tlf/documents/meta/
refreshedoutputs.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_tlf/documents/
meta/refreshedoutputs.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data refreshedoutputs10;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_tlf";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "refreshedoutputs exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=refreshedoutputs10 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=refreshedoutputs out=vold (keep=name type length where=(type=2) rename=(length=lengthold))
noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
                                                           The SAS System

MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data refreshedoutputs;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length msg $17;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set refreshedoutputs refreshedoutputs10 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_tlf/documents/meta/report1.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_tlf/documents
/meta/report1.json
The repository item was synchronized to the workspace: /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_
tlf/documents/meta/report1.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_tlf/documents/meta/
report1.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_tlf/documents/
meta/report1.json.
MPRINT(GETJ):  ;
                                                           The SAS System

JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data report110;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_tlf";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "report1 exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report110 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report1 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report1;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report1 report110 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
                                                           The SAS System

MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_tlf/documents/meta/report2.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_tlf/documents
/meta/report2.json
The repository item was synchronized to the workspace: /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_
tlf/documents/meta/report2.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_tlf/documents/meta/
report2.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_tlf/documents/
meta/report2.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data report210;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20220809/qc_tlf";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "report2 exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report210 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report2 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
                                                           The SAS System

MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report2;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report2 report210 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist: /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20231206/qc_adam/documents/meta/log_dashbo
ard.json
_LSAFEXISTS_=0
MPRINT(GETJ):  ;
JSONFILEEXISTS=no
_LSAFEXISTS_=0
MPRINT(GETJ):   data log_dashboard11;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20231206/qc_adam";
MPRINT(GETJ):   db2message = "log_dashboard doesn't exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=log_dashboard11 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=log_dashboard out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
                                                           The SAS System

MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data log_dashboard;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length message $121;
MPRINT(APP):   length path $97;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set log_dashboard log_dashboard11 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist: /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20231206/qc_adam/documents/meta/refreshedo
utputs.json
_LSAFEXISTS_=0
MPRINT(GETJ):  ;
JSONFILEEXISTS=no
_LSAFEXISTS_=0
MPRINT(GETJ):   data refreshedoutputs11;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20231206/qc_adam";
MPRINT(GETJ):   db2message = "refreshedoutputs doesn't exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=refreshedoutputs11 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=refreshedoutputs out=vold (keep=name type length where=(type=2) rename=(length=lengthold))
noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
                                                           The SAS System

MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data refreshedoutputs;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length msg $17;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set refreshedoutputs refreshedoutputs11 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist: /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20231206/qc_adam/documents/meta/report1.js
on
_LSAFEXISTS_=0
MPRINT(GETJ):  ;
JSONFILEEXISTS=no
_LSAFEXISTS_=0
MPRINT(GETJ):   data report111;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20231206/qc_adam";
MPRINT(GETJ):   db2message = "report1 doesn't exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report111 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report1 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
                                                           The SAS System

MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report1;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report1 report111 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist: /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20231206/qc_adam/documents/meta/report2.js
on
_LSAFEXISTS_=0
MPRINT(GETJ):  ;
JSONFILEEXISTS=no
_LSAFEXISTS_=0
MPRINT(GETJ):   data report211;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20231206/qc_adam";
MPRINT(GETJ):   db2message = "report2 doesn't exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
                                                           The SAS System

MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report211 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report2 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report2;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report2 report211 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist: /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20231206/qc_tlf/documents/meta/log_dashboa
rd.json
_LSAFEXISTS_=0
MPRINT(GETJ):  ;
JSONFILEEXISTS=no
_LSAFEXISTS_=0
MPRINT(GETJ):   data log_dashboard12;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20231206/qc_tlf";
MPRINT(GETJ):   db2message = "log_dashboard doesn't exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=log_dashboard12 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=log_dashboard out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
                                                           The SAS System

MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data log_dashboard;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length message $121;
MPRINT(APP):   length path $97;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set log_dashboard log_dashboard12 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist: /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20231206/qc_tlf/documents/meta/refreshedou
tputs.json
_LSAFEXISTS_=0
MPRINT(GETJ):  ;
JSONFILEEXISTS=no
_LSAFEXISTS_=0
MPRINT(GETJ):   data refreshedoutputs12;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20231206/qc_tlf";
MPRINT(GETJ):   db2message = "refreshedoutputs doesn't exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=refreshedoutputs12 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=refreshedoutputs out=vold (keep=name type length where=(type=2) rename=(length=lengthold))
noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
                                                           The SAS System

MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data refreshedoutputs;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length msg $17;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set refreshedoutputs refreshedoutputs12 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist: /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20231206/qc_tlf/documents/meta/report1.jso
n
_LSAFEXISTS_=0
MPRINT(GETJ):  ;
JSONFILEEXISTS=no
_LSAFEXISTS_=0
MPRINT(GETJ):   data report112;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20231206/qc_tlf";
MPRINT(GETJ):   db2message = "report1 doesn't exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
                                                           The SAS System

MPRINT(APP):   proc contents data=report112 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report1 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report1;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report1 report112 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist: /clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20231206/qc_tlf/documents/meta/report2.jso
n
_LSAFEXISTS_=0
MPRINT(GETJ):  ;
JSONFILEEXISTS=no
_LSAFEXISTS_=0
MPRINT(GETJ):   data report212;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1902/biostat/staging/ia_testrun_20231206/qc_tlf";
MPRINT(GETJ):   db2message = "report2 doesn't exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
                                                           The SAS System

MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report212 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report2 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report2;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report2 report212 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist: /clinical/argx-113/cidp/argx-113-1902/biostat/staging/patient-profiles/documents/meta/log_dashboard.json
_LSAFEXISTS_=0
                                                           The SAS System

MPRINT(GETJ):  ;
JSONFILEEXISTS=no
_LSAFEXISTS_=0
MPRINT(GETJ):   data log_dashboard13;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1902/biostat/staging/patient-profiles";
MPRINT(GETJ):   db2message = "log_dashboard doesn't exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=log_dashboard13 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=log_dashboard out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data log_dashboard;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length message $121;
MPRINT(APP):   length path $97;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set log_dashboard log_dashboard13 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist: /clinical/argx-113/cidp/argx-113-1902/biostat/staging/patient-profiles/documents/meta/refreshedoutputs.json
_LSAFEXISTS_=0
MPRINT(GETJ):  ;
JSONFILEEXISTS=no
_LSAFEXISTS_=0
MPRINT(GETJ):   data refreshedoutputs13;
                                                           The SAS System

MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1902/biostat/staging/patient-profiles";
MPRINT(GETJ):   db2message = "refreshedoutputs doesn't exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=refreshedoutputs13 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=refreshedoutputs out=vold (keep=name type length where=(type=2) rename=(length=lengthold))
noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data refreshedoutputs;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length msg $17;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set refreshedoutputs refreshedoutputs13 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist: /clinical/argx-113/cidp/argx-113-1902/biostat/staging/patient-profiles/documents/meta/report1.json
_LSAFEXISTS_=0
MPRINT(GETJ):  ;
JSONFILEEXISTS=no
_LSAFEXISTS_=0
MPRINT(GETJ):   data report113;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1902/biostat/staging/patient-profiles";
MPRINT(GETJ):   db2message = "report1 doesn't exists";
MPRINT(GETJ):   run;
                                                           The SAS System

MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report113 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report1 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report1;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report1 report113 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist: /clinical/argx-113/cidp/argx-113-1902/biostat/staging/patient-profiles/documents/meta/report2.json
_LSAFEXISTS_=0
MPRINT(GETJ):  ;
JSONFILEEXISTS=no
_LSAFEXISTS_=0
MPRINT(GETJ):   data report213;
                                                           The SAS System

MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1902/biostat/staging/patient-profiles";
MPRINT(GETJ):   db2message = "report2 doesn't exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report213 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report2 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report2;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report2 report213 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
                                                           The SAS System

MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist: /clinical/argx-113/cidp/argx-113-1902/biostat/staging/testrun1/figures/documents/meta/log_dashboard.json
_LSAFEXISTS_=0
MPRINT(GETJ):  ;
JSONFILEEXISTS=no
_LSAFEXISTS_=0
MPRINT(GETJ):   data log_dashboard14;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1902/biostat/staging/testrun1/figures";
MPRINT(GETJ):   db2message = "log_dashboard doesn't exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=log_dashboard14 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=log_dashboard out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data log_dashboard;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length message $121;
MPRINT(APP):   length path $97;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set log_dashboard log_dashboard14 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
                                                           The SAS System

MPRINT(GETJSONFILE):   options nomprint;
The item does not exist: /clinical/argx-113/cidp/argx-113-1902/biostat/staging/testrun1/figures/documents/meta/refreshedoutputs.json
_LSAFEXISTS_=0
MPRINT(GETJ):  ;
JSONFILEEXISTS=no
_LSAFEXISTS_=0
MPRINT(GETJ):   data refreshedoutputs14;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1902/biostat/staging/testrun1/figures";
MPRINT(GETJ):   db2message = "refreshedoutputs doesn't exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=refreshedoutputs14 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=refreshedoutputs out=vold (keep=name type length where=(type=2) rename=(length=lengthold))
noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data refreshedoutputs;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length msg $17;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set refreshedoutputs refreshedoutputs14 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist: /clinical/argx-113/cidp/argx-113-1902/biostat/staging/testrun1/figures/documents/meta/report1.json
_LSAFEXISTS_=0
                                                           The SAS System

MPRINT(GETJ):  ;
JSONFILEEXISTS=no
_LSAFEXISTS_=0
MPRINT(GETJ):   data report114;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1902/biostat/staging/testrun1/figures";
MPRINT(GETJ):   db2message = "report1 doesn't exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report114 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report1 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report1;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report1 report114 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
                                                           The SAS System

MPRINT(GETJSONFILE):   options nomprint;
The item does not exist: /clinical/argx-113/cidp/argx-113-1902/biostat/staging/testrun1/figures/documents/meta/report2.json
_LSAFEXISTS_=0
MPRINT(GETJ):  ;
JSONFILEEXISTS=no
_LSAFEXISTS_=0
MPRINT(GETJ):   data report214;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-1902/biostat/staging/testrun1/figures";
MPRINT(GETJ):   db2message = "report2 doesn't exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report214 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report2 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
                                                           The SAS System

MPRINT(APP):   data report2;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report2 report214 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist: /clinical/argx-113/cidp/argx-113-9303/biostat/staging/testrun1/figures_ba/documents/meta/log_dashboard.json
_LSAFEXISTS_=0
MPRINT(GETJ):  ;
JSONFILEEXISTS=no
_LSAFEXISTS_=0
MPRINT(GETJ):   data log_dashboard15;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-9303/biostat/staging/testrun1/figures_ba";
MPRINT(GETJ):   db2message = "log_dashboard doesn't exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=log_dashboard15 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=log_dashboard out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data log_dashboard;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length message $121;
MPRINT(APP):   length path $97;
MPRINT(APP):   length reporting_event_path $200;
                                                           The SAS System

MPRINT(APP):   set log_dashboard log_dashboard15 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist: /clinical/argx-113/cidp/argx-113-9303/biostat/staging/testrun1/figures_ba/documents/meta/refreshedoutputs.j
son
_LSAFEXISTS_=0
MPRINT(GETJ):  ;
JSONFILEEXISTS=no
_LSAFEXISTS_=0
MPRINT(GETJ):   data refreshedoutputs15;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-9303/biostat/staging/testrun1/figures_ba";
MPRINT(GETJ):   db2message = "refreshedoutputs doesn't exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=refreshedoutputs15 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=refreshedoutputs out=vold (keep=name type length where=(type=2) rename=(length=lengthold))
noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data refreshedoutputs;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length msg $17;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set refreshedoutputs refreshedoutputs15 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
                                                           The SAS System

MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist: /clinical/argx-113/cidp/argx-113-9303/biostat/staging/testrun1/figures_ba/documents/meta/report1.json
_LSAFEXISTS_=0
MPRINT(GETJ):  ;
JSONFILEEXISTS=no
_LSAFEXISTS_=0
MPRINT(GETJ):   data report115;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-9303/biostat/staging/testrun1/figures_ba";
MPRINT(GETJ):   db2message = "report1 doesn't exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report115 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report1 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report1;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
                                                           The SAS System

MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report1 report115 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist: /clinical/argx-113/cidp/argx-113-9303/biostat/staging/testrun1/figures_ba/documents/meta/report2.json
_LSAFEXISTS_=0
MPRINT(GETJ):  ;
JSONFILEEXISTS=no
_LSAFEXISTS_=0
MPRINT(GETJ):   data report215;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-9303/biostat/staging/testrun1/figures_ba";
MPRINT(GETJ):   db2message = "report2 doesn't exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report215 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report2 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
                                                           The SAS System

MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report2;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report2 report215 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-9303/biostat/staging/testrun1/qc_adam/documents/meta/log_dashboard.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/cidp/argx-113-9303/biostat/staging/testrun1/qc_adam/documents/meta/log_
dashboard.json
The repository item was synchronized to the workspace: /clinical/argx-113/cidp/argx-113-9303/biostat/staging/testrun1/qc_adam/docume
nts/meta/log_dashboard.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/cidp/argx-113-9303/biostat/staging/testrun1/qc_adam/documents/meta/log_dashbo
ard.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/cidp/argx-113-9303/biostat/staging/testrun1/qc_adam/documents/meta/log_d
ashboard.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data log_dashboard16;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-9303/biostat/staging/testrun1/qc_adam";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "log_dashboard exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=log_dashboard16 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=log_dashboard out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
                                                           The SAS System

MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data log_dashboard;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length message $121;
MPRINT(APP):   length path $97;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set log_dashboard log_dashboard16 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-9303/biostat/staging/testrun1/qc_adam/documents/meta/refreshedoutputs.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/cidp/argx-113-9303/biostat/staging/testrun1/qc_adam/documents/meta/refr
eshedoutputs.json
The repository item was synchronized to the workspace: /clinical/argx-113/cidp/argx-113-9303/biostat/staging/testrun1/qc_adam/docume
nts/meta/refreshedoutputs.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/cidp/argx-113-9303/biostat/staging/testrun1/qc_adam/documents/meta/refreshedo
utputs.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/cidp/argx-113-9303/biostat/staging/testrun1/qc_adam/documents/meta/refre
shedoutputs.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
                                                           The SAS System

_LSAFEXISTS_=1
MPRINT(GETJ):   data refreshedoutputs16;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-9303/biostat/staging/testrun1/qc_adam";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "refreshedoutputs exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=refreshedoutputs16 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=refreshedoutputs out=vold (keep=name type length where=(type=2) rename=(length=lengthold))
noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data refreshedoutputs;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length msg $17;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set refreshedoutputs refreshedoutputs16 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-9303/biostat/staging/testrun1/qc_adam/documents/meta/report1.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/cidp/argx-113-9303/biostat/staging/testrun1/qc_adam/documents/meta/repo
rt1.json
                                                           The SAS System

The repository item was synchronized to the workspace: /clinical/argx-113/cidp/argx-113-9303/biostat/staging/testrun1/qc_adam/docume
nts/meta/report1.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/cidp/argx-113-9303/biostat/staging/testrun1/qc_adam/documents/meta/report1.js
on";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/cidp/argx-113-9303/biostat/staging/testrun1/qc_adam/documents/meta/repor
t1.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data report116;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-9303/biostat/staging/testrun1/qc_adam";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "report1 exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report116 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report1 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
                                                           The SAS System

MPRINT(APP):   run;
MPRINT(APP):   data report1;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report1 report116 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/cidp/argx-113-9303/biostat/staging/testrun1/qc_adam/documents/meta/report2.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/cidp/argx-113-9303/biostat/staging/testrun1/qc_adam/documents/meta/repo
rt2.json
The repository item was synchronized to the workspace: /clinical/argx-113/cidp/argx-113-9303/biostat/staging/testrun1/qc_adam/docume
nts/meta/report2.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/cidp/argx-113-9303/biostat/staging/testrun1/qc_adam/documents/meta/report2.js
on";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/cidp/argx-113-9303/biostat/staging/testrun1/qc_adam/documents/meta/repor
t2.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data report216;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/cidp/argx-113-9303/biostat/staging/testrun1/qc_adam";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "report2 exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
                                                           The SAS System

MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report216 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report2 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report2;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report2 report216 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-1801/biostat/staging/patient_profiles/documents/meta/log_dashboard.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/itp/argx-113-1801/biostat/staging/patient_profiles/documents/meta/log_d
ashboard.json
The repository item was synchronized to the workspace: /clinical/argx-113/itp/argx-113-1801/biostat/staging/patient_profiles/documen
ts/meta/log_dashboard.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/itp/argx-113-1801/biostat/staging/patient_profiles/documents/meta/log_dashboa
rd.json";
                                                           The SAS System

MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/itp/argx-113-1801/biostat/staging/patient_profiles/documents/meta/log_da
shboard.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data log_dashboard17;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-1801/biostat/staging/patient_profiles";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "log_dashboard exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=log_dashboard17 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=log_dashboard out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data log_dashboard;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length message $121;
MPRINT(APP):   length path $97;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set log_dashboard log_dashboard17 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
                                                           The SAS System

The item exists: /clinical/argx-113/itp/argx-113-1801/biostat/staging/patient_profiles/documents/meta/refreshedoutputs.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/itp/argx-113-1801/biostat/staging/patient_profiles/documents/meta/refre
shedoutputs.json
The repository item was synchronized to the workspace: /clinical/argx-113/itp/argx-113-1801/biostat/staging/patient_profiles/documen
ts/meta/refreshedoutputs.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/itp/argx-113-1801/biostat/staging/patient_profiles/documents/meta/refreshedou
tputs.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/itp/argx-113-1801/biostat/staging/patient_profiles/documents/meta/refres
hedoutputs.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data refreshedoutputs17;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-1801/biostat/staging/patient_profiles";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "refreshedoutputs exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=refreshedoutputs17 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=refreshedoutputs out=vold (keep=name type length where=(type=2) rename=(length=lengthold))
noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
                                                           The SAS System

MPRINT(APP):   run;
MPRINT(APP):   data refreshedoutputs;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length msg $17;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set refreshedoutputs refreshedoutputs17 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-1801/biostat/staging/patient_profiles/documents/meta/report1.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/itp/argx-113-1801/biostat/staging/patient_profiles/documents/meta/repor
t1.json
The repository item was synchronized to the workspace: /clinical/argx-113/itp/argx-113-1801/biostat/staging/patient_profiles/documen
ts/meta/report1.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/itp/argx-113-1801/biostat/staging/patient_profiles/documents/meta/report1.jso
n";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/itp/argx-113-1801/biostat/staging/patient_profiles/documents/meta/report
1.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data report117;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-1801/biostat/staging/patient_profiles";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "report1 exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report117 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report1 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
                                                           The SAS System

MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report1;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report1 report117 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-1801/biostat/staging/patient_profiles/documents/meta/report2.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/itp/argx-113-1801/biostat/staging/patient_profiles/documents/meta/repor
t2.json
The repository item was synchronized to the workspace: /clinical/argx-113/itp/argx-113-1801/biostat/staging/patient_profiles/documen
ts/meta/report2.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/itp/argx-113-1801/biostat/staging/patient_profiles/documents/meta/report2.jso
n";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/itp/argx-113-1801/biostat/staging/patient_profiles/documents/meta/report
2.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
                                                           The SAS System

_LSAFEXISTS_=1
MPRINT(GETJ):   data report217;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-1801/biostat/staging/patient_profiles";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "report2 exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report217 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report2 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report2;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report2 report217 (in=b);
                                                           The SAS System

MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-1801/biostat/staging/posthoc/documents/meta/log_dashboard.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/itp/argx-113-1801/biostat/staging/posthoc/documents/meta/log_dashboard.
json
The repository item was synchronized to the workspace: /clinical/argx-113/itp/argx-113-1801/biostat/staging/posthoc/documents/meta/l
og_dashboard.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/itp/argx-113-1801/biostat/staging/posthoc/documents/meta/log_dashboard.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/itp/argx-113-1801/biostat/staging/posthoc/documents/meta/log_dashboard.j
son.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data log_dashboard18;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-1801/biostat/staging/posthoc";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "log_dashboard exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=log_dashboard18 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=log_dashboard out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
                                                           The SAS System

MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data log_dashboard;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length message $121;
MPRINT(APP):   length path $97;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set log_dashboard log_dashboard18 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-1801/biostat/staging/posthoc/documents/meta/refreshedoutputs.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/itp/argx-113-1801/biostat/staging/posthoc/documents/meta/refreshedoutpu
ts.json
The repository item was synchronized to the workspace: /clinical/argx-113/itp/argx-113-1801/biostat/staging/posthoc/documents/meta/r
efreshedoutputs.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/itp/argx-113-1801/biostat/staging/posthoc/documents/meta/refreshedoutputs.jso
n";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/itp/argx-113-1801/biostat/staging/posthoc/documents/meta/refreshedoutput
s.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data refreshedoutputs18;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-1801/biostat/staging/posthoc";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "refreshedoutputs exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=refreshedoutputs18 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=refreshedoutputs out=vold (keep=name type length where=(type=2) rename=(length=lengthold))
noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
                                                           The SAS System

MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data refreshedoutputs;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length msg $17;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set refreshedoutputs refreshedoutputs18 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-1801/biostat/staging/posthoc/documents/meta/report1.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/itp/argx-113-1801/biostat/staging/posthoc/documents/meta/report1.json
The repository item was synchronized to the workspace: /clinical/argx-113/itp/argx-113-1801/biostat/staging/posthoc/documents/meta/r
eport1.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/itp/argx-113-1801/biostat/staging/posthoc/documents/meta/report1.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/itp/argx-113-1801/biostat/staging/posthoc/documents/meta/report1.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data report118;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-1801/biostat/staging/posthoc";
                                                           The SAS System

MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "report1 exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report118 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report1 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report1;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report1 report118 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-1801/biostat/staging/posthoc/documents/meta/report2.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
                                                           The SAS System

The item does not exist in the workspace: /clinical/argx-113/itp/argx-113-1801/biostat/staging/posthoc/documents/meta/report2.json
The repository item was synchronized to the workspace: /clinical/argx-113/itp/argx-113-1801/biostat/staging/posthoc/documents/meta/r
eport2.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/itp/argx-113-1801/biostat/staging/posthoc/documents/meta/report2.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/itp/argx-113-1801/biostat/staging/posthoc/documents/meta/report2.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data report218;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-1801/biostat/staging/posthoc";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "report2 exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report218 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report2 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
                                                           The SAS System

MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report2;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report2 report218 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-1803/biostat/staging/patient_profiles/documents/meta/log_dashboard.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/itp/argx-113-1803/biostat/staging/patient_profiles/documents/meta/log_d
ashboard.json
The repository item was synchronized to the workspace: /clinical/argx-113/itp/argx-113-1803/biostat/staging/patient_profiles/documen
ts/meta/log_dashboard.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/itp/argx-113-1803/biostat/staging/patient_profiles/documents/meta/log_dashboa
rd.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/itp/argx-113-1803/biostat/staging/patient_profiles/documents/meta/log_da
shboard.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data log_dashboard19;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-1803/biostat/staging/patient_profiles";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "log_dashboard exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=log_dashboard19 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=log_dashboard out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
                                                           The SAS System

MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data log_dashboard;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length message $121;
MPRINT(APP):   length path $97;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set log_dashboard log_dashboard19 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-1803/biostat/staging/patient_profiles/documents/meta/refreshedoutputs.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/itp/argx-113-1803/biostat/staging/patient_profiles/documents/meta/refre
shedoutputs.json
The repository item was synchronized to the workspace: /clinical/argx-113/itp/argx-113-1803/biostat/staging/patient_profiles/documen
ts/meta/refreshedoutputs.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/itp/argx-113-1803/biostat/staging/patient_profiles/documents/meta/refreshedou
tputs.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/itp/argx-113-1803/biostat/staging/patient_profiles/documents/meta/refres
hedoutputs.json.
MPRINT(GETJ):  ;
                                                           The SAS System

JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data refreshedoutputs19;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-1803/biostat/staging/patient_profiles";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "refreshedoutputs exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=refreshedoutputs19 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=refreshedoutputs out=vold (keep=name type length where=(type=2) rename=(length=lengthold))
noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data refreshedoutputs;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length msg $17;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set refreshedoutputs refreshedoutputs19 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-1803/biostat/staging/patient_profiles/documents/meta/report1.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/itp/argx-113-1803/biostat/staging/patient_profiles/documents/meta/repor
                                                           The SAS System

t1.json
The repository item was synchronized to the workspace: /clinical/argx-113/itp/argx-113-1803/biostat/staging/patient_profiles/documen
ts/meta/report1.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/itp/argx-113-1803/biostat/staging/patient_profiles/documents/meta/report1.jso
n";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/itp/argx-113-1803/biostat/staging/patient_profiles/documents/meta/report
1.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data report119;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-1803/biostat/staging/patient_profiles";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "report1 exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report119 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report1 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
                                                           The SAS System

MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report1;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report1 report119 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-1803/biostat/staging/patient_profiles/documents/meta/report2.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/itp/argx-113-1803/biostat/staging/patient_profiles/documents/meta/repor
t2.json
The repository item was synchronized to the workspace: /clinical/argx-113/itp/argx-113-1803/biostat/staging/patient_profiles/documen
ts/meta/report2.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/itp/argx-113-1803/biostat/staging/patient_profiles/documents/meta/report2.jso
n";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/itp/argx-113-1803/biostat/staging/patient_profiles/documents/meta/report
2.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data report219;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-1803/biostat/staging/patient_profiles";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "report2 exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
                                                           The SAS System

MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report219 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report2 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report2;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report2 report219 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-1803/biostat/staging/posthoc/documents/meta/log_dashboard.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/itp/argx-113-1803/biostat/staging/posthoc/documents/meta/log_dashboard.
json
The repository item was synchronized to the workspace: /clinical/argx-113/itp/argx-113-1803/biostat/staging/posthoc/documents/meta/l
og_dashboard.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
                                                           The SAS System

"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/itp/argx-113-1803/biostat/staging/posthoc/documents/meta/log_dashboard.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/itp/argx-113-1803/biostat/staging/posthoc/documents/meta/log_dashboard.j
son.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data log_dashboard20;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-1803/biostat/staging/posthoc";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "log_dashboard exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=log_dashboard20 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=log_dashboard out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data log_dashboard;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length message $121;
MPRINT(APP):   length path $97;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set log_dashboard log_dashboard20 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
                                                           The SAS System

MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-1803/biostat/staging/posthoc/documents/meta/refreshedoutputs.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/itp/argx-113-1803/biostat/staging/posthoc/documents/meta/refreshedoutpu
ts.json
The repository item was synchronized to the workspace: /clinical/argx-113/itp/argx-113-1803/biostat/staging/posthoc/documents/meta/r
efreshedoutputs.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/itp/argx-113-1803/biostat/staging/posthoc/documents/meta/refreshedoutputs.jso
n";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/itp/argx-113-1803/biostat/staging/posthoc/documents/meta/refreshedoutput
s.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data refreshedoutputs20;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-1803/biostat/staging/posthoc";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "refreshedoutputs exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=refreshedoutputs20 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=refreshedoutputs out=vold (keep=name type length where=(type=2) rename=(length=lengthold))
noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
                                                           The SAS System

MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data refreshedoutputs;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length msg $17;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set refreshedoutputs refreshedoutputs20 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-1803/biostat/staging/posthoc/documents/meta/report1.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/itp/argx-113-1803/biostat/staging/posthoc/documents/meta/report1.json
The repository item was synchronized to the workspace: /clinical/argx-113/itp/argx-113-1803/biostat/staging/posthoc/documents/meta/r
eport1.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/itp/argx-113-1803/biostat/staging/posthoc/documents/meta/report1.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/itp/argx-113-1803/biostat/staging/posthoc/documents/meta/report1.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data report120;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-1803/biostat/staging/posthoc";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "report1 exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report120 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report1 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
                                                           The SAS System

MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report1;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report1 report120 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-1803/biostat/staging/posthoc/documents/meta/report2.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/itp/argx-113-1803/biostat/staging/posthoc/documents/meta/report2.json
The repository item was synchronized to the workspace: /clinical/argx-113/itp/argx-113-1803/biostat/staging/posthoc/documents/meta/r
eport2.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/itp/argx-113-1803/biostat/staging/posthoc/documents/meta/report2.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/itp/argx-113-1803/biostat/staging/posthoc/documents/meta/report2.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data report220;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-1803/biostat/staging/posthoc";
MPRINT(GETJ):   set root;
                                                           The SAS System

MPRINT(GETJ):   db2message = "report2 exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report220 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report2 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report2;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report2 report220 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
                                                           The SAS System

MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-2004/biostat/staging/adhoc/documents/meta/log_dashboard.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/itp/argx-113-2004/biostat/staging/adhoc/documents/meta/log_dashboard.js
on
The repository item was synchronized to the workspace: /clinical/argx-113/itp/argx-113-2004/biostat/staging/adhoc/documents/meta/log
_dashboard.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/itp/argx-113-2004/biostat/staging/adhoc/documents/meta/log_dashboard.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/itp/argx-113-2004/biostat/staging/adhoc/documents/meta/log_dashboard.jso
n.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data log_dashboard21;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-2004/biostat/staging/adhoc";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "log_dashboard exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=log_dashboard21 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=log_dashboard out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
                                                           The SAS System

MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data log_dashboard;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length message $121;
MPRINT(APP):   length path $97;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set log_dashboard log_dashboard21 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-2004/biostat/staging/adhoc/documents/meta/refreshedoutputs.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/itp/argx-113-2004/biostat/staging/adhoc/documents/meta/refreshedoutputs
.json
The repository item was synchronized to the workspace: /clinical/argx-113/itp/argx-113-2004/biostat/staging/adhoc/documents/meta/ref
reshedoutputs.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/itp/argx-113-2004/biostat/staging/adhoc/documents/meta/refreshedoutputs.json"
;
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/itp/argx-113-2004/biostat/staging/adhoc/documents/meta/refreshedoutputs.
json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data refreshedoutputs21;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-2004/biostat/staging/adhoc";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "refreshedoutputs exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=refreshedoutputs21 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=refreshedoutputs out=vold (keep=name type length where=(type=2) rename=(length=lengthold))
noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
                                                           The SAS System

MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data refreshedoutputs;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length msg $17;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set refreshedoutputs refreshedoutputs21 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-2004/biostat/staging/adhoc/documents/meta/report1.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/itp/argx-113-2004/biostat/staging/adhoc/documents/meta/report1.json
The repository item was synchronized to the workspace: /clinical/argx-113/itp/argx-113-2004/biostat/staging/adhoc/documents/meta/rep
ort1.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/itp/argx-113-2004/biostat/staging/adhoc/documents/meta/report1.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/itp/argx-113-2004/biostat/staging/adhoc/documents/meta/report1.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data report121;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-2004/biostat/staging/adhoc";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "report1 exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
                                                           The SAS System

MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report121 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report1 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report1;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report1 report121 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-2004/biostat/staging/adhoc/documents/meta/report2.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/itp/argx-113-2004/biostat/staging/adhoc/documents/meta/report2.json
The repository item was synchronized to the workspace: /clinical/argx-113/itp/argx-113-2004/biostat/staging/adhoc/documents/meta/rep
                                                           The SAS System

ort2.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/itp/argx-113-2004/biostat/staging/adhoc/documents/meta/report2.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/itp/argx-113-2004/biostat/staging/adhoc/documents/meta/report2.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data report221;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-2004/biostat/staging/adhoc";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "report2 exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report221 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report2 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
                                                           The SAS System

MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report2;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report2 report221 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-2004/biostat/staging/patient_profiles/documents/meta/log_dashboard.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/itp/argx-113-2004/biostat/staging/patient_profiles/documents/meta/log_d
ashboard.json
The repository item was synchronized to the workspace: /clinical/argx-113/itp/argx-113-2004/biostat/staging/patient_profiles/documen
ts/meta/log_dashboard.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/itp/argx-113-2004/biostat/staging/patient_profiles/documents/meta/log_dashboa
rd.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/itp/argx-113-2004/biostat/staging/patient_profiles/documents/meta/log_da
shboard.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data log_dashboard22;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-2004/biostat/staging/patient_profiles";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "log_dashboard exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=log_dashboard22 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=log_dashboard out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
                                                           The SAS System

MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data log_dashboard;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length message $121;
MPRINT(APP):   length path $97;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set log_dashboard log_dashboard22 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-2004/biostat/staging/patient_profiles/documents/meta/refreshedoutputs.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/itp/argx-113-2004/biostat/staging/patient_profiles/documents/meta/refre
shedoutputs.json
The repository item was synchronized to the workspace: /clinical/argx-113/itp/argx-113-2004/biostat/staging/patient_profiles/documen
ts/meta/refreshedoutputs.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/itp/argx-113-2004/biostat/staging/patient_profiles/documents/meta/refreshedou
tputs.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/itp/argx-113-2004/biostat/staging/patient_profiles/documents/meta/refres
hedoutputs.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data refreshedoutputs22;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
                                                           The SAS System

MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-2004/biostat/staging/patient_profiles";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "refreshedoutputs exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=refreshedoutputs22 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=refreshedoutputs out=vold (keep=name type length where=(type=2) rename=(length=lengthold))
noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data refreshedoutputs;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length msg $17;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set refreshedoutputs refreshedoutputs22 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-2004/biostat/staging/patient_profiles/documents/meta/report1.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/itp/argx-113-2004/biostat/staging/patient_profiles/documents/meta/repor
t1.json
The repository item was synchronized to the workspace: /clinical/argx-113/itp/argx-113-2004/biostat/staging/patient_profiles/documen
ts/meta/report1.json.
MPRINT(GETJSONFILE):  ;
                                                           The SAS System

MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/itp/argx-113-2004/biostat/staging/patient_profiles/documents/meta/report1.jso
n";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/itp/argx-113-2004/biostat/staging/patient_profiles/documents/meta/report
1.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data report122;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-2004/biostat/staging/patient_profiles";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "report1 exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report122 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report1 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report1;
MPRINT(APP):   length db2message $200;
                                                           The SAS System

MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report1 report122 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-2004/biostat/staging/patient_profiles/documents/meta/report2.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/itp/argx-113-2004/biostat/staging/patient_profiles/documents/meta/repor
t2.json
The repository item was synchronized to the workspace: /clinical/argx-113/itp/argx-113-2004/biostat/staging/patient_profiles/documen
ts/meta/report2.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/itp/argx-113-2004/biostat/staging/patient_profiles/documents/meta/report2.jso
n";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/itp/argx-113-2004/biostat/staging/patient_profiles/documents/meta/report
2.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data report222;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-2004/biostat/staging/patient_profiles";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "report2 exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report222 out=vnew (keep=name type length where=(type=2)) noprint;
                                                           The SAS System

MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report2 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report2;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report2 report222 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/qc_adam/documents/meta/log_dashboard.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/qc_adam/documents/meta/log_d
ashboard.json
The repository item was synchronized to the workspace: /clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/qc_adam/documen
ts/meta/log_dashboard.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/qc_adam/documents/meta/log_dashboa
rd.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
                                                           The SAS System

The item was deleted from the workspace: /clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/qc_adam/documents/meta/log_da
shboard.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data log_dashboard23;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/qc_adam";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "log_dashboard exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=log_dashboard23 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=log_dashboard out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data log_dashboard;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length message $121;
MPRINT(APP):   length path $97;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set log_dashboard log_dashboard23 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/qc_adam/documents/meta/refreshedoutputs.json
_LSAFEXISTS_=1
                                                           The SAS System

MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/qc_adam/documents/meta/refre
shedoutputs.json
The repository item was synchronized to the workspace: /clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/qc_adam/documen
ts/meta/refreshedoutputs.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/qc_adam/documents/meta/refreshedou
tputs.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/qc_adam/documents/meta/refres
hedoutputs.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data refreshedoutputs23;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/qc_adam";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "refreshedoutputs exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=refreshedoutputs23 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=refreshedoutputs out=vold (keep=name type length where=(type=2) rename=(length=lengthold))
noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data refreshedoutputs;
MPRINT(APP):   length db2message $200;
                                                           The SAS System

MPRINT(APP):   length msg $17;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set refreshedoutputs refreshedoutputs23 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/qc_adam/documents/meta/report1.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/qc_adam/documents/meta/repor
t1.json
The repository item was synchronized to the workspace: /clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/qc_adam/documen
ts/meta/report1.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/qc_adam/documents/meta/report1.jso
n";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/qc_adam/documents/meta/report
1.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data report123;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/qc_adam";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "report1 exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report123 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report1 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
                                                           The SAS System

MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report1;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report1 report123 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/qc_adam/documents/meta/report2.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/qc_adam/documents/meta/repor
t2.json
The repository item was synchronized to the workspace: /clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/qc_adam/documen
ts/meta/report2.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/qc_adam/documents/meta/report2.jso
n";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/qc_adam/documents/meta/report
2.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data report223;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
                                                           The SAS System

MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/qc_adam";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "report2 exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report223 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report2 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report2;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report2 report223 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
                                                           The SAS System

MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/qc_tlf/documents/meta/log_dashboard.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item exists in the workspace: /clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/qc_tlf/documents/meta/log_dashboard.
json
The repository item was synchronized to the workspace: /clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/qc_tlf/document
s/meta/log_dashboard.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/qc_tlf/documents/meta/log_dashboar
d.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data log_dashboard24;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/qc_tlf";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "log_dashboard exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=log_dashboard24 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=log_dashboard out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
                                                           The SAS System

MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data log_dashboard;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length message $121;
MPRINT(APP):   length path $97;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set log_dashboard log_dashboard24 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/qc_tlf/documents/meta/refreshedoutputs.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item exists in the workspace: /clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/qc_tlf/documents/meta/refreshedoutpu
ts.json
The repository item was synchronized to the workspace: /clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/qc_tlf/document
s/meta/refreshedoutputs.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/qc_tlf/documents/meta/refreshedout
puts.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data refreshedoutputs24;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/qc_tlf";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "refreshedoutputs exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=refreshedoutputs24 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=refreshedoutputs out=vold (keep=name type length where=(type=2) rename=(length=lengthold))
noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
                                                           The SAS System

MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data refreshedoutputs;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length msg $17;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set refreshedoutputs refreshedoutputs24 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/qc_tlf/documents/meta/report1.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item exists in the workspace: /clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/qc_tlf/documents/meta/report1.json
The repository item was synchronized to the workspace: /clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/qc_tlf/document
s/meta/report1.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/qc_tlf/documents/meta/report1.json
";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data report124;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/qc_tlf";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "report1 exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
                                                           The SAS System

MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report124 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report1 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report1;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report1 report124 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/qc_tlf/documents/meta/report2.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item exists in the workspace: /clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/qc_tlf/documents/meta/report2.json
The repository item was synchronized to the workspace: /clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/qc_tlf/document
s/meta/report2.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/qc_tlf/documents/meta/report2.json
";
                                                           The SAS System

MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data report224;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-2004/biostat/staging/testrun1/qc_tlf";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "report2 exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report224 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report2 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
                                                           The SAS System

MPRINT(APP):   data report2;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report2 report224 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-2005/biostat/staging/testrun1/qc_adam/documents/meta/log_dashboard.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/itp/argx-113-2005/biostat/staging/testrun1/qc_adam/documents/meta/log_d
ashboard.json
The repository item was synchronized to the workspace: /clinical/argx-113/itp/argx-113-2005/biostat/staging/testrun1/qc_adam/documen
ts/meta/log_dashboard.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/itp/argx-113-2005/biostat/staging/testrun1/qc_adam/documents/meta/log_dashboa
rd.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/itp/argx-113-2005/biostat/staging/testrun1/qc_adam/documents/meta/log_da
shboard.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data log_dashboard25;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-2005/biostat/staging/testrun1/qc_adam";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "log_dashboard exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=log_dashboard25 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=log_dashboard out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
                                                           The SAS System

MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data log_dashboard;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length message $121;
MPRINT(APP):   length path $97;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set log_dashboard log_dashboard25 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-2005/biostat/staging/testrun1/qc_adam/documents/meta/refreshedoutputs.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/itp/argx-113-2005/biostat/staging/testrun1/qc_adam/documents/meta/refre
shedoutputs.json
The repository item was synchronized to the workspace: /clinical/argx-113/itp/argx-113-2005/biostat/staging/testrun1/qc_adam/documen
ts/meta/refreshedoutputs.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/itp/argx-113-2005/biostat/staging/testrun1/qc_adam/documents/meta/refreshedou
tputs.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/itp/argx-113-2005/biostat/staging/testrun1/qc_adam/documents/meta/refres
hedoutputs.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data refreshedoutputs25;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-2005/biostat/staging/testrun1/qc_adam";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "refreshedoutputs exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=refreshedoutputs25 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
                                                           The SAS System

MPRINT(APP):   proc contents data=refreshedoutputs out=vold (keep=name type length where=(type=2) rename=(length=lengthold))
noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data refreshedoutputs;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length msg $17;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set refreshedoutputs refreshedoutputs25 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-2005/biostat/staging/testrun1/qc_adam/documents/meta/report1.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/itp/argx-113-2005/biostat/staging/testrun1/qc_adam/documents/meta/repor
t1.json
The repository item was synchronized to the workspace: /clinical/argx-113/itp/argx-113-2005/biostat/staging/testrun1/qc_adam/documen
ts/meta/report1.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/itp/argx-113-2005/biostat/staging/testrun1/qc_adam/documents/meta/report1.jso
n";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
                                                           The SAS System

The item was deleted from the workspace: /clinical/argx-113/itp/argx-113-2005/biostat/staging/testrun1/qc_adam/documents/meta/report
1.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data report125;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-2005/biostat/staging/testrun1/qc_adam";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "report1 exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report125 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report1 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report1;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report1 report125 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
                                                           The SAS System

MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-2005/biostat/staging/testrun1/qc_adam/documents/meta/report2.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/itp/argx-113-2005/biostat/staging/testrun1/qc_adam/documents/meta/repor
t2.json
The repository item was synchronized to the workspace: /clinical/argx-113/itp/argx-113-2005/biostat/staging/testrun1/qc_adam/documen
ts/meta/report2.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/itp/argx-113-2005/biostat/staging/testrun1/qc_adam/documents/meta/report2.jso
n";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/itp/argx-113-2005/biostat/staging/testrun1/qc_adam/documents/meta/report
2.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data report225;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-2005/biostat/staging/testrun1/qc_adam";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "report2 exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report225 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report2 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
                                                           The SAS System

MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report2;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report2 report225 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-9101/biostat/staging/posthoc/documents/meta/log_dashboard.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/itp/argx-113-9101/biostat/staging/posthoc/documents/meta/log_dashboard.
json
The repository item was synchronized to the workspace: /clinical/argx-113/itp/argx-113-9101/biostat/staging/posthoc/documents/meta/l
og_dashboard.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/itp/argx-113-9101/biostat/staging/posthoc/documents/meta/log_dashboard.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/itp/argx-113-9101/biostat/staging/posthoc/documents/meta/log_dashboard.j
son.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data log_dashboard26;
                                                           The SAS System

MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-9101/biostat/staging/posthoc";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "log_dashboard exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=log_dashboard26 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=log_dashboard out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data log_dashboard;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length message $121;
MPRINT(APP):   length path $97;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set log_dashboard log_dashboard26 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-9101/biostat/staging/posthoc/documents/meta/refreshedoutputs.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/itp/argx-113-9101/biostat/staging/posthoc/documents/meta/refreshedoutpu
ts.json
The repository item was synchronized to the workspace: /clinical/argx-113/itp/argx-113-9101/biostat/staging/posthoc/documents/meta/r
                                                           The SAS System

efreshedoutputs.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/itp/argx-113-9101/biostat/staging/posthoc/documents/meta/refreshedoutputs.jso
n";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/itp/argx-113-9101/biostat/staging/posthoc/documents/meta/refreshedoutput
s.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data refreshedoutputs26;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-9101/biostat/staging/posthoc";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "refreshedoutputs exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=refreshedoutputs26 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=refreshedoutputs out=vold (keep=name type length where=(type=2) rename=(length=lengthold))
noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data refreshedoutputs;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length msg $17;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set refreshedoutputs refreshedoutputs26 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
                                                           The SAS System

MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-9101/biostat/staging/posthoc/documents/meta/report1.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/itp/argx-113-9101/biostat/staging/posthoc/documents/meta/report1.json
The repository item was synchronized to the workspace: /clinical/argx-113/itp/argx-113-9101/biostat/staging/posthoc/documents/meta/r
eport1.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/itp/argx-113-9101/biostat/staging/posthoc/documents/meta/report1.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/itp/argx-113-9101/biostat/staging/posthoc/documents/meta/report1.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data report126;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-9101/biostat/staging/posthoc";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "report1 exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report126 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report1 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
                                                           The SAS System

MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report1;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report1 report126 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/itp/argx-113-9101/biostat/staging/posthoc/documents/meta/report2.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/itp/argx-113-9101/biostat/staging/posthoc/documents/meta/report2.json
The repository item was synchronized to the workspace: /clinical/argx-113/itp/argx-113-9101/biostat/staging/posthoc/documents/meta/r
eport2.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/itp/argx-113-9101/biostat/staging/posthoc/documents/meta/report2.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/itp/argx-113-9101/biostat/staging/posthoc/documents/meta/report2.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data report226;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/itp/argx-113-9101/biostat/staging/posthoc";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "report2 exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
                                                           The SAS System

MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report226 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report2 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report2;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report2 report226 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-1602/biostat/staging/fda_irr/documents/meta/log_dashboard.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/mg/argx-113-1602/biostat/staging/fda_irr/documents/meta/log_dashboard.j
                                                           The SAS System

son
The repository item was synchronized to the workspace: /clinical/argx-113/mg/argx-113-1602/biostat/staging/fda_irr/documents/meta/lo
g_dashboard.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/mg/argx-113-1602/biostat/staging/fda_irr/documents/meta/log_dashboard.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/mg/argx-113-1602/biostat/staging/fda_irr/documents/meta/log_dashboard.js
on.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data log_dashboard27;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-1602/biostat/staging/fda_irr";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "log_dashboard exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=log_dashboard27 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=log_dashboard out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data log_dashboard;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length message $121;
MPRINT(APP):   length path $97;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set log_dashboard log_dashboard27 (in=b);
MPRINT(APP):   if b then do;
                                                           The SAS System

MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-1602/biostat/staging/fda_irr/documents/meta/refreshedoutputs.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/mg/argx-113-1602/biostat/staging/fda_irr/documents/meta/refreshedoutput
s.json
The repository item was synchronized to the workspace: /clinical/argx-113/mg/argx-113-1602/biostat/staging/fda_irr/documents/meta/re
freshedoutputs.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/mg/argx-113-1602/biostat/staging/fda_irr/documents/meta/refreshedoutputs.json
";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/mg/argx-113-1602/biostat/staging/fda_irr/documents/meta/refreshedoutputs
.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data refreshedoutputs27;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-1602/biostat/staging/fda_irr";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "refreshedoutputs exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=refreshedoutputs27 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=refreshedoutputs out=vold (keep=name type length where=(type=2) rename=(length=lengthold))
noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
                                                           The SAS System

MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data refreshedoutputs;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length msg $17;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set refreshedoutputs refreshedoutputs27 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-1602/biostat/staging/fda_irr/documents/meta/report1.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/mg/argx-113-1602/biostat/staging/fda_irr/documents/meta/report1.json
The repository item was synchronized to the workspace: /clinical/argx-113/mg/argx-113-1602/biostat/staging/fda_irr/documents/meta/re
port1.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/mg/argx-113-1602/biostat/staging/fda_irr/documents/meta/report1.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/mg/argx-113-1602/biostat/staging/fda_irr/documents/meta/report1.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data report127;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-1602/biostat/staging/fda_irr";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "report1 exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report127 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
                                                           The SAS System

MPRINT(APP):   proc contents data=report1 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report1;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report1 report127 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-1602/biostat/staging/fda_irr/documents/meta/report2.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/mg/argx-113-1602/biostat/staging/fda_irr/documents/meta/report2.json
The repository item was synchronized to the workspace: /clinical/argx-113/mg/argx-113-1602/biostat/staging/fda_irr/documents/meta/re
port2.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/mg/argx-113-1602/biostat/staging/fda_irr/documents/meta/report2.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/mg/argx-113-1602/biostat/staging/fda_irr/documents/meta/report2.json.
MPRINT(GETJ):  ;
                                                           The SAS System

JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data report227;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-1602/biostat/staging/fda_irr";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "report2 exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report227 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report2 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report2;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
                                                           The SAS System

MPRINT(APP):   set report2 report227 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-1704/biostat/staging/fda_irr/documents/meta/log_dashboard.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/mg/argx-113-1704/biostat/staging/fda_irr/documents/meta/log_dashboard.j
son
The repository item was synchronized to the workspace: /clinical/argx-113/mg/argx-113-1704/biostat/staging/fda_irr/documents/meta/lo
g_dashboard.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/mg/argx-113-1704/biostat/staging/fda_irr/documents/meta/log_dashboard.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/mg/argx-113-1704/biostat/staging/fda_irr/documents/meta/log_dashboard.js
on.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data log_dashboard28;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-1704/biostat/staging/fda_irr";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "log_dashboard exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=log_dashboard28 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=log_dashboard out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
                                                           The SAS System

MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data log_dashboard;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length message $121;
MPRINT(APP):   length path $97;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set log_dashboard log_dashboard28 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-1704/biostat/staging/fda_irr/documents/meta/refreshedoutputs.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/mg/argx-113-1704/biostat/staging/fda_irr/documents/meta/refreshedoutput
s.json
The repository item was synchronized to the workspace: /clinical/argx-113/mg/argx-113-1704/biostat/staging/fda_irr/documents/meta/re
freshedoutputs.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/mg/argx-113-1704/biostat/staging/fda_irr/documents/meta/refreshedoutputs.json
";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/mg/argx-113-1704/biostat/staging/fda_irr/documents/meta/refreshedoutputs
.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data refreshedoutputs28;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-1704/biostat/staging/fda_irr";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "refreshedoutputs exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=refreshedoutputs28 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=refreshedoutputs out=vold (keep=name type length where=(type=2) rename=(length=lengthold))
noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
                                                           The SAS System

MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data refreshedoutputs;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length msg $17;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set refreshedoutputs refreshedoutputs28 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-1704/biostat/staging/fda_irr/documents/meta/report1.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/mg/argx-113-1704/biostat/staging/fda_irr/documents/meta/report1.json
The repository item was synchronized to the workspace: /clinical/argx-113/mg/argx-113-1704/biostat/staging/fda_irr/documents/meta/re
port1.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/mg/argx-113-1704/biostat/staging/fda_irr/documents/meta/report1.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/mg/argx-113-1704/biostat/staging/fda_irr/documents/meta/report1.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data report128;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
                                                           The SAS System

MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-1704/biostat/staging/fda_irr";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "report1 exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report128 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report1 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report1;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report1 report128 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-1704/biostat/staging/fda_irr/documents/meta/report2.json
_LSAFEXISTS_=1
                                                           The SAS System

MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/mg/argx-113-1704/biostat/staging/fda_irr/documents/meta/report2.json
The repository item was synchronized to the workspace: /clinical/argx-113/mg/argx-113-1704/biostat/staging/fda_irr/documents/meta/re
port2.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/mg/argx-113-1704/biostat/staging/fda_irr/documents/meta/report2.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/mg/argx-113-1704/biostat/staging/fda_irr/documents/meta/report2.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data report228;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-1704/biostat/staging/fda_irr";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "report2 exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report228 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report2 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
                                                           The SAS System

MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report2;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report2 report228 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-1705/biostat/staging/fda_irr/documents/meta/log_dashboard.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/mg/argx-113-1705/biostat/staging/fda_irr/documents/meta/log_dashboard.j
son
The repository item was synchronized to the workspace: /clinical/argx-113/mg/argx-113-1705/biostat/staging/fda_irr/documents/meta/lo
g_dashboard.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/mg/argx-113-1705/biostat/staging/fda_irr/documents/meta/log_dashboard.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/mg/argx-113-1705/biostat/staging/fda_irr/documents/meta/log_dashboard.js
on.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data log_dashboard29;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-1705/biostat/staging/fda_irr";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "log_dashboard exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=log_dashboard29 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=log_dashboard out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
                                                           The SAS System

MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data log_dashboard;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length message $121;
MPRINT(APP):   length path $97;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set log_dashboard log_dashboard29 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-1705/biostat/staging/fda_irr/documents/meta/refreshedoutputs.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/mg/argx-113-1705/biostat/staging/fda_irr/documents/meta/refreshedoutput
s.json
The repository item was synchronized to the workspace: /clinical/argx-113/mg/argx-113-1705/biostat/staging/fda_irr/documents/meta/re
freshedoutputs.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/mg/argx-113-1705/biostat/staging/fda_irr/documents/meta/refreshedoutputs.json
";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/mg/argx-113-1705/biostat/staging/fda_irr/documents/meta/refreshedoutputs
.json.
MPRINT(GETJ):  ;
                                                           The SAS System

JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data refreshedoutputs29;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-1705/biostat/staging/fda_irr";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "refreshedoutputs exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=refreshedoutputs29 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=refreshedoutputs out=vold (keep=name type length where=(type=2) rename=(length=lengthold))
noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data refreshedoutputs;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length msg $17;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set refreshedoutputs refreshedoutputs29 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-1705/biostat/staging/fda_irr/documents/meta/report1.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/mg/argx-113-1705/biostat/staging/fda_irr/documents/meta/report1.json
                                                           The SAS System

The repository item was synchronized to the workspace: /clinical/argx-113/mg/argx-113-1705/biostat/staging/fda_irr/documents/meta/re
port1.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/mg/argx-113-1705/biostat/staging/fda_irr/documents/meta/report1.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/mg/argx-113-1705/biostat/staging/fda_irr/documents/meta/report1.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data report129;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-1705/biostat/staging/fda_irr";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "report1 exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report129 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report1 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report1;
                                                           The SAS System

MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report1 report129 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-1705/biostat/staging/fda_irr/documents/meta/report2.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/mg/argx-113-1705/biostat/staging/fda_irr/documents/meta/report2.json
The repository item was synchronized to the workspace: /clinical/argx-113/mg/argx-113-1705/biostat/staging/fda_irr/documents/meta/re
port2.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/mg/argx-113-1705/biostat/staging/fda_irr/documents/meta/report2.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/mg/argx-113-1705/biostat/staging/fda_irr/documents/meta/report2.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data report229;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-1705/biostat/staging/fda_irr";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "report2 exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report229 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report2 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
                                                           The SAS System

MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report2;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report2 report229 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-1705/biostat/staging/final/qc_tlf/documents/meta/log_dashboard.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/mg/argx-113-1705/biostat/staging/final/qc_tlf/documents/meta/log_dashbo
ard.json
The repository item was synchronized to the workspace: /clinical/argx-113/mg/argx-113-1705/biostat/staging/final/qc_tlf/documents/me
ta/log_dashboard.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/mg/argx-113-1705/biostat/staging/final/qc_tlf/documents/meta/log_dashboard.js
on";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
                                                           The SAS System

The item was deleted from the workspace: /clinical/argx-113/mg/argx-113-1705/biostat/staging/final/qc_tlf/documents/meta/log_dashboa
rd.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data log_dashboard30;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-1705/biostat/staging/final/qc_tlf";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "log_dashboard exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=log_dashboard30 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=log_dashboard out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data log_dashboard;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length message $121;
MPRINT(APP):   length path $97;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set log_dashboard log_dashboard30 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-1705/biostat/staging/final/qc_tlf/documents/meta/refreshedoutputs.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
                                                           The SAS System

The item does not exist in the workspace: /clinical/argx-113/mg/argx-113-1705/biostat/staging/final/qc_tlf/documents/meta/refreshedo
utputs.json
The repository item was synchronized to the workspace: /clinical/argx-113/mg/argx-113-1705/biostat/staging/final/qc_tlf/documents/me
ta/refreshedoutputs.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/mg/argx-113-1705/biostat/staging/final/qc_tlf/documents/meta/refreshedoutputs
.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/mg/argx-113-1705/biostat/staging/final/qc_tlf/documents/meta/refreshedou
tputs.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data refreshedoutputs30;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-1705/biostat/staging/final/qc_tlf";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "refreshedoutputs exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=refreshedoutputs30 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=refreshedoutputs out=vold (keep=name type length where=(type=2) rename=(length=lengthold))
noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data refreshedoutputs;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length msg $17;
                                                           The SAS System

MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set refreshedoutputs refreshedoutputs30 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-1705/biostat/staging/final/qc_tlf/documents/meta/report1.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/mg/argx-113-1705/biostat/staging/final/qc_tlf/documents/meta/report1.js
on
The repository item was synchronized to the workspace: /clinical/argx-113/mg/argx-113-1705/biostat/staging/final/qc_tlf/documents/me
ta/report1.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/mg/argx-113-1705/biostat/staging/final/qc_tlf/documents/meta/report1.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/mg/argx-113-1705/biostat/staging/final/qc_tlf/documents/meta/report1.jso
n.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data report130;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-1705/biostat/staging/final/qc_tlf";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "report1 exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report130 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report1 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
                                                           The SAS System

MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report1;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report1 report130 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-1705/biostat/staging/final/qc_tlf/documents/meta/report2.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/mg/argx-113-1705/biostat/staging/final/qc_tlf/documents/meta/report2.js
on
The repository item was synchronized to the workspace: /clinical/argx-113/mg/argx-113-1705/biostat/staging/final/qc_tlf/documents/me
ta/report2.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/mg/argx-113-1705/biostat/staging/final/qc_tlf/documents/meta/report2.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/mg/argx-113-1705/biostat/staging/final/qc_tlf/documents/meta/report2.jso
n.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data report230;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-1705/biostat/staging/final/qc_tlf";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "report2 exists";
                                                           The SAS System

MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report230 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report2 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report2;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report2 report230 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
                                                           The SAS System

JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-1705/biostat/staging/final_posthoc/documents/meta/log_dashboard.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/mg/argx-113-1705/biostat/staging/final_posthoc/documents/meta/log_dashb
oard.json
The repository item was synchronized to the workspace: /clinical/argx-113/mg/argx-113-1705/biostat/staging/final_posthoc/documents/m
eta/log_dashboard.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/mg/argx-113-1705/biostat/staging/final_posthoc/documents/meta/log_dashboard.j
son";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/mg/argx-113-1705/biostat/staging/final_posthoc/documents/meta/log_dashbo
ard.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data log_dashboard31;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-1705/biostat/staging/final_posthoc";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "log_dashboard exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=log_dashboard31 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=log_dashboard out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
                                                           The SAS System

MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data log_dashboard;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length message $121;
MPRINT(APP):   length path $97;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set log_dashboard log_dashboard31 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-1705/biostat/staging/final_posthoc/documents/meta/refreshedoutputs.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/mg/argx-113-1705/biostat/staging/final_posthoc/documents/meta/refreshed
outputs.json
The repository item was synchronized to the workspace: /clinical/argx-113/mg/argx-113-1705/biostat/staging/final_posthoc/documents/m
eta/refreshedoutputs.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/mg/argx-113-1705/biostat/staging/final_posthoc/documents/meta/refreshedoutput
s.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/mg/argx-113-1705/biostat/staging/final_posthoc/documents/meta/refreshedo
utputs.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data refreshedoutputs31;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-1705/biostat/staging/final_posthoc";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "refreshedoutputs exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=refreshedoutputs31 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=refreshedoutputs out=vold (keep=name type length where=(type=2) rename=(length=lengthold))
noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
                                                           The SAS System

MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data refreshedoutputs;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length msg $17;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set refreshedoutputs refreshedoutputs31 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-1705/biostat/staging/final_posthoc/documents/meta/report1.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/mg/argx-113-1705/biostat/staging/final_posthoc/documents/meta/report1.j
son
The repository item was synchronized to the workspace: /clinical/argx-113/mg/argx-113-1705/biostat/staging/final_posthoc/documents/m
eta/report1.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/mg/argx-113-1705/biostat/staging/final_posthoc/documents/meta/report1.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/mg/argx-113-1705/biostat/staging/final_posthoc/documents/meta/report1.js
on.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data report131;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-1705/biostat/staging/final_posthoc";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "report1 exists";
MPRINT(GETJ):   run;
                                                           The SAS System

MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report131 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report1 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report1;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report1 report131 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-1705/biostat/staging/final_posthoc/documents/meta/report2.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/mg/argx-113-1705/biostat/staging/final_posthoc/documents/meta/report2.j
                                                           The SAS System

son
The repository item was synchronized to the workspace: /clinical/argx-113/mg/argx-113-1705/biostat/staging/final_posthoc/documents/m
eta/report2.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/mg/argx-113-1705/biostat/staging/final_posthoc/documents/meta/report2.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/mg/argx-113-1705/biostat/staging/final_posthoc/documents/meta/report2.js
on.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data report231;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-1705/biostat/staging/final_posthoc";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "report2 exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report231 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report2 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
                                                           The SAS System

MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report2;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report2 report231 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-1705/biostat/staging/ma2023/documents/meta/log_dashboard.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/mg/argx-113-1705/biostat/staging/ma2023/documents/meta/log_dashboard.js
on
The repository item was synchronized to the workspace: /clinical/argx-113/mg/argx-113-1705/biostat/staging/ma2023/documents/meta/log
_dashboard.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/mg/argx-113-1705/biostat/staging/ma2023/documents/meta/log_dashboard.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/mg/argx-113-1705/biostat/staging/ma2023/documents/meta/log_dashboard.jso
n.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data log_dashboard32;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-1705/biostat/staging/ma2023";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "log_dashboard exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=log_dashboard32 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=log_dashboard out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
                                                           The SAS System

MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data log_dashboard;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length message $121;
MPRINT(APP):   length path $97;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set log_dashboard log_dashboard32 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-1705/biostat/staging/ma2023/documents/meta/refreshedoutputs.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/mg/argx-113-1705/biostat/staging/ma2023/documents/meta/refreshedoutputs
.json
The repository item was synchronized to the workspace: /clinical/argx-113/mg/argx-113-1705/biostat/staging/ma2023/documents/meta/ref
reshedoutputs.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/mg/argx-113-1705/biostat/staging/ma2023/documents/meta/refreshedoutputs.json"
;
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/mg/argx-113-1705/biostat/staging/ma2023/documents/meta/refreshedoutputs.
json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
                                                           The SAS System

_LSAFEXISTS_=1
MPRINT(GETJ):   data refreshedoutputs32;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-1705/biostat/staging/ma2023";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "refreshedoutputs exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=refreshedoutputs32 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=refreshedoutputs out=vold (keep=name type length where=(type=2) rename=(length=lengthold))
noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data refreshedoutputs;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length msg $17;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set refreshedoutputs refreshedoutputs32 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-1705/biostat/staging/ma2023/documents/meta/report1.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/mg/argx-113-1705/biostat/staging/ma2023/documents/meta/report1.json
                                                           The SAS System

The repository item was synchronized to the workspace: /clinical/argx-113/mg/argx-113-1705/biostat/staging/ma2023/documents/meta/rep
ort1.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/mg/argx-113-1705/biostat/staging/ma2023/documents/meta/report1.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/mg/argx-113-1705/biostat/staging/ma2023/documents/meta/report1.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data report132;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-1705/biostat/staging/ma2023";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "report1 exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report132 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report1 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report1;
                                                           The SAS System

MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report1 report132 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-1705/biostat/staging/ma2023/documents/meta/report2.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/mg/argx-113-1705/biostat/staging/ma2023/documents/meta/report2.json
The repository item was synchronized to the workspace: /clinical/argx-113/mg/argx-113-1705/biostat/staging/ma2023/documents/meta/rep
ort2.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/mg/argx-113-1705/biostat/staging/ma2023/documents/meta/report2.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/mg/argx-113-1705/biostat/staging/ma2023/documents/meta/report2.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data report232;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-1705/biostat/staging/ma2023";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "report2 exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report232 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report2 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
                                                           The SAS System

MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report2;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report2 report232 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-2001/biostat/staging/ema/documents/meta/log_dashboard.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/mg/argx-113-2001/biostat/staging/ema/documents/meta/log_dashboard.json
The repository item was synchronized to the workspace: /clinical/argx-113/mg/argx-113-2001/biostat/staging/ema/documents/meta/log_da
shboard.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/mg/argx-113-2001/biostat/staging/ema/documents/meta/log_dashboard.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/mg/argx-113-2001/biostat/staging/ema/documents/meta/log_dashboard.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
                                                           The SAS System

_LSAFEXISTS_=1
MPRINT(GETJ):   data log_dashboard33;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-2001/biostat/staging/ema";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "log_dashboard exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=log_dashboard33 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=log_dashboard out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data log_dashboard;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length message $121;
MPRINT(APP):   length path $97;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set log_dashboard log_dashboard33 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-2001/biostat/staging/ema/documents/meta/refreshedoutputs.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/mg/argx-113-2001/biostat/staging/ema/documents/meta/refreshedoutputs.js
on
                                                           The SAS System

The repository item was synchronized to the workspace: /clinical/argx-113/mg/argx-113-2001/biostat/staging/ema/documents/meta/refres
hedoutputs.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/mg/argx-113-2001/biostat/staging/ema/documents/meta/refreshedoutputs.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/mg/argx-113-2001/biostat/staging/ema/documents/meta/refreshedoutputs.jso
n.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data refreshedoutputs33;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-2001/biostat/staging/ema";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "refreshedoutputs exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=refreshedoutputs33 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=refreshedoutputs out=vold (keep=name type length where=(type=2) rename=(length=lengthold))
noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data refreshedoutputs;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length msg $17;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set refreshedoutputs refreshedoutputs33 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
                                                           The SAS System

MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-2001/biostat/staging/ema/documents/meta/report1.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/mg/argx-113-2001/biostat/staging/ema/documents/meta/report1.json
The repository item was synchronized to the workspace: /clinical/argx-113/mg/argx-113-2001/biostat/staging/ema/documents/meta/report
1.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/mg/argx-113-2001/biostat/staging/ema/documents/meta/report1.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/mg/argx-113-2001/biostat/staging/ema/documents/meta/report1.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data report133;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-2001/biostat/staging/ema";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "report1 exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report133 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report1 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
                                                           The SAS System

MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report1;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report1 report133 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-2001/biostat/staging/ema/documents/meta/report2.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/mg/argx-113-2001/biostat/staging/ema/documents/meta/report2.json
The repository item was synchronized to the workspace: /clinical/argx-113/mg/argx-113-2001/biostat/staging/ema/documents/meta/report
2.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/mg/argx-113-2001/biostat/staging/ema/documents/meta/report2.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/mg/argx-113-2001/biostat/staging/ema/documents/meta/report2.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data report233;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-2001/biostat/staging/ema";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "report2 exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
                                                           The SAS System

MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report233 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report2 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report2;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report2 report233 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-2002/biostat/staging/ema/documents/meta/log_dashboard.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/mg/argx-113-2002/biostat/staging/ema/documents/meta/log_dashboard.json
                                                           The SAS System

The repository item was synchronized to the workspace: /clinical/argx-113/mg/argx-113-2002/biostat/staging/ema/documents/meta/log_da
shboard.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/mg/argx-113-2002/biostat/staging/ema/documents/meta/log_dashboard.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/mg/argx-113-2002/biostat/staging/ema/documents/meta/log_dashboard.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data log_dashboard34;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-2002/biostat/staging/ema";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "log_dashboard exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=log_dashboard34 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=log_dashboard out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data log_dashboard;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length message $121;
MPRINT(APP):   length path $97;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set log_dashboard log_dashboard34 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
                                                           The SAS System

MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-2002/biostat/staging/ema/documents/meta/refreshedoutputs.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/mg/argx-113-2002/biostat/staging/ema/documents/meta/refreshedoutputs.js
on
The repository item was synchronized to the workspace: /clinical/argx-113/mg/argx-113-2002/biostat/staging/ema/documents/meta/refres
hedoutputs.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/mg/argx-113-2002/biostat/staging/ema/documents/meta/refreshedoutputs.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/mg/argx-113-2002/biostat/staging/ema/documents/meta/refreshedoutputs.jso
n.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data refreshedoutputs34;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-2002/biostat/staging/ema";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "refreshedoutputs exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=refreshedoutputs34 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=refreshedoutputs out=vold (keep=name type length where=(type=2) rename=(length=lengthold))
noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
                                                           The SAS System

MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data refreshedoutputs;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length msg $17;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set refreshedoutputs refreshedoutputs34 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-2002/biostat/staging/ema/documents/meta/report1.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/mg/argx-113-2002/biostat/staging/ema/documents/meta/report1.json
The repository item was synchronized to the workspace: /clinical/argx-113/mg/argx-113-2002/biostat/staging/ema/documents/meta/report
1.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/mg/argx-113-2002/biostat/staging/ema/documents/meta/report1.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/mg/argx-113-2002/biostat/staging/ema/documents/meta/report1.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data report134;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-2002/biostat/staging/ema";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "report1 exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report134 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report1 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
                                                           The SAS System

MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report1;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report1 report134 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-2002/biostat/staging/ema/documents/meta/report2.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/mg/argx-113-2002/biostat/staging/ema/documents/meta/report2.json
The repository item was synchronized to the workspace: /clinical/argx-113/mg/argx-113-2002/biostat/staging/ema/documents/meta/report
2.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/mg/argx-113-2002/biostat/staging/ema/documents/meta/report2.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/mg/argx-113-2002/biostat/staging/ema/documents/meta/report2.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data report234;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
                                                           The SAS System

MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-2002/biostat/staging/ema";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "report2 exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report234 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report2 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report2;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report2 report234 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
                                                           The SAS System

MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2_1yr/qc_adam/documents/meta/log_dashboard.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2_1yr/qc_adam/documents/meta/log_das
hboard.json
The repository item was synchronized to the workspace: /clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2_1yr/qc_adam/documents
/meta/log_dashboard.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2_1yr/qc_adam/documents/meta/log_dashboard
.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2_1yr/qc_adam/documents/meta/log_dash
board.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data log_dashboard35;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2_1yr/qc_adam";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "log_dashboard exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=log_dashboard35 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=log_dashboard out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
                                                           The SAS System

MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data log_dashboard;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length message $121;
MPRINT(APP):   length path $97;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set log_dashboard log_dashboard35 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2_1yr/qc_adam/documents/meta/refreshedoutputs.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2_1yr/qc_adam/documents/meta/refresh
edoutputs.json
The repository item was synchronized to the workspace: /clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2_1yr/qc_adam/documents
/meta/refreshedoutputs.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2_1yr/qc_adam/documents/meta/refreshedoutp
uts.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2_1yr/qc_adam/documents/meta/refreshe
doutputs.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data refreshedoutputs35;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2_1yr/qc_adam";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "refreshedoutputs exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=refreshedoutputs35 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=refreshedoutputs out=vold (keep=name type length where=(type=2) rename=(length=lengthold))
noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
                                                           The SAS System

MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data refreshedoutputs;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length msg $17;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set refreshedoutputs refreshedoutputs35 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2_1yr/qc_adam/documents/meta/report1.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2_1yr/qc_adam/documents/meta/report1
.json
The repository item was synchronized to the workspace: /clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2_1yr/qc_adam/documents
/meta/report1.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2_1yr/qc_adam/documents/meta/report1.json"
;
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2_1yr/qc_adam/documents/meta/report1.
json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data report135;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
                                                           The SAS System

MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2_1yr/qc_adam";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "report1 exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report135 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report1 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report1;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report1 report135 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2_1yr/qc_adam/documents/meta/report2.json
_LSAFEXISTS_=1
                                                           The SAS System

MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2_1yr/qc_adam/documents/meta/report2
.json
The repository item was synchronized to the workspace: /clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2_1yr/qc_adam/documents
/meta/report2.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2_1yr/qc_adam/documents/meta/report2.json"
;
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2_1yr/qc_adam/documents/meta/report2.
json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data report235;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2_1yr/qc_adam";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "report2 exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report235 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report2 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
                                                           The SAS System

MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report2;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report2 report235 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist: /clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2_1yr/qc_tlf/documents/meta/log_dashboard.json
_LSAFEXISTS_=0
MPRINT(GETJ):  ;
JSONFILEEXISTS=no
_LSAFEXISTS_=0
MPRINT(GETJ):   data log_dashboard36;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2_1yr/qc_tlf";
MPRINT(GETJ):   db2message = "log_dashboard doesn't exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=log_dashboard36 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=log_dashboard out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
                                                           The SAS System

MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data log_dashboard;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length message $121;
MPRINT(APP):   length path $97;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set log_dashboard log_dashboard36 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist: /clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2_1yr/qc_tlf/documents/meta/refreshedoutputs.json
_LSAFEXISTS_=0
MPRINT(GETJ):  ;
JSONFILEEXISTS=no
_LSAFEXISTS_=0
MPRINT(GETJ):   data refreshedoutputs36;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2_1yr/qc_tlf";
MPRINT(GETJ):   db2message = "refreshedoutputs doesn't exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=refreshedoutputs36 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=refreshedoutputs out=vold (keep=name type length where=(type=2) rename=(length=lengthold))
noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
                                                           The SAS System

MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data refreshedoutputs;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length msg $17;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set refreshedoutputs refreshedoutputs36 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist: /clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2_1yr/qc_tlf/documents/meta/report1.json
_LSAFEXISTS_=0
MPRINT(GETJ):  ;
JSONFILEEXISTS=no
_LSAFEXISTS_=0
MPRINT(GETJ):   data report136;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2_1yr/qc_tlf";
MPRINT(GETJ):   db2message = "report1 doesn't exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report136 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report1 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
                                                           The SAS System

MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report1;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report1 report136 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist: /clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2_1yr/qc_tlf/documents/meta/report2.json
_LSAFEXISTS_=0
MPRINT(GETJ):  ;
JSONFILEEXISTS=no
_LSAFEXISTS_=0
MPRINT(GETJ):   data report236;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-2002/biostat/staging/ia2_1yr/qc_tlf";
MPRINT(GETJ):   db2message = "report2 doesn't exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report236 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report2 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
                                                           The SAS System

MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report2;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report2 report236 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist: /clinical/argx-113/mg/argx-113-2002/biostat/staging/patient_profiles/documents/meta/log_dashboard.json
_LSAFEXISTS_=0
MPRINT(GETJ):  ;
JSONFILEEXISTS=no
_LSAFEXISTS_=0
MPRINT(GETJ):   data log_dashboard37;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-2002/biostat/staging/patient_profiles";
MPRINT(GETJ):   db2message = "log_dashboard doesn't exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=log_dashboard37 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=log_dashboard out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
                                                           The SAS System

MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data log_dashboard;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length message $121;
MPRINT(APP):   length path $97;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set log_dashboard log_dashboard37 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist: /clinical/argx-113/mg/argx-113-2002/biostat/staging/patient_profiles/documents/meta/refreshedoutputs.json
_LSAFEXISTS_=0
MPRINT(GETJ):  ;
JSONFILEEXISTS=no
_LSAFEXISTS_=0
MPRINT(GETJ):   data refreshedoutputs37;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-2002/biostat/staging/patient_profiles";
MPRINT(GETJ):   db2message = "refreshedoutputs doesn't exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=refreshedoutputs37 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=refreshedoutputs out=vold (keep=name type length where=(type=2) rename=(length=lengthold))
noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
                                                           The SAS System

MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data refreshedoutputs;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length msg $17;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set refreshedoutputs refreshedoutputs37 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist: /clinical/argx-113/mg/argx-113-2002/biostat/staging/patient_profiles/documents/meta/report1.json
_LSAFEXISTS_=0
MPRINT(GETJ):  ;
JSONFILEEXISTS=no
_LSAFEXISTS_=0
MPRINT(GETJ):   data report137;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-2002/biostat/staging/patient_profiles";
MPRINT(GETJ):   db2message = "report1 doesn't exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report137 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report1 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
                                                           The SAS System

MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report1;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report1 report137 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist: /clinical/argx-113/mg/argx-113-2002/biostat/staging/patient_profiles/documents/meta/report2.json
_LSAFEXISTS_=0
MPRINT(GETJ):  ;
JSONFILEEXISTS=no
_LSAFEXISTS_=0
MPRINT(GETJ):   data report237;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-2002/biostat/staging/patient_profiles";
MPRINT(GETJ):   db2message = "report2 doesn't exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
                                                           The SAS System

MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report237 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report2 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report2;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report2 report237 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist: /clinical/argx-113/mg/argx-113-2002/biostat/staging/pmda_1yr/documents/meta/log_dashboard.json
_LSAFEXISTS_=0
MPRINT(GETJ):  ;
JSONFILEEXISTS=no
_LSAFEXISTS_=0
MPRINT(GETJ):   data log_dashboard38;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-2002/biostat/staging/pmda_1yr";
MPRINT(GETJ):   db2message = "log_dashboard doesn't exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=log_dashboard38 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=log_dashboard out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
                                                           The SAS System

MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data log_dashboard;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length message $121;
MPRINT(APP):   length path $97;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set log_dashboard log_dashboard38 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist: /clinical/argx-113/mg/argx-113-2002/biostat/staging/pmda_1yr/documents/meta/refreshedoutputs.json
_LSAFEXISTS_=0
MPRINT(GETJ):  ;
JSONFILEEXISTS=no
_LSAFEXISTS_=0
MPRINT(GETJ):   data refreshedoutputs38;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-2002/biostat/staging/pmda_1yr";
MPRINT(GETJ):   db2message = "refreshedoutputs doesn't exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=refreshedoutputs38 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=refreshedoutputs out=vold (keep=name type length where=(type=2) rename=(length=lengthold))
noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
                                                           The SAS System

MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data refreshedoutputs;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length msg $17;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set refreshedoutputs refreshedoutputs38 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist: /clinical/argx-113/mg/argx-113-2002/biostat/staging/pmda_1yr/documents/meta/report1.json
_LSAFEXISTS_=0
MPRINT(GETJ):  ;
JSONFILEEXISTS=no
_LSAFEXISTS_=0
MPRINT(GETJ):   data report138;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-2002/biostat/staging/pmda_1yr";
MPRINT(GETJ):   db2message = "report1 doesn't exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report138 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report1 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
                                                           The SAS System

MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report1;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report1 report138 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist: /clinical/argx-113/mg/argx-113-2002/biostat/staging/pmda_1yr/documents/meta/report2.json
_LSAFEXISTS_=0
MPRINT(GETJ):  ;
JSONFILEEXISTS=no
_LSAFEXISTS_=0
MPRINT(GETJ):   data report238;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-2002/biostat/staging/pmda_1yr";
MPRINT(GETJ):   db2message = "report2 doesn't exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
                                                           The SAS System

MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report238 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report2 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report2;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report2 report238 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-9041/biostat/staging/final_adam/documents/meta/log_dashboard.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/mg/argx-113-9041/biostat/staging/final_adam/documents/meta/log_dashboar
                                                           The SAS System

d.json
The repository item was synchronized to the workspace: /clinical/argx-113/mg/argx-113-9041/biostat/staging/final_adam/documents/meta
/log_dashboard.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/mg/argx-113-9041/biostat/staging/final_adam/documents/meta/log_dashboard.json
";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/mg/argx-113-9041/biostat/staging/final_adam/documents/meta/log_dashboard
.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data log_dashboard39;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-9041/biostat/staging/final_adam";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "log_dashboard exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=log_dashboard39 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=log_dashboard out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data log_dashboard;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length message $121;
MPRINT(APP):   length path $97;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set log_dashboard log_dashboard39 (in=b);
                                                           The SAS System

MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-9041/biostat/staging/final_adam/documents/meta/refreshedoutputs.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/mg/argx-113-9041/biostat/staging/final_adam/documents/meta/refreshedout
puts.json
The repository item was synchronized to the workspace: /clinical/argx-113/mg/argx-113-9041/biostat/staging/final_adam/documents/meta
/refreshedoutputs.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/mg/argx-113-9041/biostat/staging/final_adam/documents/meta/refreshedoutputs.j
son";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/mg/argx-113-9041/biostat/staging/final_adam/documents/meta/refreshedoutp
uts.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data refreshedoutputs39;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-9041/biostat/staging/final_adam";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "refreshedoutputs exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=refreshedoutputs39 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=refreshedoutputs out=vold (keep=name type length where=(type=2) rename=(length=lengthold))
noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
                                                           The SAS System

MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data refreshedoutputs;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length msg $17;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set refreshedoutputs refreshedoutputs39 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-9041/biostat/staging/final_adam/documents/meta/report1.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/mg/argx-113-9041/biostat/staging/final_adam/documents/meta/report1.json
The repository item was synchronized to the workspace: /clinical/argx-113/mg/argx-113-9041/biostat/staging/final_adam/documents/meta
/report1.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/mg/argx-113-9041/biostat/staging/final_adam/documents/meta/report1.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/mg/argx-113-9041/biostat/staging/final_adam/documents/meta/report1.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data report139;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-9041/biostat/staging/final_adam";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "report1 exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report139 out=vnew (keep=name type length where=(type=2)) noprint;
                                                           The SAS System

MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report1 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report1;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report1 report139 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/mg/argx-113-9041/biostat/staging/final_adam/documents/meta/report2.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/mg/argx-113-9041/biostat/staging/final_adam/documents/meta/report2.json
The repository item was synchronized to the workspace: /clinical/argx-113/mg/argx-113-9041/biostat/staging/final_adam/documents/meta
/report2.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/mg/argx-113-9041/biostat/staging/final_adam/documents/meta/report2.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
                                                           The SAS System

The item was deleted from the workspace: /clinical/argx-113/mg/argx-113-9041/biostat/staging/final_adam/documents/meta/report2.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data report239;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/mg/argx-113-9041/biostat/staging/final_adam";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "report2 exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report239 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report2 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report2;
MPRINT(APP):   length db2message $200;
                                                           The SAS System

MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report2 report239 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/patient_profiles/documents/meta/log_dashboard.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/patient_profiles/documents/meta
/log_dashboard.json
The repository item was synchronized to the workspace: /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/patient_profiles/d
ocuments/meta/log_dashboard.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/patient_profiles/documents/meta/log_d
ashboard.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/patient_profiles/documents/meta/
log_dashboard.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data log_dashboard40;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/patient_profiles";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "log_dashboard exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=log_dashboard40 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=log_dashboard out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
                                                           The SAS System

MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data log_dashboard;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length message $121;
MPRINT(APP):   length path $97;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set log_dashboard log_dashboard40 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/patient_profiles/documents/meta/refreshedoutputs.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/patient_profiles/documents/meta
/refreshedoutputs.json
The repository item was synchronized to the workspace: /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/patient_profiles/d
ocuments/meta/refreshedoutputs.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/patient_profiles/documents/meta/refre
shedoutputs.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/patient_profiles/documents/meta/
refreshedoutputs.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data refreshedoutputs40;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/patient_profiles";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "refreshedoutputs exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=refreshedoutputs40 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=refreshedoutputs out=vold (keep=name type length where=(type=2) rename=(length=lengthold))
noprint;
                                                           The SAS System

MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data refreshedoutputs;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length msg $17;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set refreshedoutputs refreshedoutputs40 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/patient_profiles/documents/meta/report1.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/patient_profiles/documents/meta
/report1.json
The repository item was synchronized to the workspace: /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/patient_profiles/d
ocuments/meta/report1.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/patient_profiles/documents/meta/repor
t1.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
                                                           The SAS System

The item was deleted from the workspace: /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/patient_profiles/documents/meta/
report1.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data report140;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/patient_profiles";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "report1 exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report140 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report1 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report1;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report1 report140 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
                                                           The SAS System

MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/patient_profiles/documents/meta/report2.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/patient_profiles/documents/meta
/report2.json
The repository item was synchronized to the workspace: /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/patient_profiles/d
ocuments/meta/report2.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/patient_profiles/documents/meta/repor
t2.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/patient_profiles/documents/meta/
report2.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data report240;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/patient_profiles";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "report2 exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report240 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report2 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
                                                           The SAS System

MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report2;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report2 report240 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun2/qc_adam/documents/meta/log_dashboard.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun2/qc_adam/documents/meta
/log_dashboard.json
The repository item was synchronized to the workspace: /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun2/qc_adam/d
ocuments/meta/log_dashboard.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun2/qc_adam/documents/meta/log_d
ashboard.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun2/qc_adam/documents/meta/
log_dashboard.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data log_dashboard41;
                                                           The SAS System

MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun2/qc_adam";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "log_dashboard exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=log_dashboard41 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=log_dashboard out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data log_dashboard;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length message $121;
MPRINT(APP):   length path $97;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set log_dashboard log_dashboard41 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun2/qc_adam/documents/meta/refreshedoutputs.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun2/qc_adam/documents/meta
/refreshedoutputs.json
The repository item was synchronized to the workspace: /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun2/qc_adam/d
                                                           The SAS System

ocuments/meta/refreshedoutputs.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun2/qc_adam/documents/meta/refre
shedoutputs.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun2/qc_adam/documents/meta/
refreshedoutputs.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data refreshedoutputs41;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun2/qc_adam";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "refreshedoutputs exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=refreshedoutputs41 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=refreshedoutputs out=vold (keep=name type length where=(type=2) rename=(length=lengthold))
noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data refreshedoutputs;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length msg $17;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set refreshedoutputs refreshedoutputs41 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
                                                           The SAS System

MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun2/qc_adam/documents/meta/report1.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun2/qc_adam/documents/meta
/report1.json
The repository item was synchronized to the workspace: /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun2/qc_adam/d
ocuments/meta/report1.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun2/qc_adam/documents/meta/repor
t1.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun2/qc_adam/documents/meta/
report1.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data report141;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun2/qc_adam";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "report1 exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report141 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report1 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
                                                           The SAS System

MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report1;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report1 report141 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun2/qc_adam/documents/meta/report2.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun2/qc_adam/documents/meta
/report2.json
The repository item was synchronized to the workspace: /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun2/qc_adam/d
ocuments/meta/report2.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun2/qc_adam/documents/meta/repor
t2.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun2/qc_adam/documents/meta/
report2.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data report241;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun2/qc_adam";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "report2 exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
                                                           The SAS System

MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report241 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report2 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report2;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report2 report241 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
                                                           The SAS System

The item does not exist: /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun2/qc_tlf/documents/meta/log_dashboard.jso
n
_LSAFEXISTS_=0
MPRINT(GETJ):  ;
JSONFILEEXISTS=no
_LSAFEXISTS_=0
MPRINT(GETJ):   data log_dashboard42;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun2/qc_tlf";
MPRINT(GETJ):   db2message = "log_dashboard doesn't exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=log_dashboard42 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=log_dashboard out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data log_dashboard;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length message $121;
MPRINT(APP):   length path $97;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set log_dashboard log_dashboard42 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist: /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun2/qc_tlf/documents/meta/refreshedoutputs.
json
_LSAFEXISTS_=0
                                                           The SAS System

MPRINT(GETJ):  ;
JSONFILEEXISTS=no
_LSAFEXISTS_=0
MPRINT(GETJ):   data refreshedoutputs42;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun2/qc_tlf";
MPRINT(GETJ):   db2message = "refreshedoutputs doesn't exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=refreshedoutputs42 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=refreshedoutputs out=vold (keep=name type length where=(type=2) rename=(length=lengthold))
noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data refreshedoutputs;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length msg $17;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set refreshedoutputs refreshedoutputs42 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist: /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun2/qc_tlf/documents/meta/report1.json
_LSAFEXISTS_=0
MPRINT(GETJ):  ;
JSONFILEEXISTS=no
_LSAFEXISTS_=0
MPRINT(GETJ):   data report142;
                                                           The SAS System

MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun2/qc_tlf";
MPRINT(GETJ):   db2message = "report1 doesn't exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report142 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report1 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report1;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report1 report142 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist: /clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun2/qc_tlf/documents/meta/report2.json
_LSAFEXISTS_=0
                                                           The SAS System

MPRINT(GETJ):  ;
JSONFILEEXISTS=no
_LSAFEXISTS_=0
MPRINT(GETJ):   data report242;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/testrun2/qc_tlf";
MPRINT(GETJ):   db2message = "report2 doesn't exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report242 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report2 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report2;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
                                                           The SAS System

MPRINT(APP):   set report2 report242 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/pemphigus/argx-113-1905/biostat/staging/patient_profiles/documents/meta/log_dashboard.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/pemphigus/argx-113-1905/biostat/staging/patient_profiles/documents/meta
/log_dashboard.json
The repository item was synchronized to the workspace: /clinical/argx-113/pemphigus/argx-113-1905/biostat/staging/patient_profiles/d
ocuments/meta/log_dashboard.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/pemphigus/argx-113-1905/biostat/staging/patient_profiles/documents/meta/log_d
ashboard.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/pemphigus/argx-113-1905/biostat/staging/patient_profiles/documents/meta/
log_dashboard.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data log_dashboard43;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/pemphigus/argx-113-1905/biostat/staging/patient_profiles";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "log_dashboard exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=log_dashboard43 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=log_dashboard out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
                                                           The SAS System

MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data log_dashboard;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length message $121;
MPRINT(APP):   length path $97;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set log_dashboard log_dashboard43 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/pemphigus/argx-113-1905/biostat/staging/patient_profiles/documents/meta/refreshedoutputs.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/pemphigus/argx-113-1905/biostat/staging/patient_profiles/documents/meta
/refreshedoutputs.json
The repository item was synchronized to the workspace: /clinical/argx-113/pemphigus/argx-113-1905/biostat/staging/patient_profiles/d
ocuments/meta/refreshedoutputs.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/pemphigus/argx-113-1905/biostat/staging/patient_profiles/documents/meta/refre
shedoutputs.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/pemphigus/argx-113-1905/biostat/staging/patient_profiles/documents/meta/
refreshedoutputs.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data refreshedoutputs43;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/pemphigus/argx-113-1905/biostat/staging/patient_profiles";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "refreshedoutputs exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=refreshedoutputs43 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=refreshedoutputs out=vold (keep=name type length where=(type=2) rename=(length=lengthold))
noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
                                                           The SAS System

MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data refreshedoutputs;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length msg $17;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set refreshedoutputs refreshedoutputs43 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/pemphigus/argx-113-1905/biostat/staging/patient_profiles/documents/meta/report1.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/pemphigus/argx-113-1905/biostat/staging/patient_profiles/documents/meta
/report1.json
The repository item was synchronized to the workspace: /clinical/argx-113/pemphigus/argx-113-1905/biostat/staging/patient_profiles/d
ocuments/meta/report1.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/pemphigus/argx-113-1905/biostat/staging/patient_profiles/documents/meta/repor
t1.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/pemphigus/argx-113-1905/biostat/staging/patient_profiles/documents/meta/
report1.json.
MPRINT(GETJ):  ;
                                                           The SAS System

JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data report143;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/pemphigus/argx-113-1905/biostat/staging/patient_profiles";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "report1 exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report143 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report1 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report1;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report1 report143 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
                                                           The SAS System

MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-113/pemphigus/argx-113-1905/biostat/staging/patient_profiles/documents/meta/report2.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-113/pemphigus/argx-113-1905/biostat/staging/patient_profiles/documents/meta
/report2.json
The repository item was synchronized to the workspace: /clinical/argx-113/pemphigus/argx-113-1905/biostat/staging/patient_profiles/d
ocuments/meta/report2.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-113/pemphigus/argx-113-1905/biostat/staging/patient_profiles/documents/meta/repor
t2.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-113/pemphigus/argx-113-1905/biostat/staging/patient_profiles/documents/meta/
report2.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data report243;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/pemphigus/argx-113-1905/biostat/staging/patient_profiles";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "report2 exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report243 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report2 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
                                                           The SAS System

MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report2;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report2 report243 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist: /clinical/argx-113/pemphigus/argx-113-9201/biostat/staging/testrun1/qc_adam/documents/meta/log_dashboard.js
on
_LSAFEXISTS_=0
MPRINT(GETJ):  ;
JSONFILEEXISTS=no
_LSAFEXISTS_=0
MPRINT(GETJ):   data log_dashboard44;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/pemphigus/argx-113-9201/biostat/staging/testrun1/qc_adam";
MPRINT(GETJ):   db2message = "log_dashboard doesn't exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=log_dashboard44 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=log_dashboard out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
                                                           The SAS System

MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data log_dashboard;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length message $121;
MPRINT(APP):   length path $97;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set log_dashboard log_dashboard44 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist: /clinical/argx-113/pemphigus/argx-113-9201/biostat/staging/testrun1/qc_adam/documents/meta/refreshedoutputs
.json
_LSAFEXISTS_=0
MPRINT(GETJ):  ;
JSONFILEEXISTS=no
_LSAFEXISTS_=0
MPRINT(GETJ):   data refreshedoutputs44;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/pemphigus/argx-113-9201/biostat/staging/testrun1/qc_adam";
MPRINT(GETJ):   db2message = "refreshedoutputs doesn't exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=refreshedoutputs44 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=refreshedoutputs out=vold (keep=name type length where=(type=2) rename=(length=lengthold))
noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
                                                           The SAS System

MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data refreshedoutputs;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length msg $17;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set refreshedoutputs refreshedoutputs44 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist: /clinical/argx-113/pemphigus/argx-113-9201/biostat/staging/testrun1/qc_adam/documents/meta/report1.json
_LSAFEXISTS_=0
MPRINT(GETJ):  ;
JSONFILEEXISTS=no
_LSAFEXISTS_=0
MPRINT(GETJ):   data report144;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/pemphigus/argx-113-9201/biostat/staging/testrun1/qc_adam";
MPRINT(GETJ):   db2message = "report1 doesn't exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report144 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report1 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
                                                           The SAS System

MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report1;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report1 report144 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist: /clinical/argx-113/pemphigus/argx-113-9201/biostat/staging/testrun1/qc_adam/documents/meta/report2.json
_LSAFEXISTS_=0
MPRINT(GETJ):  ;
JSONFILEEXISTS=no
_LSAFEXISTS_=0
MPRINT(GETJ):   data report244;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/pemphigus/argx-113-9201/biostat/staging/testrun1/qc_adam";
MPRINT(GETJ):   db2message = "report2 doesn't exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report244 out=vnew (keep=name type length where=(type=2)) noprint;
                                                           The SAS System

MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report2 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report2;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report2 report244 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist: /clinical/argx-113/pemphigus/argx-113-9201/biostat/staging/testrun1/qc_tlf/documents/meta/log_dashboard.jso
n
_LSAFEXISTS_=0
MPRINT(GETJ):  ;
JSONFILEEXISTS=no
_LSAFEXISTS_=0
MPRINT(GETJ):   data log_dashboard45;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/pemphigus/argx-113-9201/biostat/staging/testrun1/qc_tlf";
MPRINT(GETJ):   db2message = "log_dashboard doesn't exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=log_dashboard45 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=log_dashboard out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
                                                           The SAS System

MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data log_dashboard;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length message $121;
MPRINT(APP):   length path $97;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set log_dashboard log_dashboard45 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist: /clinical/argx-113/pemphigus/argx-113-9201/biostat/staging/testrun1/qc_tlf/documents/meta/refreshedoutputs.
json
_LSAFEXISTS_=0
MPRINT(GETJ):  ;
JSONFILEEXISTS=no
_LSAFEXISTS_=0
MPRINT(GETJ):   data refreshedoutputs45;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/pemphigus/argx-113-9201/biostat/staging/testrun1/qc_tlf";
MPRINT(GETJ):   db2message = "refreshedoutputs doesn't exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=refreshedoutputs45 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=refreshedoutputs out=vold (keep=name type length where=(type=2) rename=(length=lengthold))
noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
                                                           The SAS System

MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data refreshedoutputs;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length msg $17;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set refreshedoutputs refreshedoutputs45 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist: /clinical/argx-113/pemphigus/argx-113-9201/biostat/staging/testrun1/qc_tlf/documents/meta/report1.json
_LSAFEXISTS_=0
MPRINT(GETJ):  ;
JSONFILEEXISTS=no
_LSAFEXISTS_=0
MPRINT(GETJ):   data report145;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/pemphigus/argx-113-9201/biostat/staging/testrun1/qc_tlf";
MPRINT(GETJ):   db2message = "report1 doesn't exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report145 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report1 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
                                                           The SAS System

MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report1;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report1 report145 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist: /clinical/argx-113/pemphigus/argx-113-9201/biostat/staging/testrun1/qc_tlf/documents/meta/report2.json
_LSAFEXISTS_=0
MPRINT(GETJ):  ;
JSONFILEEXISTS=no
_LSAFEXISTS_=0
MPRINT(GETJ):   data report245;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-113/pemphigus/argx-113-9201/biostat/staging/testrun1/qc_tlf";
MPRINT(GETJ):   db2message = "report2 doesn't exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
                                                           The SAS System

MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report245 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report2 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report2;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report2 report245 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-117/hv/argx-117-1901/biostat/staging/mad5_tables/documents/meta/log_dashboard.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-117/hv/argx-117-1901/biostat/staging/mad5_tables/documents/meta/log_dashboa
                                                           The SAS System

rd.json
The repository item was synchronized to the workspace: /clinical/argx-117/hv/argx-117-1901/biostat/staging/mad5_tables/documents/met
a/log_dashboard.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-117/hv/argx-117-1901/biostat/staging/mad5_tables/documents/meta/log_dashboard.jso
n";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-117/hv/argx-117-1901/biostat/staging/mad5_tables/documents/meta/log_dashboar
d.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data log_dashboard46;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-117/hv/argx-117-1901/biostat/staging/mad5_tables";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "log_dashboard exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=log_dashboard46 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=log_dashboard out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data log_dashboard;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length message $121;
MPRINT(APP):   length path $97;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set log_dashboard log_dashboard46 (in=b);
                                                           The SAS System

MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-117/hv/argx-117-1901/biostat/staging/mad5_tables/documents/meta/refreshedoutputs.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-117/hv/argx-117-1901/biostat/staging/mad5_tables/documents/meta/refreshedou
tputs.json
The repository item was synchronized to the workspace: /clinical/argx-117/hv/argx-117-1901/biostat/staging/mad5_tables/documents/met
a/refreshedoutputs.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-117/hv/argx-117-1901/biostat/staging/mad5_tables/documents/meta/refreshedoutputs.
json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-117/hv/argx-117-1901/biostat/staging/mad5_tables/documents/meta/refreshedout
puts.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data refreshedoutputs46;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-117/hv/argx-117-1901/biostat/staging/mad5_tables";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "refreshedoutputs exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=refreshedoutputs46 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=refreshedoutputs out=vold (keep=name type length where=(type=2) rename=(length=lengthold))
noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
                                                           The SAS System

MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data refreshedoutputs;
MPRINT(APP):   length created $28;
MPRINT(APP):   length createdby $11;
MPRINT(APP):   length datecreated $16;
MPRINT(APP):   length datelastmodified $16;
MPRINT(APP):   length datepropertieslastmodified $16;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length description $1;
MPRINT(APP):   length formattedsize $8;
MPRINT(APP):   length itemtype $8;
MPRINT(APP):   length lastmodified $28;
MPRINT(APP):   length lastmodifiedby $11;
MPRINT(APP):   length msg $17;
MPRINT(APP):   length name $32;
MPRINT(APP):   length path $105;
MPRINT(APP):   length propertieslastmodified $28;
MPRINT(APP):   length propertieslastmodifiedby $11;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sas_program $1;
MPRINT(APP):   length signaturestatus $4;
MPRINT(APP):   length state $6;
MPRINT(APP):   length version $1;
MPRINT(APP):   set refreshedoutputs refreshedoutputs46 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-117/hv/argx-117-1901/biostat/staging/mad5_tables/documents/meta/report1.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-117/hv/argx-117-1901/biostat/staging/mad5_tables/documents/meta/report1.jso
n
The repository item was synchronized to the workspace: /clinical/argx-117/hv/argx-117-1901/biostat/staging/mad5_tables/documents/met
a/report1.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-117/hv/argx-117-1901/biostat/staging/mad5_tables/documents/meta/report1.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
                                                           The SAS System

The item was deleted from the workspace: /clinical/argx-117/hv/argx-117-1901/biostat/staging/mad5_tables/documents/meta/report1.json
.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data report146;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-117/hv/argx-117-1901/biostat/staging/mad5_tables";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "report1 exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report146 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report1 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report1;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report1 report146 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
                                                           The SAS System

MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-117/hv/argx-117-1901/biostat/staging/mad5_tables/documents/meta/report2.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-117/hv/argx-117-1901/biostat/staging/mad5_tables/documents/meta/report2.jso
n
The repository item was synchronized to the workspace: /clinical/argx-117/hv/argx-117-1901/biostat/staging/mad5_tables/documents/met
a/report2.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-117/hv/argx-117-1901/biostat/staging/mad5_tables/documents/meta/report2.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-117/hv/argx-117-1901/biostat/staging/mad5_tables/documents/meta/report2.json
.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data report246;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-117/hv/argx-117-1901/biostat/staging/mad5_tables";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "report2 exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report246 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report2 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
                                                           The SAS System

MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report2;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report2 report246 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-117/mmn/argx-117-2002/biostat/staging/patient_profiles/documents/meta/log_dashboard.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-117/mmn/argx-117-2002/biostat/staging/patient_profiles/documents/meta/log_d
ashboard.json
The repository item was synchronized to the workspace: /clinical/argx-117/mmn/argx-117-2002/biostat/staging/patient_profiles/documen
ts/meta/log_dashboard.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-117/mmn/argx-117-2002/biostat/staging/patient_profiles/documents/meta/log_dashboa
rd.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-117/mmn/argx-117-2002/biostat/staging/patient_profiles/documents/meta/log_da
shboard.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data log_dashboard47;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
                                                           The SAS System

MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-117/mmn/argx-117-2002/biostat/staging/patient_profiles";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "log_dashboard exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=log_dashboard47 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=log_dashboard out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data log_dashboard;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length message $121;
MPRINT(APP):   length path $97;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   set log_dashboard log_dashboard47 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-117/mmn/argx-117-2002/biostat/staging/patient_profiles/documents/meta/refreshedoutputs.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-117/mmn/argx-117-2002/biostat/staging/patient_profiles/documents/meta/refre
shedoutputs.json
The repository item was synchronized to the workspace: /clinical/argx-117/mmn/argx-117-2002/biostat/staging/patient_profiles/documen
ts/meta/refreshedoutputs.json.
MPRINT(GETJSONFILE):  ;
                                                           The SAS System

MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-117/mmn/argx-117-2002/biostat/staging/patient_profiles/documents/meta/refreshedou
tputs.json";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-117/mmn/argx-117-2002/biostat/staging/patient_profiles/documents/meta/refres
hedoutputs.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data refreshedoutputs47;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-117/mmn/argx-117-2002/biostat/staging/patient_profiles";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "refreshedoutputs exists";
MPRINT(GETJ):   run;
MPRINT(APP):   proc contents data=refreshedoutputs47 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=refreshedoutputs out=vold (keep=name type length where=(type=2) rename=(length=lengthold))
noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data refreshedoutputs;
MPRINT(APP):   length created $28;
MPRINT(APP):   length createdby $11;
MPRINT(APP):   length datecreated $16;
MPRINT(APP):   length datelastmodified $16;
MPRINT(APP):   length datepropertieslastmodified $16;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length description $1;
MPRINT(APP):   length formattedsize $8;
MPRINT(APP):   length itemtype $8;
                                                           The SAS System

MPRINT(APP):   length lastmodified $28;
MPRINT(APP):   length lastmodifiedby $11;
MPRINT(APP):   length msg $17;
MPRINT(APP):   length name $32;
MPRINT(APP):   length path $105;
MPRINT(APP):   length propertieslastmodified $28;
MPRINT(APP):   length propertieslastmodifiedby $11;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sas_program $1;
MPRINT(APP):   length signaturestatus $4;
MPRINT(APP):   length state $6;
MPRINT(APP):   length version $1;
MPRINT(APP):   set refreshedoutputs refreshedoutputs47 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-117/mmn/argx-117-2002/biostat/staging/patient_profiles/documents/meta/report1.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-117/mmn/argx-117-2002/biostat/staging/patient_profiles/documents/meta/repor
t1.json
The repository item was synchronized to the workspace: /clinical/argx-117/mmn/argx-117-2002/biostat/staging/patient_profiles/documen
ts/meta/report1.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-117/mmn/argx-117-2002/biostat/staging/patient_profiles/documents/meta/report1.jso
n";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-117/mmn/argx-117-2002/biostat/staging/patient_profiles/documents/meta/report
1.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data report147;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-117/mmn/argx-117-2002/biostat/staging/patient_profiles";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "report1 exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
                                                           The SAS System

MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report147 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report1 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report1;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report1 report147 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
JSONFILEEXISTS=no
MPRINT(GETJSONFILE):   options nomprint;
The item exists: /clinical/argx-117/mmn/argx-117-2002/biostat/staging/patient_profiles/documents/meta/report2.json
_LSAFEXISTS_=1
MPRINT(GETJSONFILE):   options nomprint;
The item does not exist in the workspace: /clinical/argx-117/mmn/argx-117-2002/biostat/staging/patient_profiles/documents/meta/repor
t2.json
The repository item was synchronized to the workspace: /clinical/argx-117/mmn/argx-117-2002/biostat/staging/patient_profiles/documen
ts/meta/report2.json.
MPRINT(GETJSONFILE):  ;
MPRINT(GETJSONFILE):   LIBNAME dx JSON
"/lsafshared/SASWorkspaces/mbusselen/clinical/argx-117/mmn/argx-117-2002/biostat/staging/patient_profiles/documents/meta/report2.jso
n";
MPRINT(GETJSONFILE):   proc copy in=dx out=work;
                                                           The SAS System

MPRINT(GETJSONFILE):   run;
MPRINT(GETJSONFILE):   options nomprint;
The item was deleted from the workspace: /clinical/argx-117/mmn/argx-117-2002/biostat/staging/patient_profiles/documents/meta/report
2.json.
MPRINT(GETJ):  ;
JSONFILEEXISTS=yes
_LSAFEXISTS_=1
MPRINT(GETJ):   data report247;
MPRINT(GETJ):   length Reporting_Event_Path db2message $200;
MPRINT(GETJ):   Reporting_Event_Path="/clinical/argx-117/mmn/argx-117-2002/biostat/staging/patient_profiles";
MPRINT(GETJ):   set root;
MPRINT(GETJ):   db2message = "report2 exists";
MPRINT(GETJ):   run;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(GETJ):  ;
MPRINT(APP):   proc contents data=report247 out=vnew (keep=name type length where=(type=2)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   proc contents data=report2 out=vold (keep=name type length where=(type=2) rename=(length=lengthold)) noprint;
MPRINT(APP):   run;
MPRINT(APP):   data vnew;
MPRINT(APP):   set vnew;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   data vold;
MPRINT(APP):   set vold;
MPRINT(APP):   name = lowcase(name);
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vnew;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   proc sort data=vold;
MPRINT(APP):   by name;
MPRINT(APP):   run;
MPRINT(APP):   data both;
MPRINT(APP):   merge vnew vold;
MPRINT(APP):   by name;
MPRINT(APP):   maxlen = max(length,lengthold);
MPRINT(APP):   run;
MPRINT(APP):   data _null_;
MPRINT(APP):   set both end=last;
MPRINT(APP):   call symputx("varnam"||strip(put(_n_,8.)),strip(name));
MPRINT(APP):   call symputx("varlen"||strip(put(_n_,8.)),strip(put(maxlen,8.)));
                                                           The SAS System

MPRINT(APP):   if last then call symputx("nbvarlen",strip(put(_n_,8.)));
MPRINT(APP):   run;
MPRINT(APP):   data report2;
MPRINT(APP):   length db2message $200;
MPRINT(APP):   length reporting_event_path $200;
MPRINT(APP):   length sasjsonexport $10;
MPRINT(APP):   set report2 report247 (in=b);
MPRINT(APP):   if b then do;
MPRINT(APP):   ;
MPRINT(APP):   end;
MPRINT(APP):   run;
MPRINT(GETJ):  ;
MPRINT(COLLECT):  ;
554        data jobout.log_dashboard; set log_dashboard; run;
555        data jobout.refreshedoutputs; set refreshedoutputs; run;
556        data jobout.report1; set report1; run;
557        data jobout.report2; set report2; run;
558        %clock (dashboard + status + collect);
MPRINT(CLOCK):   * seconds ;
MPRINT(CLOCK):   * convert seconds to days ;
MPRINT(CLOCK):   * subtract days from run time ;
COMPUTATION TIME for dashboard + status + collect : 0 days 0 hours 26 minutes 51.6 seconds
=================================================================================================================
559
560        /*Add dashboard log summary*/
561        data logsumm (keep=reporting_event_path logcheck hrefdblog);
562             length logcheck $100 hrefdblog $300;
563             set jobout.log_dashboard;
564             if ordinal_root<=1;
565             logcheck = "clean";
566             if war ne 0 or err ne 0 or un ne 0 or note ne 0 then
567                  logcheck=strip(put(err,8.))||' E'||'rrors, '||strip(put(war,8.))||' W'||'arnings, '||strip(put(un,8.))||'
567      ! U'||'ninitialized, '||strip(put(note,8.))||' N'||'otes';
568             if db2message="log_dashboard doesn't exists" then logcheck='No dashboard';
569             if not missing(path) then hrefdblog=strip(path)||'dashboard.log';
570        run;
571        proc sort data=logsumm;
572             by reporting_event_path;
573        run;
574        data _null_;
575             set logsumm;
576             by reporting_event_path;
577             if first.reporting_event_path=0 or last.reporting_event_path=0;
578             put "W" "ARNING: unexpected dashboard overview records";
579             put _all_;
580        run;
581
582        /*Add number of dashboard updates were needed in reporting event*/
583        data norefresh (keep=reporting_event_path msg) withrefresh ;
584             length refrmsg $100;
585             set jobout.refreshedoutputs;
586             if msg="No refresh needed" then output norefresh;
587             else if db2message="refreshedoutputs exists" then output withrefresh;
588        run;
589        proc means data=withrefresh noprint;
590             var ordinal_root;
591             by reporting_event_path;
592             output out=neededupdates (drop=_: ) max=dbupdates;
                                                           The SAS System

593        run;
594        data refr (drop=dbupdates msg);
595             length refrmsg $100;
596             set norefresh (in=a) neededupdates (in=b);
597             by reporting_event_path;
598             if a then refrmsg='No';
599             if b then do;
600                  if dbupdates=1 then refrmsg = strip(put(dbupdates,8.))|| ' program';
601                  else refrmsg = strip(put(dbupdates,8.))|| ' programs';
602             end;
603        run;
604        data _null_;
605             set refr;
606             by reporting_event_path;
607             if first.reporting_event_path=0 or last.reporting_event_path=0;
608             put "W" "ARNING: unexpected refreshedoutputs records";
609             put _all_;
610        run;
611        /*program summary*/
612        proc sort data=jobout.report1 out=pgm;
613             by reporting_event_path sas_program;
ERROR: Variable SAS_PROGRAM not found.
614             where db2message="report1 exists";
615        run;
WARNING: The data set WORK.PGM may be incomplete.  When this step was stopped there were 0 observations and 0 variables.
616        data pgmcat;
617             set pgm;
618             by reporting_event_path sas_program;
619             if first.sas_program=0 and last.sas_program=0 then put "W" "ARNING: unexpected duplication of programs";
620
621             existscat = (sasprog_exist="Yes");
622             if sasprog_exist="Yes" then do;
623                  headercat = (headercheck=:"0 Fails");
624                  logcat = (logcheck="clean");
625                  issuecat = (not(headercat and logcat));
626             end;
627        run;
ERROR: BY variable reporting_event_path is not on input data set WORK.PGM.
ERROR: BY variable sas_program is not on input data set WORK.PGM.
WARNING: The data set WORK.PGMCAT may be incomplete.  When this step was stopped there were 0 observations and 7 variables.
628        proc means data=pgmcat noprint;
629             var existscat issuecat;
630             by reporting_event_path;
ERROR: Variable REPORTING_EVENT_PATH not found.
631             output out=pgmsumm (drop=_: x) n=expectedpgm x sum=createdpgm issuepgm;
632        run;
WARNING: The data set WORK.PGMSUMM may be incomplete.  When this step was stopped there were 0 observations and 0 variables.
633        /*outputs summary*/
634        proc sort data=jobout.report2 (encoding=any) out=outputs;
635             by reporting_event_path outputfilename;
ERROR: Variable OUTPUTFILENAME not found.
636             where db2message="report2 exists";
637        run;
WARNING: The data set WORK.OUTPUTS may be incomplete.  When this step was stopped there were 0 observations and 0 variables.
638        data outputscat;
639             set outputs;
640             by reporting_event_path outputfilename;
641             if first.outputfilename=0 and last.outputfilename=0 then put "W" "ARNING: unexpected duplication of output filename"
                                                           The SAS System

641      ! ;
642
643             existscat = (not missing(pathlog) or not missing(datasetlogpath));
644             if existscat then do;
645                  issuecat = (logcheck ne "clean");
646             end;
647        run;
ERROR: BY variable reporting_event_path is not on input data set WORK.OUTPUTS.
ERROR: BY variable outputfilename is not on input data set WORK.OUTPUTS.
WARNING: The data set WORK.OUTPUTSCAT may be incomplete.  When this step was stopped there were 0 observations and 5 variables.
648        proc means data=outputscat noprint;
649             var existscat issuecat;
650             by reporting_event_path;
ERROR: Variable REPORTING_EVENT_PATH not found.
651             output out=outputscatsumm (drop=_: x) n=expectedoutput x sum=createdoutput issueoutput;
652        run;
WARNING: The data set WORK.OUTPUTSCATSUMM may be incomplete.  When this step was stopped there were 0 observations and 0 variables.
653
654        proc sql noprint;
655             select count(unique(reporting_event_path)) into : allresdb
656             from pgmcat;
ERROR: The following columns were not found in the contributing tables: reporting_event_path.
657             select count(unique(reporting_event_path)) into : allres
658             from jobout.report1;
659        quit;
660        proc sql noprint;
661             select sum(existscat) into : allprograms
662             from pgmcat;
663        quit;
664        proc sql noprint;
665             select sum(existscat) into : alloutputs
666             from outputscat;
667        quit;
668        %let alloutputs=&alloutputs;
669        %let allprograms=&allprograms;
670        %let allres=&allres;
WARNING: Apparent symbolic reference ALLRES not resolved.
ERROR: The text expression &ALLRES contains a recursive reference to the macro variable ALLRES.  The macro variable will be
       assigned the null value.
671        %let allresdb=&allresdb;
WARNING: Apparent symbolic reference ALLRESDB not resolved.
ERROR: The text expression &ALLRESDB contains a recursive reference to the macro variable ALLRESDB.  The macro variable will be
       assigned the null value.
672        %put &=allres &=allresdb &=allprograms &=alloutputs;
ALLRES= ALLRESDB= ALLPROGRAMS=. ALLOUTPUTS=.
673
674        data jobout.metaplus;
675             length reporting_event_path dbnote $200 retype $20;
676             merge jobout.metaplus (in=a) logsumm refr pgmsumm outputscatsumm;
677             by reporting_event_path;
678             if a;
679             if index(re,'/')>0 then retype="cro oversight";
680             else retype="reporting event";
681        run;
ERROR: BY variable reporting_event_path is not on input data set WORK.PGMSUMM.
ERROR: BY variable reporting_event_path is not on input data set WORK.OUTPUTSCATSUMM.
WARNING: The data set JOBOUT.METAPLUS may be incomplete.  When this step was stopped there were 0 observations and 26 variables.
WARNING: Data set JOBOUT.METAPLUS was not replaced because this step was stopped.
                                                           The SAS System

682
683        %macro addnote;
684        %if %varexist(jobout.metaplus,dbnote) %then %let addnote=1;
685        %else %let addnote=0;
686        %put &=addnote PRE;
687        data jobout.metaplus;
688             set jobout.metaplus;
689             if status="final" and reldays<30 then do;
690                  dbnote="status is final, but reldays ("||strip(put(reldays,8.))||") <30";
691                  call symputx("addnote","1");
692                  put reporting_event_path= status= reldays=;
693             end;
694        run;
695        %put &=addnote POST;
696        %if addnote=0 %then %do;
697        data jobout.metaplus;
698             set jobout.metaplus;
699             drop dbnote;
700        run;
701        %end;
702        %mend addnote;
703        %addnote;
ADDNOTE=1 PRE
MPRINT(ADDNOTE):   data jobout.metaplus;
MPRINT(ADDNOTE):   set jobout.metaplus;
MPRINT(ADDNOTE):   if status="final" and reldays<30 then do;
MPRINT(ADDNOTE):   dbnote="status is final, but reldays ("||strip(put(reldays,8.))||") <30";
MPRINT(ADDNOTE):   call symputx("addnote","1");
MPRINT(ADDNOTE):   put reporting_event_path= status= reldays=;
MPRINT(ADDNOTE):   end;
MPRINT(ADDNOTE):   run;
Reporting_Event_Path=/clinical/argx-113/cidp/argx-113-1802/biostat/staging/adhoc status=final reldays=6
Reporting_Event_Path=/clinical/argx-113/itp/argx-113-2004/biostat/staging/create_dummy_data status=final reldays=11
Reporting_Event_Path=/clinical/argx-113/itp/argx-113-2005/biostat/staging/patient_profiles status=final reldays=28
Reporting_Event_Path=/clinical/argx-113/mg/argx-113-1705/biostat/staging/ma2022 status=final reldays=18
Reporting_Event_Path=/clinical/argx-113/mg/argx-113-9006/biostat/staging/iss/qc_adam status=final reldays=18
ADDNOTE=1 POST
704
705        proc means data=jobout.metaplus noprint;
706             var nbfiles totalsize;
707             output out=allallsumm (drop=_: nsize) n=nreevents nsize sum=summfiles summsize;
708        run;
709        proc means data=jobout.metaplus noprint;
710             var nbfiles totalsize;
711             class status compound indication study retype;
ERROR: Variable RETYPE not found.
712             types status status*compound status*compound*indication status*compound* indication* study status*retype retype;
ERROR: Variable RETYPE not found.
ERROR: Variable RETYPE not found.
713             output out=allsumm (drop=_: nsize) n=nreevents nsize sum=summfiles summsize;
714        run;
WARNING: The data set WORK.ALLSUMM may be incomplete.  When this step was stopped there were 0 observations and 0 variables.
715        data allsumm;
716             set allsumm;
717             if status='gadam' and not missing(study) then delete;
718             if missing(status) then status='All';
719             if missing(compound) then compound='All';
720             if missing(indication) then indication='All';
                                                           The SAS System

721             if missing(study) then study='All';
722             sizemb = round(summsize / 1000000,.01);
723        run;
724        proc sort data=allsumm;
725             by status compound indication study retype;
ERROR: Variable RETYPE not found.
726        run;
727        data allsummtot;
728             set allallsumm (in=a) allsumm (where=(not missing(retype)));
ERROR: Variable retype is not on file WORK.ALLSUMM.
729             if missing(status) then status='All';
730             if missing(retype) then retype='All';
731             sizemb = round(summsize / 1000000,.01);
732        run;
WARNING: The data set WORK.ALLSUMMTOT may be incomplete.  When this step was stopped there were 0 observations and 6 variables.
733
734
735        /* 4) Create dashboard */
736        /*check if metaplus has dbnote column, if so display the comment*/
737        %macro cm;
738        %if %varexist(jobout.metaplus,dbnote) %then %do;
739             data cmnts;
740                  set jobout.metaplus;
741                  where not missing(dbnote);
742                  keep reporting_event_path dbnote nameLastModified;
743             run;
744             proc report data=cmnts split='!' headline;
745                  column reporting_event_path dbnote nameLastModified;
746                  define reporting_event_path /group width = 130 "Reporting event path" flow style(column)=[cellwidth=4.4in];
747                  define dbnote               /group width = 30  "Message" flow              style(column)=[cellwidth=2.1in];
748                  define nameLastModified     /group width = 30  "Name Last Modified" flow     style(column)=[cellwidth=2.1in];
749             run;
750        %end;
751        %mend cm;
752
753        proc sort data=jobout.metaplus out=metaplus;
754             by compound indication study re;
755        run;
756
757        %let logviewer=https://xarprod.ondemand.sas.com/lsaf/filedownload/sdd:///general/biostat/tools/logviewer/index.html;
758        %let      dash=https://xarprod.ondemand.sas.com/lsaf/filedownload/sdd:///general/biostat/tools/projectstatus/index.html;
759
760        options ls=160 ps=50;
761        ods html5 style=Meadow  path="&_sasws_/general/biostat/jobs/dashboard/dev/output" body="dashboard.html" (TITLE="Dashboard")
761      ! options(svg_mode="inline")
762        HEADTEXT= '<link rel="icon" href="data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%2210 0 100 100%22><text y=%22.90em%22
762      ! font-size=%2290%22>⛅</text></svg>">';
763        title; footnote; options nodate missing=' ' ps=45 ls=140;
                                                               The SAS System

764        ods escapechar="^";
765        ods layout gridded advance=explicit columns=2 column_gutter=2;
766        /*ods text="&compound./&indication./&study./&revent - Status report created on &sysdate &systime GMT";*/
767        ods text="Dashboard created on &sysdate &systime GMT - processing time &hours hours &minutes minutes %sysfunc(putn(&seconds,4.2))
767      !  seconds";
768        ods region column=1;
769        %cm;
MPRINT(CM):   data cmnts;
MPRINT(CM):   set jobout.metaplus;
MPRINT(CM):   where not missing(dbnote);
MPRINT(CM):   keep reporting_event_path dbnote nameLastModified;
MPRINT(CM):   run;
MPRINT(CM):   proc report data=cmnts split='!' headline;
MPRINT(CM):   column reporting_event_path dbnote nameLastModified;
MPRINT(CM):   define reporting_event_path /group width = 130 "Reporting event path" flow style(column)=[cellwidth=4.4in];
MPRINT(CM):   define dbnote /group width = 30 "Message" flow style(column)=[cellwidth=2.1in];
MPRINT(CM):   define nameLastModified /group width = 30 "Name Last Modified" flow style(column)=[cellwidth=2.1in];
MPRINT(CM):   run;
770
771        ods text="Active Reporting Events (&allres), with dashboard (&allresdb) - Total created SAS programs: &allprograms - Total
771      ! created outputs: &alloutputs";
772        data metapluslink;
773             set metaplus (where=(status='development'));
774             length relink $500;
775             if logcheck not in ("No dashboard" "" " ") then
776             relink =
776      ! "https://xarprod.ondemand.sas.com/lsaf/filedownload/sdd%3A//"||strip(reporting_event_path)||'/documents/projectstatus.html';
777        run;
778        proc report data=metapluslink split='!' headline;
779             column reporting_event_path compound indication study relink re hrefdblog logcheck refrmsg dateLastModified reldays
779      ! daysactive ("SAS programs" expectedpgm createdpgm issuepgm)
780                    ("Outputs" expectedoutput createdoutput issueoutput);
781             define reporting_event_path        / noprint;
782             define compound         /group width = 30 "Compound" flow                         style(column)=[cellwidth=0.6in];
783             define indication       /group width = 30 "Indication" flow                       style(column)=[cellwidth=0.6in];
784             define study            /group width = 30 "Study" flow                            style(column)=[cellwidth=0.8in];
785             define relink           / noprint;
786             define re               /group width = 30 "Reporting Event!+ link to dashboard" flow       style(column)=[cellwidth=0.7in];
787             define hrefdblog        / noprint;
788             define logcheck         / width = 15 "Dashboard log file" flow                    style(column)=[cellwidth=0.8in];
789             define refrmsg          / width = 15 "Need recheck by DB?" flow                   style(column)=[cellwidth=0.6in];
790             define dateLastModified / width = 15 format=DATETIME16. "Date last modified" flow style(column)=[cellwidth=0.7in];
791             define reldays          / width = 40 format=8. "Days since last modified" flow    style(column)=[cellwidth=0.7in];
                                                               The SAS System

792             define daysactive       / width = 40 format=8. "Days last modified - creation"    style(column)=[cellwidth=0.7in];
793             define expectedpgm      / width = 15 format=8. "Expected" flow                    style(column)=[cellwidth=0.5in];
794             define issuepgm         / width = 15 format=8. "With issues"  flow                style(column)=[cellwidth=0.4in];
795             define createdpgm       / width = 15 format=8. "Created"  flow                    style(column)=[cellwidth=0.4in];
796             define expectedoutput   / width = 15 format=8. "Expected" flow                    style(column)=[cellwidth=0.5in];
797             define issueoutput      / width = 15 format=8. "With issues"  flow                style(column)=[cellwidth=0.4in];
798             define createdoutput    / width = 15 format=8. "Created"  flow                    style(column)=[cellwidth=0.4in];
799             compute logcheck ;
800                  if not missing(hrefdblog) >0 then do;
801                       call define(_col_, 'URL',
801      ! "%superq(logviewer)?log=https://xarprod.ondemand.sas.com/lsaf/filedownload/sdd%3A//"||strip(hrefdblog));
802                       call define(_col_, 'style', 'style={hreftarget="_blank" flyover="Click to go to log file"}');
803                       if logcheck not in ("clean") then do;
804                            call define(_col_, 'style', 'style=[backgroundcolor=lightyellow]');
805                       end;
806                  end;
807             endcomp;
808             compute re ;
809                  call define(_col_, 'URL', relink);
810                  call define(_col_, 'style', 'style={hreftarget="_blank" flyover="Click to go to reporting event dashboard"}');
811             endcomp;
812             compute refrmsg ;
813                  if refrmsg not in ("" "No") then do;
814                       call define(_col_, 'style', 'style=[backgroundcolor=lightorange]');
815                  end;
816             endcomp;
817                compute reldays ;
818                  if reldays.sum>30 then do;
819                       call define(_col_, 'style', 'style=[backgroundcolor=lightorange]');
820                  end;
821             endcomp;
822             compute issuepgm ;
823                  if not missing(issuepgm.sum) and issuepgm.sum>0 then do;
824                       call define(_col_, 'style', 'style=[backgroundcolor=lightyellow]');
825                  end;
826             endcomp;
827             compute createdpgm ;
828                  if not missing(createdpgm.sum) and createdpgm.sum=expectedpgm.sum /**and issuepgm.sum=0*/ then do;
829                       call define(_col_, 'style', 'style=[backgroundcolor=lightgreen]');
830                  end;
831             endcomp;
832             compute issueoutput ;
833                  if not missing(issueoutput.sum) and issueoutput.sum>0 then do;
                                                               The SAS System

834                       call define(_col_, 'style', 'style=[backgroundcolor=lightyellow]');
835                  end;
836             endcomp;
837             compute createdoutput ;
838                  if not missing(createdoutput.sum) and createdoutput.sum=expectedoutput.sum /**and issuepgm.sum=0*/ then do;
839                       call define(_col_, 'style', 'style=[backgroundcolor=lightgreen]');
840                  end;
841             endcomp;
842        run;
NOTE: Groups are not created because the usage of Reporting_Event_Path is DISPLAY. To avoid this note, change all GROUP variables to ORDER
variables.
ERROR: The variable type of 'CREATEDPGM.SUM'n is invalid in this context.
ERROR: The variable type of 'CREATEDPGM.SUM'n is invalid in this context.
ERROR: The variable type of 'EXPECTEDPGM.SUM'n is invalid in this context.
ERROR: The variable type of 'ISSUEPGM.SUM'n is invalid in this context.
ERROR: The variable type of 'ISSUEPGM.SUM'n is invalid in this context.
ERROR: The variable type of 'CREATEDOUTPUT.SUM'n is invalid in this context.
ERROR: The variable type of 'CREATEDOUTPUT.SUM'n is invalid in this context.
ERROR: The variable type of 'EXPECTEDOUTPUT.SUM'n is invalid in this context.
ERROR: The variable type of 'ISSUEOUTPUT.SUM'n is invalid in this context.
ERROR: The variable type of 'ISSUEOUTPUT.SUM'n is invalid in this context.
843        ods text="^{style [font_size=12pt width=80pct just=center hreftarget='_blank' url='%superq(dash)'] (All Project Status
843      ! Dashboards)}";
844        ods region column=2;
845        proc report data=allsummtot  split='!' headline;
846             column status retype nreevents summfiles sizemb ;
847             define status         /group width = 30 "Status" flow                         style(column)=[cellwidth=0.7in];
848             define retype         /group width = 30 "Reporting event type" flow           style(column)=[cellwidth=2.2in];
849             define nreevents      /group width = 30 "Nb Reporting events" flow  format=8. style(column)=[cellwidth=0.7in];
850             define summfiles      /group width = 30 "Nb Files" flow  format=8. style(column)=[cellwidth=0.7in];
851             define sizemb         /group width = 30 "Total size (MB)" flow            style(column)=[cellwidth=0.7in];
852        run;
853        proc report data=allsumm (where=(missing(retype))) split='!' headline;
ERROR: Variable retype is not on file WORK.ALLSUMM.
854             column status compound indication study nreevents summfiles sizemb ;
855             define status         /group width = 30 "Status" flow                         style(column)=[cellwidth=0.7in];
856             define compound       /group width = 30 "Compound" flow                       style(column)=[cellwidth=0.7in];
857             define indication     /group width = 30 "Indication" flow                     style(column)=[cellwidth=0.7in];
858             define study          /group width = 30 "Study" flow                          style(column)=[cellwidth=0.8in];
859             define nreevents      /group width = 30 "Nb Reporting events" flow  format=8. style(column)=[cellwidth=0.7in];
860             define summfiles      /group width = 30 "Nb Files" flow  format=8. style(column)=[cellwidth=0.7in];
861             define sizemb         /group width = 30 "Total size (MB)" flow            style(column)=[cellwidth=0.7in];
862        run;
                                                               The SAS System

863
864        ods layout end;
865        ods _all_ close;
866        ods listing;
867
868        %clock (dashboard + status + collect + report);
MPRINT(CLOCK):   * seconds ;
MPRINT(CLOCK):   * convert seconds to days ;
MPRINT(CLOCK):   * subtract days from run time ;
COMPUTATION TIME for dashboard + status + collect + report : 0 days 0 hours 26 minutes 51.8 seconds
=================================================================================================================
869
870        /* 5) Set development projects to final that have not changed in >30 days*/
871        data _null_;
872        curr_date=put(datepart(datetime()),date9.);
873        call symput("cdate",curr_date);
874        run;
875        %put &=cdate.;
CDATE=11APR2023
876
877        %macro updateprojects(debug=N);
878        proc sql noprint feedback;
879        select max(reldays) into: maxredays from jobout.metaplus;
880        quit;
881
882        %if &maxredays >= &defined_min_days. %then %do;
883        	libname pjmeta xlsx "&_sasws_./general/biostat/metadata/projects/projectsmeta.xlsx";
884        	%let shtname=projectsmeta;
885
886        	data mt30 jobout.settofinal_&cdate.;
887        		*only apply to development projects;
888        		set jobout.metaplus(where=(reldays>=&defined_min_days. and lowcase(status)=lowcase("development")));
889        	run;
890
891        	proc sql noprint feedback;
892        	create table pjmeta1 as
893        	select a.*, b.reldays
894        	from pjmeta.&shtname. as a left join mt30 as b on a.Reporting_Event_Path=b.Reporting_Event_Path;
895        	quit;
896
897        	data pjmeta2(drop=reldays);
898        		set pjmeta1;
899
                                                               The SAS System

900        		if reldays>=&defined_min_days. and lowcase(status)=lowcase("development") then status="final";
901        	run;
902
903        	data pjmeta.&shtname.;
904        		set pjmeta2;
905        	run;
906
907            %macro lowc (_dsetin);
908
909            proc contents noprint data=&_dsetin out=cnt (keep=name);
910            run;
911            %let nbvars=0;
912            data _null_;
913                 set cnt end=last;
914                 where name ne lowcase(name);
915                 call symputx("lowvar"||strip(put(_n_,8.)),strip(lowcase(name)));
916                 call symputx("highvar"||strip(put(_n_,8.)),strip(upcase(name)));
917                 if last then call symputx("nbvars",strip(put(_n_,8.)));
918            run;
919            %if &nbvars>0 %then %do;
920                 proc datasets lib=work nolist;
921                      modify &_dsetin;
922                      rename %do i = 1 %to &nbvars; &&highvar&i=&&lowvar&i %end;;
923                 run;
924                 quit;
925            %end;
926
927            %mend lowc;
928         	%lowc (pjmeta2);
929
930        	proc json out="&&_sasws_./general/biostat/metadata/projects/projectsmeta.json" pretty;
931        	     export pjmeta2 / nosastags;
932        	run;
933        %end;
934        %mend updateprojects;
935        %updateprojects;
MPRINT(UPDATEPROJECTS):   proc sql noprint feedback;
MPRINT(UPDATEPROJECTS):   select max(reldays) into: maxredays from jobout.metaplus;

        select MAX(METAPLUS.reldays)
          into :maxredays
          from JOBOUT.METAPLUS;

                                                               The SAS System

MPRINT(UPDATEPROJECTS):   quit;
MPRINT(UPDATEPROJECTS):   libname pjmeta xlsx
"/lsafshared/SASWorkspaces/.transient/dashboard2.job-4a37a855-ba33-4b52-9ced-c0df0b457280/general/biostat/metadata/projects/projectsmeta.xls
x";
MPRINT(UPDATEPROJECTS):   data mt30 jobout.settofinal_11APR2023;
MPRINT(UPDATEPROJECTS):   *only apply to development projects;
MPRINT(UPDATEPROJECTS):   set jobout.metaplus(where=(reldays>=30 and lowcase(status)=lowcase("development")));
MPRINT(UPDATEPROJECTS):   run;
MPRINT(UPDATEPROJECTS):   proc sql noprint feedback;
MPRINT(UPDATEPROJECTS):   create table pjmeta1 as select a.*, b.reldays from pjmeta.projectsmeta as a left join mt30 as b on
a.Reporting_Event_Path=b.Reporting_Event_Path;

        select a.Reporting_Event_Path, a.status, a.LOT, a.LOT_sheet, a.SharePoint_list, B.reldays
          from PJMETA.projectsmeta a left outer join WORK.MT30 B on a.Reporting_Event_Path = B.Reporting_Event_Path;

MPRINT(UPDATEPROJECTS):   quit;
MPRINT(UPDATEPROJECTS):   data pjmeta2(drop=reldays);
MPRINT(UPDATEPROJECTS):   set pjmeta1;
MPRINT(UPDATEPROJECTS):   if reldays>=30 and lowcase(status)=lowcase("development") then status="final";
MPRINT(UPDATEPROJECTS):   run;
MPRINT(UPDATEPROJECTS):   data pjmeta.projectsmeta;
MPRINT(UPDATEPROJECTS):   set pjmeta2;
MPRINT(UPDATEPROJECTS):   run;
MPRINT(LOWC):   proc contents noprint data=pjmeta2 out=cnt (keep=name);
MPRINT(LOWC):   run;
MPRINT(LOWC):   data _null_;
MPRINT(LOWC):   set cnt end=last;
MPRINT(LOWC):   where name ne lowcase(name);
MPRINT(LOWC):   call symputx("lowvar"||strip(put(_n_,8.)),strip(lowcase(name)));
MPRINT(LOWC):   call symputx("highvar"||strip(put(_n_,8.)),strip(upcase(name)));
MPRINT(LOWC):   if last then call symputx("nbvars",strip(put(_n_,8.)));
MPRINT(LOWC):   run;
MPRINT(LOWC):   proc datasets lib=work nolist;
MPRINT(LOWC):   modify pjmeta2;
MPRINT(LOWC):   rename LOT=lot LOT_SHEET=lot_sheet REPORTING_EVENT_PATH=reporting_event_path SHAREPOINT_LIST=sharepoint_list;
MPRINT(LOWC):   run;
MPRINT(LOWC):   quit;
MPRINT(UPDATEPROJECTS):  ;
MPRINT(UPDATEPROJECTS):   proc json
out="/lsafshared/SASWorkspaces/.transient/dashboard2.job-4a37a855-ba33-4b52-9ced-c0df0b457280/general/biostat/metadata/projects/projectsmeta
.json" pretty;
MPRINT(UPDATEPROJECTS):   export pjmeta2 / nosastags;
MPRINT(UPDATEPROJECTS):   run;
                                                               The SAS System

936
937
938
939        ;*';*";*/;*); run; quit;
940        proc scaproc; write; run;
941        options nonotes;
942

/**********************************************************************************************************************
 * Submission End: dashboard2.sas
 * Apr 11, 2023 03:03:00 GMT
 *********************************************************************************************************************/
