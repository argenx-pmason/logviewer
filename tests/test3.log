1                                                          The SAS System                     Tuesday, February 14, 2023 11:49:00 PM

NOTE: Copyright (c) 2016 by SAS Institute Inc., Cary, NC, USA. 
NOTE: SAS (r) Proprietary Software 9.4 (TS1M7 MBCS3170) 
      Licensed to ARGENX VIA OCS CONSULTING_SAS LSAF_SAAS, Site 70265777.
NOTE: This session is executing on the Linux 4.18.0-305.19.1.el8_4.x86_64 (LIN X64) platform.



NOTE: Analytical products:
      
      SAS/STAT 15.2
      SAS/IML 15.2

NOTE: Additional host information:

 Linux LIN X64 4.18.0-305.19.1.el8_4.x86_64 #1 SMP Tue Sep 7 07:07:31 EDT 2021 x86_64 Red Hat Enterprise Linux release 8.4 (Ootpa) 

You are running SAS 9. Some SAS 8 files will be automatically converted 
by the V9 engine; others are incompatible.  Please see 
http://support.sas.com/rnd/migration/planning/platform/64bit.html

PROC MIGRATE will preserve current SAS file attributes and is 
recommended for converting all your SAS libraries from any 
SAS 8 release to SAS 9.  For details and examples, please see
http://support.sas.com/rnd/migration/index.html


This message is contained in the SAS news file, and is presented upon
initialization.  Edit the file "news" in the "misc/base" directory to
display site-specific news and information in the program log.
The command line option "-nonews" will prevent this display.




NOTE: SAS Initialization used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      
NOTE: The autoexec file, /sso/biconfig/940/Lev1/LSAFApp/WorkspaceServer/autoexec.sas, was executed at server initialization.
1          options nofmterr;
2          options dtreset;
3          options locale=EN_US;
4          %let _SDDUSR_=%bquote(jbodart);
5          %let _SASWS_ =
5        ! %nrstr("/lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba");
6          %let _SASWS_ = %qsubstr(&_SASWS_, 2, %length(&_SASWS_) - 2);
7          %let _SASUSRWS_ =
7        ! %nrstr("/lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/Users/jbo
7        ! dart");
8          %let _SASUSRWS_ = %qsubstr(&_SASUSRWS_, 2, %length(&_SASUSRWS_) - 2);
9          %let _SASINSTANCE_ = %nrstr("xarprod.ondemand.sas.com");
10         %let _SASINSTANCE_ = %qsubstr(&_SASINSTANCE_, 2, %length(&_SASINSTANCE_) - 2);
11         options nosource;

NOTE: DATA statement used (Total process time):
      real time           1.02 seconds
      cpu time            0.01 seconds
      
2                                                          The SAS System                     Tuesday, February 14, 2023 11:49:01 PM


18         

/**********************************************************************************************************************
 * Submission Start: gadam_ongoing_studies.sas
 * Feb 14, 2023 23:49:02 GMT by jbodart
 *********************************************************************************************************************/
3                                                          The SAS System                     Tuesday, February 14, 2023 11:49:02 PM

19         options nosyntaxcheck errorcheck=strict notes;
20         ;*';*";*/;*); run; quit;
21         
22         %let _SASFILELOCATION_ = %nrstr("/general/biostat/jobs/gadam_ongoing_studies/prod/programs");
23         %let _SASFILELOCATION_ = %qsubstr(&_SASFILELOCATION_, 2, %length(&_SASFILELOCATION_) - 2);
24         %let _SASFILEPATH_ = %nrstr("/general/biostat/jobs/gadam_ongoing_studies/prod/programs/gadam_ongoing_studies.sas");
25         %let _SASFILEPATH_ = %qsubstr(&_SASFILEPATH_, 2, %length(&_SASFILEPATH_) - 2);
26         
27         /********************************************************************************************************************/
28         proc scaproc; record "&_SASWS_/.sessions/6/sca_a8a6e0a0-4eb3-4f62-9b95-167061dc3cca.txt" EXPANDMACROS; run;

NOTE: PROCEDURE SCAPROC used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

29         
30         options nomprint;
31         /********************************************************************************************************************/
32         /* Macro Variables for Job Parameters */
33         %let create_folder=Y;
34         %let create_gadam_folder=Y;
35         %let setup_gadam_folder=N;
36         %let gadam_files_source=/general/biostat/gadam;
37         %let rebuild_gadam_datasets=Y;
38         %let qc_gadam_vs_study=Y;
39         %let check_and_load_gadam=Y;
40         %let run_gadam_tables=Y;
41         %let wait=Y;
42         %let force=;
43         %let mock=;
44         %let refresh_sdtm=Y;
45         %let pool_sdtm=Y;
46         %let run_next_job=N;
47         %let next_job=/general/biostat/jobs/gadam_rebuild_adam/dev/jobs/job_gadam_rebuild_adam.job;
48         %let compounds=argx-117;
49         %let indications=;
50         %let studies=;
51         %let domains=;
52         %let last_refresh_reldy=. - 0;
53         %let job_instance=Ngos117Prod;
54         %let _PARENTJOB_WS_=;
55         %let _PARENTJOB_WRK_=;
56         %let USE_SAS_WORKSPACE_MACROS=;
57         
58         /********************************************************************************************************************/
59         
60         /************************************************************************************************************************
60       ! *******************
61         @file
62         @brief      Scheduled job to automatically perform the following steps on ongoing studies:
63                     - refresh SDTM datasets in [study]/biostat/staging/data_received/sdtm_last folder when new datasets are
63       ! created below
64                       [study]/dm/staging/current
65                     - trigger additional processes (add as needed)
66         @author     Jean-Michel Bodart
67         @date       2021-08-17
68         
4                                                          The SAS System                     Tuesday, February 14, 2023 11:49:02 PM

69         #### Process Overview ####
70         
71               /general/biostat/jobs/gadam_ongoing_studies/dev/programs/gadam_ongoing_studies.sas
72                  |
73                  +---> /general/biostat/jobs/gadam_ongoing_studies/dev/jobs/job_lsaf_get_last_sdtm.job
74                  |         |
75                  |         \---> /general/biostat/jobs/gadam_ongoing_studies/dev/programs/lsaf_get_last_sdtm.sas
76                  |                   |
77                  |                   \---> /general/biostat/jobs/gadam_refresh_sdtm_last/dev/jobs/job_gadam_refresh_sdtm_last.job
78                  |                             |
79                  |                             \--->
79       ! /general/biostat/jobs/gadam_refresh_sdtm_last/dev/programs/gadam_refresh_sdtm_last.sas
80                  |                                      |
81                  |                                      +--->
81       ! /clinical/<compound>/<indication>/<study>/biostat/staging/data_received/sdtm_last/xx.sas7bdat
82                  |                                      +--->
82       ! /clinical/<compound>/<indication>/<study>/biostat/staging/data_received/sdtm_last/refresh.sas7bdat
83                  |                                      \--->
83       ! /general/biostat/jobs/gadam_refresh_sdtm_last/dev/output/refresh.sas7bdat
84                  |
85                  +---> /general/biostat/jobs/gadam_ongoing_studies/dev/jobs/job_lsaf_pool_last_sdtm.job
86                  |         |
87                  |         \---> /general/biostat/jobs/gadam_ongoing_studies/dev/programs/lsaf_pool_last_sdtm.sas
88                  |                   |
89                  |                   \--->
89       ! /general/biostat/jobs/gadam_ongoing_studies/dev/jobs/sdtm_pool-<compound>-<indication>.job
90                  |                             |
91                  |                             \--->
91       ! /general/biostat/jobs/gadam_ongoing_studies/dev/programs/gadam_refresh_sdtm_pool.sas
92                  |                                      |
93                  |                                      +--->
93       ! /clinical/<compound>/<indication>/<compound>-0000/biostat/staging/data_received/sdtm_last/xx.sas7bdat
94                  |                                      +--->
94       ! /clinical/<compound>/<indication>/<compound>-0000/biostat/staging/data_received/sdtm_last/refresh_sdtm_pool.sas7bdat
95                  |                                      \--->
95       ! /general/biostat/jobs/gadam_ongoing_studies/dev/output/refresh_sdtm_pool.sas7bdat
96                  |
97                  |
98                  +---> /general/biostat/jobs/gadam_refresh_sdtm_last/dev/jobs/job_gadam_refresh_sdtm_overview.job
99                           |
100                          \---> /general/biostat/jobs/gadam_refresh_sdtm_last/dev/programs/gadam_refresh_sdtm_overview.sas
101                                               |
102                                               \--->
102      ! /general/biostat/jobs/gadam_refresh_sdtm_last/dev/output/gadam_refresh_sdtm_overview_summary.html
103        
104        
105              Where
106                 xx.sas7bdat                              are SDTM datasets for an individual study or pooled studies (within or
106      ! across indications)
107                 refresh.sas7bdat                         is a dataset that keeps track of all SDTM refresh jobs run in
107      ! individual studies (with flags
108                                                        indicating whether any SDTM updates were made or not and why)
109                 refresh_sdtm_pool.sas7bdat               is a dataset that keeps track of all pooled SDTM refresh jobs
110                 gadam_refresh_sdtm_overview_summary.html is a report based on refresh.sas7bdat that attempts to summarize the
110      ! STDM update job runs,
111                                                        the studies and domains with SDTM recently updated, any issues
111      ! encountered...
112        
5                                                          The SAS System                     Tuesday, February 14, 2023 11:49:02 PM

113        #### Update History ####
114        
115            Date             Name                        Description
116            ------------     --------------------------
116      ! -------------------------------------------------------------------------------------------
117            2021-12-16       jbodart                     - add call to run job_unzip_sdtm_sources.job
118            2022-01-05       jbodart                     - submit job job_lsaf_get_last_sdtm.job not only when requested to
118      ! create/refresh sdtm_last
119                                                           but also when requested to create/setup generic_adam folders
120            2022-01-11       jbodart                     - use separate job to create SDTM pooling jobs per compound, within and
120      ! across indications
121            2022-02-12       jbodart                     - run job to refresh the studies status in
121      ! /general/biostat/metadata/projects/studies_status.sas7bdat
122            2022-03-15       jbodart                     - run job to pool gadam qc overviews
123            2022-07-10       jbodart                     - stop redirecting log
124            2022-08-25       azaniewska                  - add a call to run getdata.job (gadam dashboard job getting data for
124      ! the plots)
125            2022-08-29       jbodart                     - allow to process generic_adam folders in pooled studies argx-nnn-0000
125      ! without having to
126                                                           refersh sdtm pools.
127            2022-09-08       jbodart                     - Use %submit_job with parent_job_instance = &job_instance.
128            2022-11-04       jbodart                     - Add: submit job
128      ! /general/biostat/jobs/gadam_rebuild_adam/dev/jobs/job_collect_generic_var_all.job
129            2023-02-10       jbodart                     - Do not run job_lsaf_pool_last_sdtm.job if &pool_sdtm = N.
130        @cond
131        *************************************************************************************************************************
131      ! ******************/
132        
133        %setenv(ini=0);
MPRINT(SETENV):   source source2 nofmterr notes spool nodate nonumber MAUTOCOMPLOC NOMAUTOLOCDISPLAY;
MPRINT(SETENV):   * in case run in batch;
(SETENV): _SASFILEPATH_ = /general/biostat/jobs/gadam_ongoing_studies/prod/programs/gadam_ongoing_studies.sas
(SETENV): path1 = /general/biostat/jobs/gadam_ongoing_studies/prod/programs/gadam_ongoing_studies.sas
(SETENV): _sasws_ = /lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba
(SETENV): runenvironment = repository
MPRINT(SETENV):   *libname projmeta "&projectsmetapath" access=readonly;
MPRINT(SETENV):   data gen_setenv(keep=fname ver maxver);
MPRINT(SETENV):   length fref $8 dirname fname $400;
MPRINT(SETENV):   direxists = 0;
MPRINT(SETENV):   found = 0;
MPRINT(SETENV):   maxver = .;
MPRINT(SETENV):   
dirname="/lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/biostat/mac
ros/_library";
MPRINT(SETENV):   rc=filename(fref, dirname);
MPRINT(SETENV):   did=dopen(fref);
MPRINT(SETENV):   if did > 0 then do;
MPRINT(SETENV):   direxists=1;
MPRINT(SETENV):   memcount=dnum(did);
MPRINT(SETENV):   do i = 1 to memcount;
MPRINT(SETENV):   fname=dread(did, i);
MPRINT(SETENV):   if prxmatch('/^setenv\d+\.sas$/', cats(fname)) then do;
MPRINT(SETENV):   found+1;
MPRINT(SETENV):   ver = input(prxchange('s/^setenv(\d+)\.sas$/\1/', 1, cats(fname)), best32.);
MPRINT(SETENV):   if ver > maxver then maxver = ver;
MPRINT(SETENV):   put "(SETENV):" found= fname= ver= rc= did= fref= dirname=;
MPRINT(SETENV):   output;
MPRINT(SETENV):   end;
                                                           The SAS System

MPRINT(SETENV):   *put "(&sysmacroname):" found= fname= ver= rc= did= fref= dirname=;
MPRINT(SETENV):   end;
MPRINT(SETENV):   rc=dclose(did);
MPRINT(SETENV):   end;
MPRINT(SETENV):   else do;
MPRINT(SETENV):   msg = put(sysmsg(), $400.);
MPRINT(SETENV):   put "Failed to open directory: " rc= did= fref= dirname= "sysmsg=" msg;
MPRINT(SETENV):   end;
MPRINT(SETENV):   rc=filename(fref);
MPRINT(SETENV):   run;

(SETENV):found=1 fname=setenv01.sas ver=1 rc=0 did=1 fref=#LN00016
dirname=/lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/biostat/macr
os/_library
(SETENV):found=2 fname=setenv02.sas ver=2 rc=0 did=1 fref=#LN00016
dirname=/lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/biostat/macr
os/_library
NOTE: The data set WORK.GEN_SETENV has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(SETENV):   proc sql noprint;
MPRINT(SETENV):   select fname into :gen_setenv trimmed from gen_setenv having ver = max(ver) ;
NOTE: The query requires remerging summary statistics back with the original data.
MPRINT(SETENV):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

gen_setenv = setenv02.sas
MPRINT(SETENV):   data repev_setenv(keep=fname ver maxver);
MPRINT(SETENV):   length fref frefsrc $8 setenv $32 d dirname fname msg $400;
MPRINT(SETENV):   direxists = 0;
MPRINT(SETENV):   found = 0;
MPRINT(SETENV):   maxver = .;
MPRINT(SETENV):   do 
d="/lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/biostat/jobs/gada
m_ongoing_studies/prod/macros/global_macros", 
"/lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/biostat/jobs/gadam_
ongoing_studies/prod/macros/global-macros" while(direxists=0);
MPRINT(SETENV):   put d=;
MPRINT(SETENV):   rc=filename(fref, d);
MPRINT(SETENV):   did=dopen(fref);
MPRINT(SETENV):   if did > 0 then do;
MPRINT(SETENV):   direxists=1;
MPRINT(SETENV):   dirname=d;
MPRINT(SETENV):   memcount=dnum(did);
MPRINT(SETENV):   do i = 1 to memcount;
MPRINT(SETENV):   fname=dread(did, i);
MPRINT(SETENV):   if prxmatch('/^setenv\d+\.sas$/', cats(fname)) then do;
MPRINT(SETENV):   found+1;
MPRINT(SETENV):   ver = input(prxchange('s/^setenv(\d+)\.sas$/\1/', 1, cats(fname)), best32.);
MPRINT(SETENV):   if ver > maxver then do;
MPRINT(SETENV):   maxver = ver;
MPRINT(SETENV):   setenv = fname;
                                                           The SAS System

MPRINT(SETENV):   end;
MPRINT(SETENV):   put "(SETENV):" found= fname= ver= rc= did= fref= dirname=;
MPRINT(SETENV):   output;
MPRINT(SETENV):   end;
MPRINT(SETENV):   *put "(&sysmacroname):" found= fname= ver= rc= did= fref= dirname=;
MPRINT(SETENV):   end;
MPRINT(SETENV):   rc=dclose(did);
MPRINT(SETENV):   end;
MPRINT(SETENV):   else do;
MPRINT(SETENV):   put "Failed to open directory: " rc= did= fref= dirname=;
MPRINT(SETENV):   end;
MPRINT(SETENV):   rc=filename(fref);
MPRINT(SETENV):   end;
MPRINT(SETENV):   if direxists=0 then do;
MPRINT(SETENV):   *- JMBodart 2021-10-13 - create macros folder if it does not exist (START) -*;
MPRINT(SETENV):   rc=filename(fref, 
"/lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/biostat/jobs/gadam_
ongoing_studies/prod/macros");
MPRINT(SETENV):   did=dopen(fref);
MPRINT(SETENV):   if did > 0 then do;
MPRINT(SETENV):   rc=dclose(did);
MPRINT(SETENV):   end;
MPRINT(SETENV):   else do;
MPRINT(SETENV):   dirname = dcreate("macros", 
"/lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/biostat/jobs/gadam_
ongoing_studies/prod/");
MPRINT(SETENV):   dirname = ' ';
MPRINT(SETENV):   end;
MPRINT(SETENV):   rc=filename(fref);
MPRINT(SETENV):   *- JMBodart 2021-10-13 - create macros folder if it does not exist (END) -*;
MPRINT(SETENV):   dirname=dcreate("global_macros", 
"/lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/biostat/jobs/gadam_
ongoing_studies/prod/macros");
MPRINT(SETENV):   if dirname ^= ' ' then do;
MPRINT(SETENV):   rc=filename(fref, dirname);
MPRINT(SETENV):   did=dopen(fref);
MPRINT(SETENV):   if did > 0 then do;
MPRINT(SETENV):   direxists=1;
MPRINT(SETENV):   rc=dclose(did);
MPRINT(SETENV):   end;
MPRINT(SETENV):   rc=filename(fref);
MPRINT(SETENV):   end;
MPRINT(SETENV):   end;
MPRINT(SETENV):   put dirname= direxists=;
MPRINT(SETENV):   if direxists then do;
MPRINT(SETENV):   call execute("option insert=(sasautos="||quote(cats(dirname))||");");
MPRINT(SETENV):   if found = 0 then do;
MPRINT(SETENV):   cumrc = 0;
MPRINT(SETENV):   rc=filename(frefsrc, 
"/lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/biostat/macros/_lib
rary/setenv02.sas");
MPRINT(SETENV):   if rc ne 0 then do;
MPRINT(SETENV):   msg = sysmsg();
MPRINT(SETENV):   put msg;
MPRINT(SETENV):   cumrc=rc;
MPRINT(SETENV):   end;
MPRINT(SETENV):   rc=filename(fref, cats(dirname, "/setenv02.sas"));
MPRINT(SETENV):   if rc ne 0 then do;
                                                           The SAS System

MPRINT(SETENV):   msg = sysmsg();
MPRINT(SETENV):   put msg;
MPRINT(SETENV):   cumrc=rc;
MPRINT(SETENV):   end;
MPRINT(SETENV):   if cumrc = 0 then do;
MPRINT(SETENV):   put "Copying  
""/lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/biostat/macros/_li
brary/setenv02.sas"" to" dirname $quote. ;
MPRINT(SETENV):   rc = fcopy(frefsrc, fref);
MPRINT(SETENV):   if rc ne 0 then do;
MPRINT(SETENV):   put "Failed.";
MPRINT(SETENV):   msg = sysmsg();
MPRINT(SETENV):   put msg;
MPRINT(SETENV):   cumrc=rc;
MPRINT(SETENV):   end;
MPRINT(SETENV):   else put "Success.";
MPRINT(SETENV):   end;
MPRINT(SETENV):   rc=filename(frefsrc);
MPRINT(SETENV):   rc=filename(fref);
MPRINT(SETENV):   if cumrc = 0 then setenv = "setenv02.sas";
MPRINT(SETENV):   end;
MPRINT(SETENV):   end;
MPRINT(SETENV):   call symput("setenv", cats(setenv));
MPRINT(SETENV):   put setenv=;
MPRINT(SETENV):   run;

d=/lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/biostat/jobs/gadam
_ongoing_studies/prod/macros/global_macros
(SETENV):found=1 fname=setenv02.sas ver=2 rc=0 did=1 fref=#LN00017
dirname=/lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/biostat/jobs
/gadam_ongoing_studies/prod/macros/global_macros
dirname=/lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/biostat/jobs
/gadam_ongoing_studies/prod/macros/global_macros direxists=1
MPRINT(SETENV):   option 
insert=(sasautos="/lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/bi
ostat/jobs/gadam_ongoing_studies/prod/macros/global_macros");
setenv=setenv02.sas
NOTE: The data set WORK.REPEV_SETENV has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

NOTE: CALL EXECUTE generated line.
1         + option 
insert=(sasautos="/lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/bi
ostat/jobs/gadam_ongoing_studies/prod/macros/global_macros");
setenv=setenv02.sas
(SETENV): Calling %setenv02(ini=0, tabno=, default_debug=1)
MAUTOCOMPLOC:  The autocall macro SETENV02 is compiling using the autocall source file 
            /lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/biostat/
            jobs/gadam_ongoing_studies/prod/macros/global_macros/setenv02.sas.
MPRINT(SETENV.SETENV02):   options mprint nofmterr spool nodate nonumber MAUTOCOMPLOC NOMAUTOLOCDISPLAY;
MPRINT(SETENV.SETENV02):   *- Clean previously compiled macros from WORK.SASMAC* -*;
MPRINT(SETENV.SETENV02):   data _NULL_;
MPRINT(SETENV.SETENV02):   length save $500;
MPRINT(SETENV.SETENV02):   retain save;
MPRINT(SETENV.SETENV02):   set sashelp.vcatalg(where=(libname="WORK" and memname=:'SASMAC' and objtype="MACRO")) end=last;
                                                           The SAS System

MPRINT(SETENV.SETENV02):   by memname notsorted;
MPRINT(SETENV.SETENV02):   if first.memname then do;
MPRINT(SETENV.SETENV02):   if index(" "||save, " "||strip(memname)||".") eq 0 then save = catx(" ", save, 
strip(memname)||"."||objname);
MPRINT(SETENV.SETENV02):   end;
MPRINT(SETENV.SETENV02):   if last;
MPRINT(SETENV.SETENV02):   call symputx('save_macr', save);
MPRINT(SETENV.SETENV02):   run;

NOTE: There were 2 observations read from the data set SASHELP.VCATALG.
      WHERE (libname='WORK') and (memname=:'SASMAC') and (objtype='MACRO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

save_macr = SASMAC1.SETENV
MPRINT(SETENV.SETENV02):   proc catalog catalog=work.SASMAC1 force;
MPRINT(SETENV.SETENV02):   *save &sysmacroname /et=macro;
MPRINT(SETENV.SETENV02):   save SETENV SETENV02 /et=macro;
MPRINT(SETENV.SETENV02):   run;

NOTE: Saving entry SETENV.MACRO in catalog WORK.SASMAC1.
NOTE: Saving entry SETENV02.MACRO in catalog WORK.SASMAC1.
MPRINT(SETENV.SETENV02):   quit;

NOTE: PROCEDURE CATALOG used (Total process time):
      real time           0.01 seconds
      cpu time            0.02 seconds
      

MPRINT(SETENV.SETENV02):   *- Clear filenames and delete previous scaprocrecord.txt (J-M Bodart 2021-03-25) -*;
MPRINT(SETENV.SETENV02):   filename _all_ clear;
MPRINT(SETENV.SETENV02):   * in case run in batch;
(SETENV02): _SASFILEPATH_ = /general/biostat/jobs/gadam_ongoing_studies/prod/programs/gadam_ongoing_studies.sas
(SETENV02): path1 = /general/biostat/jobs/gadam_ongoing_studies/prod/programs/gadam_ongoing_studies.sas
(SETENV02): _sasws_ = /lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba
(SETENV02): runenvironment = repository
MPRINT(SETENV.SETENV02):   libname projmeta 
"/lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/biostat/metadata/pr
ojects/" access=readonly;
NOTE: Libref PROJMETA was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: 
      /lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/biostat/metada
      ta/projects
runenvironment=repository
progpath=/general/biostat/jobs/gadam_ongoing_studies/prod/programs/
repevpath=/lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/biostat/jo
bs/gadam_ongoing_studies/prod/
relrepevpath=/general/biostat/jobs/gadam_ongoing_studies/prod/
progname=gadam_ongoing_studies.sas
pgmname=gadam_ongoing_studies
general=/lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/biostat/
debug=1
compound=biostat
indication=jobs
study=gadam_ongoing_studies
                                                           The SAS System

revent=
NOTE: %INCLUDE (level 1) file 
      /lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/biostat/macros
      /_library/setsasautos.sas is file 
      /lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/biostat/macros
      /_library/setsasautos.sas.
134       +/**
135       +@file
136       +@author     Martijn Busselen
137       +@date       2020-11-23
138       +@brief      set the macro sasautos so it uses first the maros defined on reporting event level and secondly those from
138      !+the global level
139       +
140       +@pre        Need to run %setenv
141       +
142       +#### Update History ####
143       +
144       +      Date           Name                       Description
145       +      ------------   ------------------------
145      !+-----------------------------------------------------------------------------
146       +      2021-07-21     S Shipp                    Update for global_macros folder.
147       +      2022-02-27     J-M Bodart                 Include /general/gadam/_library when last level of &repevpath =
147      !+generic_adam.
148       +      2022-03-01     J-M Bodart                 Add \ as delimiter in %scan(&repevpath, -1, /\) as it is not part of
148      !+default delimiters
149       +                                                (needed when run locally on Windows).
150       +      2022-06-30     J-M Bodart                 Add gsdtm/_library.
151       +      2022-12-07     J-M Bodart                 Add user workspace macros to SASAUTOS for development purposes, if
151      !+applicable.
152       +      2022-12-08     J-M Bodart                 Increase l3 size to avoid truncations.
153       +                                                Only add workspace macros to SASAUTOS if environment variable
153      !+USE_SAS_WORKSPACE_MACROS
154       +                                                is defined as Y, or global macro-variable &USE_SAS_WORKSPACE_MACROS=Y.
155       +      2022-12-11     J-M Bodart                 Fix regex !^/general/biostat/jobs/(gadam|gsdtm)_\w+/dev(/|$)!.
156       +      2023-02-09     J-M Bodart                 Issue a Notice: (instead of War-ning:) message when adding WORKSPACE
156      !+paths to SASAUTOS
157       +                                                for development purposes.
158       +
159       +
160       +#### Examples ####
161       +@code
162       +   option mautosource mcompilenote=all;
163       +   %setSasAutos();
164       +@endcode
165       +**/
166       +
167       +%macro setSasAutos();
168       +   %local firstset last3 nb_dirs user_workspace_macros;
169       +   %let firstset = 1;
170       +   %if %symexist(runenvironment)=0 %then %local runenvironment;
171       +
172       +   %*- Determine if WORKSPACE macros should be used (in case available) -*;
173       +   %if %symexist(USE_SAS_WORKSPACE_MACROS)=0 %then %do;
174       +      %global USE_SAS_WORKSPACE_MACROS;
175       +   %end;
176       +   %if %sysfunc(sysexist(USE_SAS_WORKSPACE_MACROS)) %then %do;
177       +      %let USE_SAS_WORKSPACE_MACROS = %sysget(USE_SAS_WORKSPACE_MACROS);
178       +   %end;
                                                           The SAS System

179       +   %if %sysfunc(sysexist(USE_SAS_WORKSPACE_MACROS))=0 and %qsysfunc(upcase(%superq(USE_SAS_WORKSPACE_MACROS)), $1.)=Y
179      !+%then %do;
180       +      *- Set environment variable -*;
181       +      option set=USE_SAS_WORKSPACE_MACROS "Y";  /*- to unset environment variable use: option
181      !+set=USE_SAS_WORKSPACE_MACROS ""; -*/
182       +   %end;
183       +   %put &=USE_SAS_WORKSPACE_MACROS;
184       +   %put %str(Not)ice: Environment variable USE_SAS_WORKSPACE_MACROS is
184      !+%sysfunc(ifc(%sysfunc(sysexist(USE_SAS_WORKSPACE_MACROS)), DEFINED, NOT DEFINED)).;
185       +
186       +   /*in LSAF there are 3 default directories in sasautos and these need to be kept*/
187       +   %if &runenvironment=repository or &runenvironment=workspace %then %do;
188       +      data _null_;
189       +         length a b c dirs l3 $4000;  /*- jbodart - 2022-12-08 - increase l3 size to avoid truncations -*/
190       +         a= strip(getoption("sasautos"));
191       +         put a=;
192       +         len = length(a);
193       +         nobrack = substr(a,2,len-2);
194       +         b = tranwrd(nobrack,'"',"");
195       +         c = compbl(strip(tranwrd(b,"'","")));
196       +         e = countw(c," ");
197       +         call symputx("nb_dirs",strip(put(e,8.)));
198       +         do i = 1 to e;
199       +            last3 = (e-i<3);
200       +            dirs = scan(c,i," ");
201       +            output;
202       +            if last3 then l3 = strip(l3)||' "'||strip(dirs)||'"';
203       +            if e then call symputx ('last3',strip(l3));
204       +         end;
205       +      run;
206       +      %put nb sasautos dirs = &nb_dirs;
207       +      %put last3 = &last3;
208       +   %end;
209       +   %if ( %sysfunc(fileexist(&general.macros&sepchar._library&sepchar)) or %sysfunc(fileexist(&repevpath.macros&sepchar))
209      !+) %then %do;
210       +      %if %sysfunc(fileexist(&repevpath.macros&sepchar)) %then %do;
211       +
212       +         %let gmdfolder=%sysfunc(fileexist(&repevpath.macros&sepchar.global-macros));
213       +         %let gmufolder=%sysfunc(fileexist(&repevpath.macros&sepchar.global_macros));
214       +
215       +         %put &=gmdfolder;
216       +         %put &=gmufolder;
217       +
218       +         options dlcreatedir;
219       +         %if &gmdfolder=1 %then %do;
220       +            libname globmac ("&repevpath.macros&sepchar.global-macros");
221       +         %end;
222       +         %else %do;
223       +            libname globmac ("&repevpath.macros&sepchar.global_macros");
224       +         %end;
225       +      %end;
226       +
227       +      %*- 2022-12-07 - jbodart - Add user workspace macros to SASAUTOS for development purposes, if applicable -*;
228       +      %let user_workspace_macros = ;
229       +
230       +      %if &runenvironment=repository and %symexist(_SDDUSR_) %then %do;
231       +
232       +         %if ("&revent"="generic_adam" or "%scan(&repevpath, -1, /\)"="generic_adam")
                                                           The SAS System

233       +            and %sysfunc(prxmatch(!^/clinical/test/gadam-tests/!, %superq(relrepevpath)))
234       +            and %sysfunc(fileexist(/lsafshared/SASWorkspaces/&_SDDUSR_/general/biostat/gadam/_library/%str(*).sas))
235       +            and %qsysfunc(upcase(%superq(USE_SAS_WORKSPACE_MACROS)), $1.)=Y
236       +            %then %let user_workspace_macros = &user_workspace_macros
236      !+"/lsafshared/SASWorkspaces/&_SDDUSR_/general/biostat/gadam/_library";
237       +
238       +         %else %if ("&revent"="generic_sdtm" or "%scan(&repevpath, -1, /\)"="generic_sdtm")
239       +            and %sysfunc(prxmatch(!^/clinical/test/gsdtm-tests/!, %superq(relrepevpath)))
240       +            and %sysfunc(fileexist(/lsafshared/SASWorkspaces/&_SDDUSR_/general/biostat/gsdtm/_library/%str(*).sas))
241       +            and %qsysfunc(upcase(%superq(USE_SAS_WORKSPACE_MACROS)), $1.)=Y
242       +            %then %let user_workspace_macros = &user_workspace_macros
242      !+"/lsafshared/SASWorkspaces/&_SDDUSR_/general/biostat/gsdtm/_library";
243       +
244       +         %if (    "&revent"="generic_adam" or "%scan(&repevpath, -1, /\)"="generic_adam"
245       +               or "&revent"="generic_sdtm" or "%scan(&repevpath, -1, /\)"="generic_sdtm"
246       +               or %sysfunc(prxmatch(!^/general/biostat/jobs/(gadam|gsdtm)_\w+/dev(/|$)!, %superq(relrepevpath)))
247       +               )
248       +            and %sysfunc(fileexist(/lsafshared/SASWorkspaces/&_SDDUSR_/general/biostat/macros/_library/%str(*).sas))
249       +            and %qsysfunc(upcase(%superq(USE_SAS_WORKSPACE_MACROS)), $1.)=Y
250       +            %then %let user_workspace_macros = &user_workspace_macros
250      !+"/lsafshared/SASWorkspaces/&_SDDUSR_/general/biostat/macros/_library";
251       +
252       +         %if %length(%superq(user_workspace_macros)) %then %do;
253       +            %put %str(Not)ice: === Adding WORKSPACE paths to SASAUTOS for development purposes, please check macros
253      !+versions in your workspace: === ;
254       +            %put %str(   )&user_workspace_macros;
255       +            %put;
256       +         %end;
257       +
258       +         %put &=runenvironment &=_SDDUSR_ &=relrepevpath &=user_workspace_macros;
259       +
260       +      %end;
261       +
262       +      %*- Use autocall to compile any macro in Macros subfolder on demand -*;
263       +      options mautosource sasautos = (
264       +            %if %sysfunc(fileexist(&repevpath.macros&sepchar))                         %then "&repevpath.macros";
265       +                                                                                             &user_workspace_macros
266       +            %if "&revent"="generic_adam" or "%scan(&repevpath, -1, /\)"="generic_adam" %then
266      !+"&general.gadam&sepchar._library";
267       +            %if "&revent"="generic_sdtm" or "%scan(&repevpath, -1, /\)"="generic_sdtm" %then
267      !+"&general.gsdtm&sepchar._library";  /*- jbodart 2022-06-30 -*/
268       +            %if %sysfunc(fileexist(&repevpath.macros&sepchar.global-macros))           %then
268      !+"&repevpath.macros&sepchar.global-macros";
269       +            %if %sysfunc(fileexist(&repevpath.macros&sepchar.global_macros))           %then
269      !+"&repevpath.macros&sepchar.global_macros";
270       +            %if %sysfunc(fileexist(&general.macros&sepchar._library&sepchar))          %then
270      !+"&general.macros&sepchar._library" ;
271       +            %if &runenvironment=local or &runenvironment=batch or %length(%superq(runenvironment))=0
272       +                                                                                       %then sasautos;
273       +                                                                                       %else &last3;
274       +            ) MRECALL=YES;
275       +   %end;
276       +   %let sa = %sysfunc(getoption(sasautos));
277       +   %put sa=&sa;
278       +%mend setSasAutos;
NOTE: %INCLUDE (level 1) ending.
USE_SAS_WORKSPACE_MACROS=
Notice: Environment variable USE_SAS_WORKSPACE_MACROS is NOT DEFINED.
                                                           The SAS System

MPRINT(SETENV.SETENV02.SETSASAUTOS):   data _null_;
MPRINT(SETENV.SETENV02.SETSASAUTOS):   length a b c dirs l3 $4000;
MPRINT(SETENV.SETENV02.SETSASAUTOS):   a= strip(getoption("sasautos"));
MPRINT(SETENV.SETENV02.SETSASAUTOS):   put a=;
MPRINT(SETENV.SETENV02.SETSASAUTOS):   len = length(a);
MPRINT(SETENV.SETENV02.SETSASAUTOS):   nobrack = substr(a,2,len-2);
MPRINT(SETENV.SETENV02.SETSASAUTOS):   b = tranwrd(nobrack,'"',"");
MPRINT(SETENV.SETENV02.SETSASAUTOS):   c = compbl(strip(tranwrd(b,"'","")));
MPRINT(SETENV.SETENV02.SETSASAUTOS):   e = countw(c," ");
MPRINT(SETENV.SETENV02.SETSASAUTOS):   call symputx("nb_dirs",strip(put(e,8.)));
MPRINT(SETENV.SETENV02.SETSASAUTOS):   do i = 1 to e;
MPRINT(SETENV.SETENV02.SETSASAUTOS):   last3 = (e-i<3);
MPRINT(SETENV.SETENV02.SETSASAUTOS):   dirs = scan(c,i," ");
MPRINT(SETENV.SETENV02.SETSASAUTOS):   output;
MPRINT(SETENV.SETENV02.SETSASAUTOS):   if last3 then l3 = strip(l3)||' "'||strip(dirs)||'"';
MPRINT(SETENV.SETENV02.SETSASAUTOS):   if e then call symputx ('last3',strip(l3));
MPRINT(SETENV.SETENV02.SETSASAUTOS):   end;
MPRINT(SETENV.SETENV02.SETSASAUTOS):   run;

a=('/lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/biostat/jobs/gad
am_ongoing_studies/prod/macros/global_macros' "SASEnvironment/SASMacro" '!SASROOT/sasautos' "/sso/sfw/sas/940/SASFoundation/9.4/lsaf
api/lsaf-sas-macro-2.6.1/sasmacros" "/lsafshared/SASWorkspaces/global_macros")
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

nb sasautos dirs = 5
last3 = "!SASROOT/sasautos" "/sso/sfw/sas/940/SASFoundation/9.4/lsafapi/lsaf-sas-macro-2.6.1/sasmacros" 
"/lsafshared/SASWorkspaces/global_macros"
GMDFOLDER=0
GMUFOLDER=1
MPRINT(SETENV.SETENV02.SETSASAUTOS):   options dlcreatedir;
MPRINT(SETENV.SETENV02.SETSASAUTOS):   libname globmac 
("/lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/biostat/jobs/gadam
_ongoing_studies/prod/macros/global_macros");
NOTE: Libref GLOBMAC was successfully assigned as follows: 
      Levels:           1
      Engine(1):        V9 
      Physical Name(1): 
      /lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/biostat/jobs/g
      adam_ongoing_studies/prod/macros/global_macros
RUNENVIRONMENT=repository _SDDUSR_=jbodart RELREPEVPATH=/general/biostat/jobs/gadam_ongoing_studies/prod/ USER_WORKSPACE_MACROS=
MPRINT(SETENV.SETENV02.SETSASAUTOS):   options mautosource sasautos = ( 
"/lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/biostat/jobs/gadam_
ongoing_studies/prod/macros" 
"/lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/biostat/jobs/gadam_
ongoing_studies/prod/macros/global_macros" 
"/lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/biostat/macros/_lib
rary" "!SASROOT/sasautos" "/sso/sfw/sas/940/SASFoundation/9.4/lsafapi/lsaf-sas-macro-2.6.1/sasmacros" 
"/lsafshared/SASWorkspaces/global_macros" ) MRECALL=YES;
sa=("/lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/biostat/jobs/ga
dam_ongoing_studies/prod/macros"                                                                                               
"/lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/biostat/jobs/gadam_
ongoing_studies/prod/macros/global_macros" 
"/lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/biostat/macros/_lib
rary" "!SASROOT/sasautos" "/sso/sfw/sas/940/SASFoundation/9.4/lsafapi/lsaf-sas-macro-2.6.1/sasmacros" 
"/lsafshared/SASWorkspaces/global_macros")
                                                           The SAS System

MPRINT(SETENV.SETENV02):  ;
MPRINT(SETENV.SETENV02):  ;
MPRINT(SETENV.SETENV02):  ;
MAUTOCOMPLOC:  The autocall macro GET_JOB_PROG_INFO is compiling using the autocall source file 
            /lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/biostat/
            macros/_library/get_job_prog_info.sas.
MPRINT(SETENV.SETENV02.GET_JOB_PROG_INFO):   data _null_;
MPRINT(SETENV.SETENV02.GET_JOB_PROG_INFO):   infile 
"/lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/biostat/jobs/gadam_
ongoing_studies/prod/jobs/job_gadam_ongoing_studies.job";
MPRINT(SETENV.SETENV02.GET_JOB_PROG_INFO):   input;
MPRINT(SETENV.SETENV02.GET_JOB_PROG_INFO):   *put _infile_;
MPRINT(SETENV.SETENV02.GET_JOB_PROG_INFO):   length progversion $32;
MPRINT(SETENV.SETENV02.GET_JOB_PROG_INFO):   if prxmatch("/^.*<inputSpec 
path=[""'][^<>""']*\/programs\/gadam_ongoing_studies.sas[""'][^<>]* version=[""'][\*\d\.]+[""'][^<>]*\/>.*$/", _infile_) then do;
MPRINT(SETENV.SETENV02.GET_JOB_PROG_INFO):   progversion = prxchange("s/^.*<inputSpec 
path=[""'][^<>""']*\/programs\/gadam_ongoing_studies.sas[""'][^<>]* version=[""']([\*\d\.]+)[""'][^<>]*\/>.*$/\1/", 1, _infile_);
MPRINT(SETENV.SETENV02.GET_JOB_PROG_INFO):   put progversion=;
MPRINT(SETENV.SETENV02.GET_JOB_PROG_INFO):   call symputx('jobprogversion', progversion);
MPRINT(SETENV.SETENV02.GET_JOB_PROG_INFO):   end;
MPRINT(SETENV.SETENV02.GET_JOB_PROG_INFO):   run;

NOTE: The infile 
      "/lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/biostat/jobs/
      gadam_ongoing_studies/prod/jobs/job_gadam_ongoing_studies.job" is:
      
      Filename=/lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/biost
      at/jobs/gadam_ongoing_studies/prod/jobs/job_gadam_ongoing_studies.job,
      Owner Name=webtrust,Group Name=webtrust,
      Access Permission=-rw-rw-rw-,
      Last Modified=19Dec2022:11:44:22,
      File Size (bytes)=5796

progversion=*
NOTE: 54 records were read from the infile 
      "/lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/biostat/jobs/
      gadam_ongoing_studies/prod/jobs/job_gadam_ongoing_studies.job".
      The minimum record length was 6.
      The maximum record length was 481.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MAUTOCOMPLOC:  The autocall macro LSAF_GET_VERSION is compiling using the autocall source file 
            /lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/biostat/
            macros/_library/lsaf_get_version.sas.
MAUTOCOMPLOC:  The autocall macro LOCAL_LSAF is compiling using the autocall source file 
            /lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/biostat/
            macros/_library/local_lsaf.sas.
MAUTOCOMPLOC:  The autocall macro LSAF_GETPROPERTIES is compiling using the autocall source file 
            /sso/sfw/sas/940/SASFoundation/9.4/lsafapi/lsaf-sas-macro-2.6.1/sasmacros/lsaf_getproperties.sas.
MPRINT(SETENV.SETENV02.GET_JOB_PROG_INFO.LSAF_GET_VERSION.LSAF_GETPROPERTIES):   *;
MAUTOCOMPLOC:  The autocall macro LSAF_GETPRODUCTNAME is compiling using the autocall source file 
            /sso/sfw/sas/940/SASFoundation/9.4/lsafapi/lsaf-sas-macro-2.6.1/sasmacros/lsaf_getproductname.sas.
MPRINT(SETENV.SETENV02.GET_JOB_PROG_INFO.LSAF_GET_VERSION.LSAF_GETPROPERTIES):  ;
MPRINT(SETENV.SETENV02.GET_JOB_PROG_INFO.LSAF_GET_VERSION.LSAF_GETPROPERTIES):   data work.lsafGetProperties (label="Created by 
LSAF_GETPROPERTIES" KEEP=path name displayName value type isReadonly isExtended);
                                                           The SAS System

MPRINT(SETENV.SETENV02.GET_JOB_PROG_INFO.LSAF_GET_VERSION.LSAF_GETPROPERTIES):   attrib returnCode length=8 message length=$200 
logMsgPrefix length=$70 logMsgPrimary length=$70 logMsg length=$300 rowCount length=8 path length=$2048 label="Item Path" name 
length=$256 label="Property Name" displayName length=$256 label="Property Display Name" value length=$2048 label="Property Value" 
type length=$32 label="Property Type" isReadonly length=8 label="Property value is not modifiable." isExtended length=8 
label="Property is an Extended Attribute" ;
MPRINT(SETENV.SETENV02.GET_JOB_PROG_INFO.LSAF_GET_VERSION.LSAF_GETPROPERTIES):   rowCount=0;
MPRINT(SETENV.SETENV02.GET_JOB_PROG_INFO.LSAF_GET_VERSION.LSAF_GETPROPERTIES):   declare javaobj 
srv("com/sas/lsaf/macro/content/repository/RepositoryService") ;
MPRINT(SETENV.SETENV02.GET_JOB_PROG_INFO.LSAF_GET_VERSION.LSAF_GETPROPERTIES):   declare javaobj 
results("com/sas/lsaf/macro/content/repository/SasRepositoryItemPropertiesResult");
MPRINT(SETENV.SETENV02.GET_JOB_PROG_INFO.LSAF_GET_VERSION.LSAF_GETPROPERTIES):   srv.callStaticVoidMethod("getProperties", 
"/general/biostat/jobs/gadam_ongoing_studies/prod/programs/gadam_ongoing_studies.sas", "", results);
MPRINT(SETENV.SETENV02.GET_JOB_PROG_INFO.LSAF_GET_VERSION.LSAF_GETPROPERTIES):   results.callIntMethod("getReturnCode", returnCode);
MPRINT(SETENV.SETENV02.GET_JOB_PROG_INFO.LSAF_GET_VERSION.LSAF_GETPROPERTIES):   results.callStringMethod("getReturnMessage", 
message);
MPRINT(SETENV.SETENV02.GET_JOB_PROG_INFO.LSAF_GET_VERSION.LSAF_GETPROPERTIES):   logMsgPrefix="NOTE: SAS Life Science Analytics 
Framework Macro: * ";
MPRINT(SETENV.SETENV02.GET_JOB_PROG_INFO.LSAF_GET_VERSION.LSAF_GETPROPERTIES):   if (returnCode ne 0) then do;
MPRINT(SETENV.SETENV02.GET_JOB_PROG_INFO.LSAF_GET_VERSION.LSAF_GETPROPERTIES):   logMsgPrimary="ERROR: SAS Life Science Analytics 
Framework Macro:";
MPRINT(SETENV.SETENV02.GET_JOB_PROG_INFO.LSAF_GET_VERSION.LSAF_GETPROPERTIES):   logMsg=" Cannot retrieve list of properties for 
/general/biostat/jobs/gadam_ongoing_studies/prod/programs/gadam_ongoing_studies.sas" ;
MPRINT(SETENV.SETENV02.GET_JOB_PROG_INFO.LSAF_GET_VERSION.LSAF_GETPROPERTIES):   end;
MPRINT(SETENV.SETENV02.GET_JOB_PROG_INFO.LSAF_GET_VERSION.LSAF_GETPROPERTIES):   else do;
MPRINT(SETENV.SETENV02.GET_JOB_PROG_INFO.LSAF_GET_VERSION.LSAF_GETPROPERTIES):   logMsgPrimary=logMsgPrefix;
MPRINT(SETENV.SETENV02.GET_JOB_PROG_INFO.LSAF_GET_VERSION.LSAF_GETPROPERTIES):   logMsg=" List of properties were returned for 
/general/biostat/jobs/gadam_ongoing_studies/prod/programs/gadam_ongoing_studies.sas" ;
MPRINT(SETENV.SETENV02.GET_JOB_PROG_INFO.LSAF_GET_VERSION.LSAF_GETPROPERTIES):   results.callIntMethod("getSize", rowCount);
MPRINT(SETENV.SETENV02.GET_JOB_PROG_INFO.LSAF_GET_VERSION.LSAF_GETPROPERTIES):   do row=0 to rowCount - 1;
MPRINT(SETENV.SETENV02.GET_JOB_PROG_INFO.LSAF_GET_VERSION.LSAF_GETPROPERTIES):   
path="/general/biostat/jobs/gadam_ongoing_studies/prod/programs/gadam_ongoing_studies.sas";
MPRINT(SETENV.SETENV02.GET_JOB_PROG_INFO.LSAF_GET_VERSION.LSAF_GETPROPERTIES):   results.callStringMethod("getPropertyName", row, 
name);
MPRINT(SETENV.SETENV02.GET_JOB_PROG_INFO.LSAF_GET_VERSION.LSAF_GETPROPERTIES):   results.callStringMethod("getPropertyValue", row, 
value);
MPRINT(SETENV.SETENV02.GET_JOB_PROG_INFO.LSAF_GET_VERSION.LSAF_GETPROPERTIES):   results.callStringMethod("getPropertyDisplayName", 
row, displayName);
MPRINT(SETENV.SETENV02.GET_JOB_PROG_INFO.LSAF_GET_VERSION.LSAF_GETPROPERTIES):   
results.callStringMethod("getPropertyAttributeType", row, type);
MPRINT(SETENV.SETENV02.GET_JOB_PROG_INFO.LSAF_GET_VERSION.LSAF_GETPROPERTIES):   results.callBooleanMethod("getPropertyIsReadOnly", 
row, isReadonly);
MPRINT(SETENV.SETENV02.GET_JOB_PROG_INFO.LSAF_GET_VERSION.LSAF_GETPROPERTIES):   results.callBooleanMethod("getPropertyIsExtended", 
row, isExtended);
MPRINT(SETENV.SETENV02.GET_JOB_PROG_INFO.LSAF_GET_VERSION.LSAF_GETPROPERTIES):   output;
MPRINT(SETENV.SETENV02.GET_JOB_PROG_INFO.LSAF_GET_VERSION.LSAF_GETPROPERTIES):   end;
MPRINT(SETENV.SETENV02.GET_JOB_PROG_INFO.LSAF_GET_VERSION.LSAF_GETPROPERTIES):   end;
MPRINT(SETENV.SETENV02.GET_JOB_PROG_INFO.LSAF_GET_VERSION.LSAF_GETPROPERTIES):   put;
MPRINT(SETENV.SETENV02.GET_JOB_PROG_INFO.LSAF_GET_VERSION.LSAF_GETPROPERTIES):   put logMsgPrimary " " logMsg;
MPRINT(SETENV.SETENV02.GET_JOB_PROG_INFO.LSAF_GET_VERSION.LSAF_GETPROPERTIES):   put logMsgPrefix " " "lsaf_getproperties";
MPRINT(SETENV.SETENV02.GET_JOB_PROG_INFO.LSAF_GET_VERSION.LSAF_GETPROPERTIES):   if (rowCount=0) then put logMsgPrefix " No 
properties were retrieved.";
MPRINT(SETENV.SETENV02.GET_JOB_PROG_INFO.LSAF_GET_VERSION.LSAF_GETPROPERTIES):   else put logMsgPrefix " " rowCount " records 
written to data set work.lsafGetProperties";
MPRINT(SETENV.SETENV02.GET_JOB_PROG_INFO.LSAF_GET_VERSION.LSAF_GETPROPERTIES):   put logMsgPrefix " _lsafMsg_= " message ;
MPRINT(SETENV.SETENV02.GET_JOB_PROG_INFO.LSAF_GET_VERSION.LSAF_GETPROPERTIES):   put logMsgPrefix " _lsafRC_= " returnCode ;
MPRINT(SETENV.SETENV02.GET_JOB_PROG_INFO.LSAF_GET_VERSION.LSAF_GETPROPERTIES):   put;
MPRINT(SETENV.SETENV02.GET_JOB_PROG_INFO.LSAF_GET_VERSION.LSAF_GETPROPERTIES):   call symputx("_lsafRC_", returnCode);
MPRINT(SETENV.SETENV02.GET_JOB_PROG_INFO.LSAF_GET_VERSION.LSAF_GETPROPERTIES):   call symputx("_lsafMsg_", message);
                                                           The SAS System

MPRINT(SETENV.SETENV02.GET_JOB_PROG_INFO.LSAF_GET_VERSION.LSAF_GETPROPERTIES):   call symputx("_lsafRowCount_", rowCount);
MPRINT(SETENV.SETENV02.GET_JOB_PROG_INFO.LSAF_GET_VERSION.LSAF_GETPROPERTIES):   run;


NOTE: SAS Life Science Analytics Framework Macro: *  
List of properties were returned for /general/biostat/jobs/gadam_ongoing_studies/prod/programs/gadam_ongoing_studies.sas
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_getproperties
NOTE: SAS Life Science Analytics Framework Macro: *  21  records written to data set work.lsafGetProperties
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: The data set WORK.LSAFGETPROPERTIES has 21 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           1.28 seconds
      cpu time            0.01 seconds
      

MPRINT(SETENV.SETENV02.GET_JOB_PROG_INFO.LSAF_GET_VERSION.LSAF_GETPROPERTIES):   options nonotes;
MPRINT(SETENV.SETENV02.GET_JOB_PROG_INFO.LSAF_GET_VERSION.LSAF_GETPROPERTIES):   proc sort data=work.lsafGetProperties 
sortseq=linguistic(strength=primary);
MPRINT(SETENV.SETENV02.GET_JOB_PROG_INFO.LSAF_GET_VERSION.LSAF_GETPROPERTIES):   by name;
MPRINT(SETENV.SETENV02.GET_JOB_PROG_INFO.LSAF_GET_VERSION.LSAF_GETPROPERTIES):   run;
MPRINT(SETENV.SETENV02.GET_JOB_PROG_INFO.LSAF_GET_VERSION.LSAF_GETPROPERTIES):   options NOTES;
MPRINT(SETENV.SETENV02.GET_JOB_PROG_INFO.LSAF_GET_VERSION):  ;
MPRINT(SETENV.SETENV02.GET_JOB_PROG_INFO.LSAF_GET_VERSION):   data _null_;
MPRINT(SETENV.SETENV02.GET_JOB_PROG_INFO.LSAF_GET_VERSION):   set lsafGetProperties(where=(name='version'));
MPRINT(SETENV.SETENV02.GET_JOB_PROG_INFO.LSAF_GET_VERSION):   call symputx(symget('into'), coalescec(cats(value), '-'), 'G');
MPRINT(SETENV.SETENV02.GET_JOB_PROG_INFO.LSAF_GET_VERSION):   run;

NOTE: There were 1 observations read from the data set WORK.LSAFGETPROPERTIES.
      WHERE name='version';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SETENV.SETENV02.GET_JOB_PROG_INFO):  ;
MPRINT(SETENV.SETENV02):  ;
progversion = 0.2
MPRINT(SETENV):  ;
MPRINT(SETENV):   options nomprintnest;
(SETENV): Done.
279        option mprint nomlogic nosymbolgen MAUTOCOMPLOC NOMAUTOLOCDISPLAY mrecall;
280        
281        *- fcmp functions definitions -*;
282        %del_fcmp;  %*- clean up previous fcmp definitions -*;
MAUTOCOMPLOC:  The autocall macro DEL_FCMP is compiling using the autocall source file 
            /lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/biostat/
            macros/_library/del_fcmp.sas.
fcmpoutlib=work.functions
283        %include "&REPEVPATH.programs/fcmp_*.sas";
NOTE: %INCLUDE (level 1) file 
      /lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/biostat/jobs/g
      adam_ongoing_studies/prod/programs/fcmp_*.sas is file 
      /lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/biostat/jobs/g
      adam_ongoing_studies/prod/programs/fcmp_run.sas.
284       +/************************************************************************************************************************
284      !+*******************
285       +@file
                                                           The SAS System

286       +@brief      Define (a package of) user-written SAS function(s)/ call routine(s) to be compiled by PROC FCMP:
287       +            - Package of Fcmp functions to deal with running SAS Code within a FCMP function computations.
288       +@author     Jean-Michel Bodart
289       +@note       this program is meant to be called from a SAS project environment initialization program
290       +
291       +#### Update History ####
292       +
293       +    Date             Name                        Description
294       +    ------------     --------------------------
294      !+-------------------------------------------------------------------------------------------
295       +@cond
296       +*************************************************************************************************************************
296      !+******************/
297       +
298       +%*- Determine <libname>.<dataset> where to store FCMP functions/routines -*;
299       +%*------------------------------------------------------------------------*;
300       +%*- retrieve first location specified in CMPLIB option (if any) -*;
301       +%let fcmpoutlib=%scan(%qsysfunc(prxchange(s/(_NO)?_DISPLAYLOC_//i, -1, %qsysfunc(getoption(cmplib)))), 1, ( -));
302       +%*- if empty, replace by 'fcmp.functions' -*;
303       +%let fcmpoutlib=%sysfunc(ifc(%length(%superq(fcmpoutlib))=0, fcmp.functions, %superq(fcmpoutlib)));
304       +%*- if <libname> is not assigned to a path, replace by 'work.functions' -*;
305       +%let fcmpoutlib=%sysfunc(ifc(%length(%qsysfunc(pathname(%scan(%superq(fcmpoutlib), 1, .), L)))=0, work.functions,
305      !+%superq(fcmpoutlib)));
306       +%put fcmpoutlib=&fcmpoutlib;
fcmpoutlib=work.functions
307       +
308       +%*- assign a package name -*;
309       +%let package = run;
310       +
311       +%macro del_existing;
312       +   %if %sysfunc(exist(&fcmpoutlib., data)) %then %do;
313       +      %*- get list of existing functions in selected package -*;
314       +      %let func_list = ;
315       +      proc sql noprint;
316       +         select distinct scan(_KEY_, -1, ".") into :func_list separated by ' '
317       +            from &fcmpoutlib. where type="Prototype" and scan(_key_, 1, ".") = "F" and scan(_key_, 2, ".") =
317      !+%sysfunc(quote(%qupcase(%superq(package))))
318       +            ;
319       +      quit;
320       +      %put Existing FCMP functions in &fcmpoutlib.&package: &func_list..;
321       +
322       +      proc fcmp outlib=&fcmpoutlib..&package.; /* outlib = <library>.<dataset>.<package> */
323       +
324       +         %if %index(%str( &func_list ), %str( RUNMACRO )) %then %do;
325       +            deletefunc RUNMACRO; /* delete pre-existing instance of this function to avoid war-ning about re-defining it.
325      !+ */
326       +         %end;
327       +
328       +      quit;
329       +   %end;
330       +%mend del_existing;
331       +%del_existing;
332       +
333       +proc fcmp outlib=&fcmpoutlib..&package.; /* outlib = <library>.<dataset>.<package> */
334       +
335       +   *- Function that runs SAS Code passed quoted as macro-variable ARGS to macro %run_macro,
336       +      which is expected to have been already compiled or to be found among the autocall macros.
337       +      The %run_macro has no parameters but retrieves the contents of ARGS from macro-variable &ARGS,
                                                           The SAS System

338       +      de-quote them and executes them.  The code executed is expected to assign a value to macro-variable &RESULT
339       +      which is passed back to the FCMP function and becomes the value returned by that FCMP function.
340       +   -*;
341       +   function RUNMACRO(args $) $;*$32000;
342       +      length result $32000;
343       +      result="";
344       +      rc = run_macro('run_macro', args, result);
345       +     *if rc = 0 then return(quote(trimn(result)));
346       +      if rc = 0 then return(trimn(result));
347       +      else return('ER'||'ROR attempting to call macro run_macro');
348       +   endsub;
349       +
350       +   /* *- test -*;
351       +
352       +   res = RUNMACRO('%lib_datasets(lib=maps);');
353       +   put res=;
354       +
355       +   res = RUNMACRO('%non_existing_macro(lib=maps);');
356       +   put res=;
357       +
358       +   */
359       +run;

NOTE: Function RUNMACRO saved to work.functions.run.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

360       +quit;
361       +
362       +%*- Set OPTION CMPLIB so as to allow SAS to find and access the fcmp functions -*;
363       +%*------------------------------------------------------------------------------*;
364       +%*- prepencd &fcmpoutlib. to OPTION CMPLIB value, unless it is already part of this option value -*;
365       +options %sysfunc(ifc( %sysfunc(exist(&fcmpoutlib., data)) and %sysfunc(findw(%qsysfunc(getoption(cmplib)), &fcmpoutlib.,
365      !+( -), ei))=0 , insert=(cmplib=&fcmpoutlib.), %str( )));
366       +%put option cmplib=%sysfunc(getoption(cmplib));
option cmplib=work.functions
367       +
368       +/* *- example usage -*;
369       +
370       +
371       +data test;
372       +   length args result $32000;
373       +   args = '%lib_datasets(lib=maps);';
374       +   result = runmacro(args);
375       +run;
376       +
377       +%let list = - ;
378       +%let list = %sysfunc(runmacro(  %qsysfunc(dequote('%lib_datasets(lib=sashelp);'))  ));
379       +%put list = ->&list<-;
380       +
381       +data test;
382       +   length args result $32000;
383       +   args = '%non_existing_macro(lib=maps);';
384       +   result = runmacro(args);
385       +run;
386       +
                                                           The SAS System

387       +%let list = - ;
388       +%let code = %qsysfunc(dequote('%non_existing_macro(lib=sashelp);'));
389       +%put code = &code;
390       +%put ...;
391       +%let list = %sysfunc(runmacro(  &code  ));
392       +%put list = ->&list<-;
393       +
394       +%put >>>%sysfunc(runmacro('proc sql; select distinct quote(strip(sex)) into :result separated by ", " from adam.adsl;
394      !+quit;'))<<<;  %*- this includes lots of (unwanted) trailing spaces -*;
395       +
396       +%put %sysfunc(trim(%qsysfunc(runmacro('proc sql; select distinct quote(strip(sex)) into :result separated by ", " from
396      !+adam.adsl; quit;'))));
397       +%put %sysfunc(trim(%qsysfunc(runmacro('proc sql; select distinct quote(strip(sex)) into :result separated by '', '' from
397      !+adam.adsl; quit;'))));
398       +
399       +
400       +*- this gives expected results - without extra spaces in the log -*;
401       +data test;
402       +   do Sex = %sysfunc(runmacro('proc sql; select distinct quote(strip(sex)) into :result separated by '', '' from
402      !+adam.adsl; quit;'));
403       +      put Sex=;
404       +      output;
405       +   end;
406       +run;
407       +
408       +data test;
409       +   do age = %sysfunc(runmacro('proc sql; select distinct age into :result separated by '', '' from adam.adsl; quit;'));
410       +      put age=;
411       +      output;
412       +   end;
413       +run;
414       +
415       +
416       +*- this gives expected results too -*;
417       +data test;
418       +   do Sex = %sysfunc(trim(%qsysfunc(runmacro('proc sql; select distinct quote(strip(sex)) into :result separated by '',
418      !+'' from adam.adsl; quit;'))));
419       +      put Sex=;
420       +      output;
421       +   end;
422       +run;
423       +
424       +data test;
425       +   do age = %sysfunc(trim(%qsysfunc(runmacro('proc sql; select distinct age into :result separated by '', '' from
425      !+adam.adsl; quit;'))));
426       +      put age=;
427       +      output;
428       +   end;
429       +run;
430       +
431       +*/
432       +/************************************************************************************************************************
432      !+*******************
433       +@file
434       +@brief      Define (a package of) user-written SAS function(s)/ call routine(s) to be compiled by PROC FCMP:
435       +            - Package of Fcmp functions to deal with running SAS Code within a FCMP function computations.
436       +@author     Jean-Michel Bodart
437       +@note       this program is meant to be called from a SAS project environment initialization program
                                                           The SAS System

438       +
439       +#### Update History ####
440       +
441       +    Date             Name                        Description
442       +    ------------     --------------------------
442      !+-------------------------------------------------------------------------------------------
443       +@cond
444       +*************************************************************************************************************************
444      !+******************/
445       +
446       +%*- Determine <libname>.<dataset> where to store FCMP functions/routines -*;
447       +%*------------------------------------------------------------------------*;
448       +%*- retrieve first location specified in CMPLIB option (if any) -*;
449       +%let fcmpoutlib=%scan(%qsysfunc(prxchange(s/(_NO)?_DISPLAYLOC_//i, -1, %qsysfunc(getoption(cmplib)))), 1, ( -));
450       +%*- if empty, replace by 'fcmp.functions' -*;
451       +%let fcmpoutlib=%sysfunc(ifc(%length(%superq(fcmpoutlib))=0, fcmp.functions, %superq(fcmpoutlib)));
452       +%*- if <libname> is not assigned to a path, replace by 'work.functions' -*;
453       +%let fcmpoutlib=%sysfunc(ifc(%length(%qsysfunc(pathname(%scan(%superq(fcmpoutlib), 1, .), L)))=0, work.functions,
453      !+%superq(fcmpoutlib)));
454       +%put fcmpoutlib=&fcmpoutlib;
fcmpoutlib=work.functions
455       +
456       +%*- assign a package name -*;
457       +%let package = run;
458       +
459       +%macro del_existing;
460       +   %if %sysfunc(exist(&fcmpoutlib., data)) %then %do;
461       +      %*- get list of existing functions in selected package -*;
462       +      %let func_list = ;
463       +      proc sql noprint;
464       +         select distinct scan(_KEY_, -1, ".") into :func_list separated by ' '
465       +            from &fcmpoutlib. where type="Prototype" and scan(_key_, 1, ".") = "F" and scan(_key_, 2, ".") =
465      !+%sysfunc(quote(%qupcase(%superq(package))))
466       +            ;
467       +      quit;
468       +      %put Existing FCMP functions in &fcmpoutlib.&package: &func_list..;
469       +
470       +      proc fcmp outlib=&fcmpoutlib..&package.; /* outlib = <library>.<dataset>.<package> */
471       +
472       +         %if %index(%str( &func_list ), %str( VALIDNAME )) %then %do;
473       +            deletefunc VALIDNAME; /* delete pre-existing instance of this function to avoid war-ning about re-defining
473      !+it. */
474       +         %end;
475       +
476       +      quit;
477       +   %end;
478       +%mend del_existing;
479       +%del_existing;
MPRINT(DEL_EXISTING):   proc sql noprint;
MPRINT(DEL_EXISTING):   select distinct scan(_KEY_, -1, ".") into :func_list separated by ' ' from work.functions where 
type="Prototype" and scan(_key_, 1, ".") = "F" and scan(_key_, 2, ".") = "RUN" ;
MPRINT(DEL_EXISTING):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

Existing FCMP functions in work.functionsrun: RUNMACRO.
                                                           The SAS System

MPRINT(DEL_EXISTING):   proc fcmp outlib=work.functions.run;
MPRINT(DEL_EXISTING):   quit;

NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

480       +
481       +proc fcmp outlib=&fcmpoutlib..&package.; /* outlib = <library>.<dataset>.<package> */
482       +
483       +   *- Function that runs SAS Code passed quoted as macro-variable ARGS to macro %run_macro,
484       +      which is expected to have been already compiled or to be found among the autocall macros.
485       +      The %run_macro has no parameters but retrieves the contents of ARGS from macro-variable &ARGS,
486       +      de-quote them and executes them.  The code executed is expected to assign a value to macro-variable &RESULT
487       +      which is passed back to the FCMP function and becomes the value returned by that FCMP function.
488       +   -*;
489       +   function VALIDNAME(string $) $;
490       +      length result $32;
491       +      result=ktrim(putc(prxchange(  's/^(\d|$)/_\1/'
492       +                                 ,  1
493       +                                 ,  prxchange( 's/[^a-z_\d]/_/i', -1, kstrip(basechar(putc(kstrip(string), '$ascii32.')))
493      !+ )
494       +                                 ), '$32.'));
495       +      return(trimn(result));
496       +   endsub;
497       +
498       +   /* *- test -*;
499       +
500       +   res = validname(' ');
501       +   put res=;
502       +
503       +   res = validname('a "1:1" relationship');
504       +   put res=;
505       +
506       +   */
507       +run;

NOTE: Function VALIDNAME saved to work.functions.run.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

508       +quit;
509       +
510       +%*- Set OPTION CMPLIB so as to allow SAS to find and access the fcmp functions -*;
511       +%*------------------------------------------------------------------------------*;
512       +%*- prepencd &fcmpoutlib. to OPTION CMPLIB value, unless it is already part of this option value -*;
513       +options %sysfunc(ifc( %sysfunc(exist(&fcmpoutlib., data)) and %sysfunc(findw(%qsysfunc(getoption(cmplib)), &fcmpoutlib.,
513      !+( -), ei))=0 , insert=(cmplib=&fcmpoutlib.), %str( )));
514       +%put option cmplib=%sysfunc(getoption(cmplib));
option cmplib=work.functions
515       +
516       +/* *- example usage -*;
517       +%put >%sysfunc(validname(%str( )))<;
518       +%put >%sysfunc(validname(.))<;
519       +%put >%sysfunc(validname(0))<;
                                                           The SAS System

520       +%put >%sysfunc(validname(1))<;
521       +%put >%sysfunc(validname(123))<;
522       +%put >%sysfunc(validname(1abc))<;
523       +%put >%sysfunc(validname(a1))<;
524       +%put >%sysfunc(validname(A very VERY long string with spaces))<;
525       +%put >%sysfunc(validname(a "1:1" relationship))<;
526       +%put >%sysfunc(validname(a 2$ bill or a 5£ note))<;
527       +%put >%sysfunc(validname("un garçon à  l'école"))<;
528       +%put >%sysfunc(validname(a {2µL} sample))<;
529       +%put >%sysfunc(validname(t_2.3_aes_summary))<;
530       +%put >%sysfunc(validname(où es-tu?))<;
531       +%put %qsysfunc(unicode(\u0020\u0020\u8404\u8404\u8404\u0020\u0020));
532       +%put >%sysfunc(validname(%qsysfunc(unicode(\u0020\u0020\u8404\u8404\u8404\u0020\u0020))))<;
533       +
534       +data test;
535       +   res = validname(' '); put '>' res= '<'; output;
536       +   res = validname('.'); put '>' res= '<'; output;
537       +   res = validname('0'); put '>' res= '<'; output;
538       +   res = validname('1'); put '>' res= '<'; output;
539       +   res = validname('12.3'); put '>' res= '<'; output;
540       +   res = validname('12,300'); put '>' res= '<'; output;
541       +   res = validname('12 300'); put '>' res= '<'; output;
542       +   res = validname('1abc'); put '>' res= '<'; output;
543       +   res = validname('a1'); put '>' res= '<'; output;
544       +   res = validname('A very VERY long string with spaces'); put '>' res= '<'; output;
545       +   res = validname('a "1:1" relationship'); put '>' res= '<'; output;
546       +   res = validname('a 2$ bill or a 5£ note'); put '>' res= '<'; output;
547       +   res = validname("un garçon à  l'école"); put '>' res= '<'; output;
548       +   res = validname('a {2µL} sample'); put '>' res= '<'; output;
549       +   res = validname('t_2.3_aes_summary'); put '>' res= '<'; output;
550       +   res = validname('où es-tu?'); put '>' res= '<'; output;
551       +   test = unicode('\u0020\u0020\u8404\u8404\u8404\u0020\u0020'); put test=;
552       +   res = validname(test); put '>' res= '<'; output;
553       +run;
554       +*/
NOTE: %INCLUDE (level 1) ending.
555        
556        %if %superq(runenvironment) = local %then %do;
557           %login_to_lsaf;
558           %let wait = Y;
559        %end;
560        
561        %*- Specify job (optional) parameters as global macro-variables -*;
562        %global create_folder  create_gadam_folder setup_gadam_folder rebuild_gadam_datasets qc_gadam_vs_study
562      ! check_and_load_gadam run_gadam_tables
563                mock force compounds indications studies domains next_job run_next_job pool_sdtm refresh_sdtm refresh_pool
563      ! last_refresh_reldy job_instance ;
564        /*
565        *- job defaults -*;
566        %let create_folder = Y;
567        %let mock = ;
568        %let force = ;
569        %let compounds = ;
570        %let indications = ;
571        %let studies = ;
572        %let domains = ;
573        %let refresh_sdtm = Y;
574        %let pool_sdtm = ;
                                                           The SAS System

575        %let run_next_job = N;
576        %let next_job = /general/biostat/jobs/gadam_rebuild_adam/dev/jobs/job_gadam_rebuild_adam.job;
577        %let last_refresh_reldy = -45 - 0;
578        
579        *- test -*;
580        %let create_folder = Y;
581        %let mock = Y;
582        %let force = Y;
583        %let compounds = test;
584        %let indications = indic;
585        %let studies = test-001 test-002;
586        %let domains = dm ae suppae ex suppex define acrf;
587        %let refresh_sdtm =;
588        %let pool_sdtm = Y ;
589        %let next_job = ;
590        %let run_next_job = N;
591        %let next_job = /general/biostat/jobs/gadam_rebuild_adam/dev/jobs/job_gadam_rebuild_adam.job;
592        %let last_refresh_reldy = -45 - -30;
593        
594        */
595        
596        %let outputfilename = none;
597        
598        
599        
600        libname out "&repevpath.output" COMPRESS=YES;
NOTE: Libref OUT was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: 
      /lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/biostat/jobs/g
      adam_ongoing_studies/prod/output
601        
602        libname refresh "&_SASWS_/general/biostat/jobs/gadam_refresh_sdtm_last/dev/output" access=readonly;
NOTE: Libref REFRESH was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: 
      /lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/biostat/jobs/g
      adam_refresh_sdtm_last/dev/output
603        
604        option ls=max ps=60;
605        
606        %*- run job to refresh the studies status in /general/biostat/metadata/projects/studies_status.sas7bdat -*;
607        %submit_job(/general/biostat/jobs/gadam_ongoing_studies/dev/jobs/job_studies_status.job, parent_job_instance = &job_instance);
MAUTOCOMPLOC:  The autocall macro SUBMIT_JOB is compiling using the autocall source file /lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/biostat/macros/_library/submit_job.sas.
NUM_JOBS_SPAWNED=1
MACROAPIVER=2.6
MAUTOCOMPLOC:  The autocall macro GEN_JOB_ENV is compiling using the autocall source file /lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/biostat/macros/_library/gen_job_env.sas.
DEBUG:(GEN_JOB_ENV): PRX=1
DEBUG:(GEN_JOB_ENV): prxmatch(1, /general/biostat/jobs/gadam_ongoing_studies/dev/jobs/job_studies_status.job) = 1
DEBUG:(GEN_JOB_ENV): (0) REFPATH=
DEBUG:(GEN_JOB_ENV): (0) REPEVPATH=/lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/biostat/jobs/gadam_ongoing_studies/prod/
DEBUG:(GEN_JOB_ENV): (0) RELREPEVPATH=/general/biostat/jobs/gadam_ongoing_studies/prod/
DEBUG:(GEN_JOB_ENV): (0) _SASFILEPATH_=/general/biostat/jobs/gadam_ongoing_studies/prod/programs/gadam_ongoing_studies.sas
DEBUG:(GEN_JOB_ENV): (0) PROGPATH=/general/biostat/jobs/gadam_ongoing_studies/prod/programs/
DEBUG:(GEN_JOB_ENV): (0) PATH=/general/biostat/jobs/gadam_ongoing_studies/dev/jobs/job_studies_status.job
Setting refpath = &repevpath
DEBUG:(GEN_JOB_ENV): (1) REFPATH=/lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/biostat/jobs/gadam_ongoing_studies/prod/
DEBUG:(GEN_JOB_ENV): (2) REFENV=prod
                                                                                                                         The SAS System

DEBUG:(GEN_JOB_ENV): (3) REFENV=prod
MAUTOCOMPLOC:  The autocall macro F_LSAF_EXISTS is compiling using the autocall source file /lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/biostat/macros/_library/f_lsaf_exists.sas.
MAUTOCOMPLOC:  The autocall macro DOSUBL is compiling using the autocall source file /lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/biostat/macros/_library/dosubl.sas.
DEBUG:(F_LSAF_EXISTS) - 2023-02-14T23:49:04 - Iteration: 1: slept = 0, exists = 1
DEBUG:(F_LSAF_EXISTS) - 2023-02-14T23:49:04 - Iteration: 1: slept = 0, exists = 1
DEBUG:(F_LSAF_EXISTS) - 2023-02-14T23:49:04 - Iteration: 1: slept = 0, exists = 1
MAUTOCOMPLOC:  The autocall macro LSAF_EXISTS is compiling using the autocall source file /sso/sfw/sas/940/SASFoundation/9.4/lsafapi/lsaf-sas-macro-2.6.1/sasmacros/lsaf_exists.sas.
MPRINT(LSAF_EXISTS):  ;
MPRINT(LSAF_EXISTS):   data _null_;
MPRINT(LSAF_EXISTS):   attrib returnCode length=8;
MPRINT(LSAF_EXISTS):   attrib message length=$200;
MPRINT(LSAF_EXISTS):   attrib logMsgPrefix length=$70;
MPRINT(LSAF_EXISTS):   attrib logMsg length=$300;
MPRINT(LSAF_EXISTS):   attrib exists length=3;
MPRINT(LSAF_EXISTS):   attrib logMsgPrimary length=$70;
MPRINT(LSAF_EXISTS):   declare javaobj srv("com/sas/lsaf/macro/content/repository/RepositoryService");
MPRINT(LSAF_EXISTS):   declare javaobj results("com/sas/lsaf/macro/common/result/Result");
MPRINT(LSAF_EXISTS):   srv.callStaticBooleanMethod("exists", "/general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_studies_status.job", results, exists);
MPRINT(LSAF_EXISTS):   results.callIntMethod("getReturnCode", returnCode);
MPRINT(LSAF_EXISTS):   results.callStringMethod("getReturnMessage", message);
MPRINT(LSAF_EXISTS):   logMsgPrefix="NOTE: SAS Life Science Analytics Framework Macro: * ";
MPRINT(LSAF_EXISTS):   if (returnCode ne 0) then do;
MPRINT(LSAF_EXISTS):   logMsgPrimary="ERROR: SAS Life Science Analytics Framework Macro:";
MPRINT(LSAF_EXISTS):   logMsg=" Cannot determine if the item exists: /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_studies_status.job" ;
MPRINT(LSAF_EXISTS):   exists=-1;
MPRINT(LSAF_EXISTS):   end;
MPRINT(LSAF_EXISTS):   else do;
MPRINT(LSAF_EXISTS):   logMsgPrimary=logMsgPrefix;
MPRINT(LSAF_EXISTS):   if (exists) then do;
MPRINT(LSAF_EXISTS):   logMsg=" The item exists: /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_studies_status.job" ;
MPRINT(LSAF_EXISTS):   end;
MPRINT(LSAF_EXISTS):   else do;
MPRINT(LSAF_EXISTS):   logMsg=" The item does not exist: /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_studies_status.job" ;
MPRINT(LSAF_EXISTS):   end;
MPRINT(LSAF_EXISTS):   end;
MPRINT(LSAF_EXISTS):   put;
MPRINT(LSAF_EXISTS):   put logMsgPrimary " " logMsg;
MPRINT(LSAF_EXISTS):   put logMsgPrefix " " "lsaf_exists";
MPRINT(LSAF_EXISTS):   put logMsgPrefix " _lsafMsg_= " message;
MPRINT(LSAF_EXISTS):   put logMsgPrefix " _lsafRC_= " returnCode;
MPRINT(LSAF_EXISTS):   put logMsgPrefix " _lsafExists_= " exists;
MPRINT(LSAF_EXISTS):   put;
MPRINT(LSAF_EXISTS):   call symputx("_lsafRC_", returnCode);
MPRINT(LSAF_EXISTS):   call symputx("_lsafMsg_", message);
MPRINT(LSAF_EXISTS):   call symputx("_lsafExists_", exists) ;
MPRINT(LSAF_EXISTS):   run;


NOTE: SAS Life Science Analytics Framework Macro: *  The item exists: /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_studies_status.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_exists
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafExists_= 1
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

                                                                                                                         The SAS System

MPRINT(SUBMIT_JOB):  ;
Notice:(SUBMIT_JOB): LSAF Job Path exists: /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_studies_status.job.
MPRINT(SUBMIT_JOB):   proc format;
MPRINT(SUBMIT_JOB):   value $jobabbr "job_gadam_ongoing_studies.job"= "gos" "job_studies_status.job"= "ss" "job_gadam_sdtm_key_core_vars.job"= "gskcv" "job_unzip_sdtm_sources.job"= "uss" "job_zip_extract_files.job"= "zef" "job_lsaf_get_last_sdtm.job"= 
"lgls" "setup_reporting_event_folder.job"= "sref" "job_gadam_refresh_sdtm_last.job"= "grsl" "job_gadam_update_refresh_info.job"= "guri" "convert_definetosas.job"= "cdts" "job_gadam_studysetup.job"= "gss" "job_gadam_rebuild_adam.job"= "gra" "job_adAAA" - 
"job_adzzz"= "adx" "job_qcstudyadams.job"= "qcsa" "job_qc_gadam_vs_study.job"= "qcgvs" "job_qc_gadam_vs_study-overview.job"= "qcgvso" "job_check_and_load.job"= "cal" "job_tAAA" - "job_tzzz"= "txx" "job_gadam_qc_overviews.job"= "gqco" 
"job_make_sdtm_pool_jobs.job"= "mspj" "job_lsaf_pool_last_sdtm.job"= "lpls" "sdtm_pool-AAA" - "sdtm_pool-zzz"= "pci" "job_gadam_refresh_sdtm_overview.job"= "grso" "getdata.job"= "gd" OTHER = "***" ;
NOTE: Format $JOBABBR has been output.
MPRINT(SUBMIT_JOB):   run;

NOTE: PROCEDURE FORMAT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(SUBMIT_JOB):   quit;
job_instance=>Ngos117Prod_1<
MAUTOCOMPLOC:  The autocall macro LSAF_GETJOBPARAMETERS is compiling using the autocall source file /sso/sfw/sas/940/SASFoundation/9.4/lsafapi/lsaf-sas-macro-2.6.1/sasmacros/lsaf_getjobparameters.sas.
MPRINT(LSAF_GETJOBPARAMETERS):  ;
MPRINT(LSAF_GETJOBPARAMETERS):   data work.job_Parameters (label="Created by LSAF_GETJOBPARAMETERS" KEEP=jobPath jobVersion name label type defaultValue fileVersion includeSubFolders );
MPRINT(LSAF_GETJOBPARAMETERS):   attrib returnCode length=8 message length=$200 logMsgPrefix length=$70 logMsgPrimary length=$70 logMsg length=$300 rowCount length=8 jobPath length=$2048 label="Job Path" jobVersion length=$32 label="Job Version" name 
length=$256 label="Parameter Name" label length=$256 label="Parameter Label" type length=$32 label="Parameter Type" defaultValue length=$2048 label="Parameter Default Value" fileVersion length=$32 label="File Version if File Type" includeSubFolders 
length=8 label="Include Container SubFolders" includesSubFolders length=$5 label="FOR INTERNAL PROCESSING ONLY.  WILL BE DROPPED." ;
MPRINT(LSAF_GETJOBPARAMETERS):   rowCount=0;
MPRINT(LSAF_GETJOBPARAMETERS):   declare javaobj srv("com/sas/lsaf/macro/execution/job/JobService") ;
MPRINT(LSAF_GETJOBPARAMETERS):   declare javaobj results("com/sas/lsaf/macro/execution/job/SasJobParametersResult");
MPRINT(LSAF_GETJOBPARAMETERS):   srv.callStaticVoidMethod("getRepositoryJobParameters", "/general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_studies_status.job", "", results) ;
MPRINT(LSAF_GETJOBPARAMETERS):   results.callIntMethod("getReturnCode", returnCode);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getReturnMessage", message);
MPRINT(LSAF_GETJOBPARAMETERS):   logMsgPrefix="NOTE: SAS Life Science Analytics Framework Macro: * ";
MPRINT(LSAF_GETJOBPARAMETERS):   if (returnCode ne 0) then do;
MPRINT(LSAF_GETJOBPARAMETERS):   logMsgPrimary="ERROR: SAS Life Science Analytics Framework Macro:";
MPRINT(LSAF_GETJOBPARAMETERS):   if "" NE "" then logMsg=" Cannot retrieve parameters for job /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_studies_status.job, version " ;
MPRINT(LSAF_GETJOBPARAMETERS):   else logMsg=" Cannot retrieve parameters for job /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_studies_status.job" ;
MPRINT(LSAF_GETJOBPARAMETERS):   end;
MPRINT(LSAF_GETJOBPARAMETERS):   else do;
MPRINT(LSAF_GETJOBPARAMETERS):   logMsgPrimary=logMsgPrefix;
MPRINT(LSAF_GETJOBPARAMETERS):   logMsg=" Parameters were returned for job /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_studies_status.job" ;
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getJobPath", jobPath);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getJobVersion", jobVersion);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callIntMethod("getSize", rowCount);
MPRINT(LSAF_GETJOBPARAMETERS):   do row=0 to rowCount - 1;
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getName", row, name);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getLabel", row, label);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getType", row, type);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getDefaultValue", row, defaultValue);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getFileVersion", row, fileVersion);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getContainerIncludeSubfolders", row, includesSubFolders);
MPRINT(LSAF_GETJOBPARAMETERS):   includeSubFolders=input(includesSubFolders,best.);
MPRINT(LSAF_GETJOBPARAMETERS):   output;
MPRINT(LSAF_GETJOBPARAMETERS):   end;
MPRINT(LSAF_GETJOBPARAMETERS):   end;
MPRINT(LSAF_GETJOBPARAMETERS):   put;
MPRINT(LSAF_GETJOBPARAMETERS):   put logMsgPrimary " " logMsg;
MPRINT(LSAF_GETJOBPARAMETERS):   put logMsgPrefix " " "lsaf_getjobparameters";
MPRINT(LSAF_GETJOBPARAMETERS):   if (rowCount=0) then put logMsgPrefix " No parameters were found.";
MPRINT(LSAF_GETJOBPARAMETERS):   else put logMsgPrefix " " rowCount " records written to data set work.job_Parameters";
MPRINT(LSAF_GETJOBPARAMETERS):   put logMsgPrefix " _lsafMsg_= " message ;
                                                                                                                         The SAS System

MPRINT(LSAF_GETJOBPARAMETERS):   put logMsgPrefix " _lsafRC_= " returnCode ;
MPRINT(LSAF_GETJOBPARAMETERS):   put;
MPRINT(LSAF_GETJOBPARAMETERS):   call symputx("_lsafRC_", returnCode);
MPRINT(LSAF_GETJOBPARAMETERS):   call symputx("_lsafMsg_", message);
MPRINT(LSAF_GETJOBPARAMETERS):   run;


NOTE: SAS Life Science Analytics Framework Macro: *  Parameters were returned for job /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_studies_status.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_getjobparameters
NOTE: SAS Life Science Analytics Framework Macro: *  4  records written to data set work.job_Parameters
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: The data set WORK.JOB_PARAMETERS has 4 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.00 seconds
      

MPRINT(SUBMIT_JOB):  ;
MAUTOCOMPLOC:  The autocall macro DSATTR is compiling using the autocall source file 
            /lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/biostat/jobs/gadam_ongoing_studies/prod/macros/global_macros/dsattr.sas.
MAUTOCOMPLOC:  The autocall macro LOWCASE is compiling using the autocall source file /sso/sfw/sas/940/SASFoundation/9.4/sasautos/lowcase.sas.
NOTE: The dataset WORK.JOB_PARAMETERS has 4 observations and 8 variables.
MPRINT(SUBMIT_JOB):   ;
MPRINT(SUBMIT_JOB):   *- dataset to specify job parameters (from macro parameters values) -*;
MPRINT(SUBMIT_JOB):   data lsaf_job_params(index=(name));
MPRINT(SUBMIT_JOB):   set work.job_Parameters(rename=(defaultValue = value));
MPRINT(SUBMIT_JOB):   if upcase(name) = "_PARENTJOB_WS_" then do;
MPRINT(SUBMIT_JOB):   if symexist("_SASWS_") and type = "CHARACTER" then value = symget("_SASWS_");
MPRINT(SUBMIT_JOB):   else value = " ";
MPRINT(SUBMIT_JOB):   end;
MPRINT(SUBMIT_JOB):   else if upcase(name) = "_PARENTJOB_WRK_" then do;
MPRINT(SUBMIT_JOB):   value = pathname("WORK", "L");
MPRINT(SUBMIT_JOB):   end;
MPRINT(SUBMIT_JOB):   else if symexist(name) then do;
MPRINT(SUBMIT_JOB):   if symget(name) ^= ' ' then value = symget(name);
MPRINT(SUBMIT_JOB):   end;
MPRINT(SUBMIT_JOB):   new_value = translate(value, ' ', ',;()"''&%');
MPRINT(SUBMIT_JOB):   if new_value ne value then put "NOTE:(SUBMIT_JOB): Special characters may be removed from parameter value:" / @2 "parameter: " name /@2 "old value: " value /@2 "new value: " new_value;
MPRINT(SUBMIT_JOB):   if _n_=1 then put "Not" "ice:(SUBMIT_JOB): Updated Job parameters:";
MPRINT(SUBMIT_JOB):   if type = "FOLDER" then put " - " name @+(-1) "=" value "[" type= @+(-1) ", " includeSubFolders= @+(-1) "]" /;
MPRINT(SUBMIT_JOB):   else if TYPE = "FILE" then put " - " name @+(-1) "=" value "[" type= @+(-1) ", " fileversion= @+(-1) "]" /;
MPRINT(SUBMIT_JOB):   else put " - " name @+(-1) "=" value "[" type= @+(-1) "]" /;
MPRINT(SUBMIT_JOB):   run;

Notice:(SUBMIT_JOB): Updated Job parameters:
 - job_instance=Ngos117Prod_1 [type=CHARACTER]
 - _PARENTJOB_WS_=/lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba [type=CHARACTER]
 - _PARENTJOB_WRK_=/saswork/sas_tmp/SAS_work89DD00193DB6_xar08auv.vsp.sas.com/SAS_work944F00193DB6_xar08auv.vsp.sas.com [type=CHARACTER]
 - USE_SAS_WORKSPACE_MACROS=  [type=CHARACTER]
NOTE: There were 4 observations read from the data set WORK.JOB_PARAMETERS.
NOTE: The data set WORK.LSAF_JOB_PARAMS has 4 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

N_PARAMS=4
                                                                                                                         The SAS System

MPRINT(SUBMIT_JOB):   data lsaf_job_params(index=(name));
MPRINT(SUBMIT_JOB):   set lsaf_job_params;
MPRINT(SUBMIT_JOB):   by name;
MPRINT(SUBMIT_JOB):   if (not first.name) or (not last.name) then do;
MPRINT(SUBMIT_JOB):   if last.name then action = "(kept)   ";
MPRINT(SUBMIT_JOB):   else action = "(dropped)";
MPRINT(SUBMIT_JOB):   drop action;
MPRINT(SUBMIT_JOB):   put "Not" "ice:(SUBMIT_JOB): duplicate parameter " name " = " value @+(3) action;
MPRINT(SUBMIT_JOB):   end;
MPRINT(SUBMIT_JOB):   if last.name;
MPRINT(SUBMIT_JOB):   run;

NOTE: There were 4 observations read from the data set WORK.LSAF_JOB_PARAMS.
NOTE: The data set WORK.LSAF_JOB_PARAMS has 4 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SUBMIT_JOB):   data _null_;
MPRINT(SUBMIT_JOB):   file print;
MPRINT(SUBMIT_JOB):   set lsaf_job_params(where=(prxmatch('/^(FOLDER|FILE)$/', trim(type))) in=a) lsaf_job_params(where=(prxmatch('/^(FOLDER|FILE)$/', trim(type))=0 and value ^= ' ')) end=last;
MPRINT(SUBMIT_JOB):   if _n_=1 then putlog "=== 2023-02-14T23:49:04 - Submit job: /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_studies_status.job (with parameters: " @;
MPRINT(SUBMIT_JOB):   _n_a+a;
MPRINT(SUBMIT_JOB):   if _n_-1 = _n_a then do;
MPRINT(SUBMIT_JOB):   putlog / @8 @;
MPRINT(SUBMIT_JOB):   put / @8 @;
MPRINT(SUBMIT_JOB):   end;
MPRINT(SUBMIT_JOB):   if a then putlog / @8 name @+(-1) "=" value ' (' type= includeSubFolders= @+(-1) ')   ' @;
MPRINT(SUBMIT_JOB):   else putlog name @+(-1) "=" value "  " @ ;
MPRINT(SUBMIT_JOB):   if last then putlog @+8 ") ===";
MPRINT(SUBMIT_JOB):   if _n_=1 then put "=== 2023-02-14T23:49:04 - Submit job: /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_studies_status.job (with parameters: " @;
MPRINT(SUBMIT_JOB):   if a then put / @8 name @+(-1) "=" value ' (' type= includeSubFolders= @+(-1) ')   ' @;
MPRINT(SUBMIT_JOB):   else put name @+(-1) "=" value "  " @ ;
MPRINT(SUBMIT_JOB):   if last then put @+8 ") ===";
MPRINT(SUBMIT_JOB):   run;

=== 2023-02-14T23:49:04 - Submit job: /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_studies_status.job (with parameters: 
       _PARENTJOB_WRK_=/saswork/sas_tmp/SAS_work89DD00193DB6_xar08auv.vsp.sas.com/SAS_work944F00193DB6_xar08auv.vsp.sas.com   _PARENTJOB_WS_=/lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba   
job_instance=Ngos117Prod_1           ) ===
NOTE: 2 lines were written to file PRINT.
NOTE: There were 0 observations read from the data set WORK.LSAF_JOB_PARAMS.
      WHERE PRXMATCH('/^(FOLDER|FILE)$/', TRIM(type));
NOTE: There were 3 observations read from the data set WORK.LSAF_JOB_PARAMS.
      WHERE (PRXMATCH('/^(FOLDER|FILE)$/', TRIM(type))=0) and (value not = ' ');
NOTE: The DATA step printed page 1.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MAUTOCOMPLOC:  The autocall macro LSAF_SUBMITJOB is compiling using the autocall source file /sso/sfw/sas/940/SASFoundation/9.4/lsafapi/lsaf-sas-macro-2.6.1/sasmacros/lsaf_submitjob.sas.
MPRINT(LSAF_SUBMITJOB):  ;
MAUTOCOMPLOC:  The autocall macro CMPRES is compiling using the autocall source file /sso/sfw/sas/940/SASFoundation/9.4/sasautos/cmpres.sas.
MAUTOCOMPLOC:  The autocall macro LEFT is compiling using the autocall source file /sso/sfw/sas/940/SASFoundation/9.4/sasautos/left.sas.
MAUTOCOMPLOC:  The autocall macro QTRIM is compiling using the autocall source file /sso/sfw/sas/940/SASFoundation/9.4/sasautos/qtrim.sas.
MAUTOCOMPLOC:  The autocall macro VERIFY is compiling using the autocall source file /sso/sfw/sas/940/SASFoundation/9.4/sasautos/verify.sas.
MPRINT(LSAF_SUBMITJOB):   *;
                                                                                                                         The SAS System

MAUTOCOMPLOC:  The autocall macro LSAF_VALIDATE_PARAMETERS_DATASET is compiling using the autocall source file /sso/sfw/sas/940/SASFoundation/9.4/lsafapi/lsaf-sas-macro-2.6.1/sasmacros/lsaf_validate_parameters_dataset.sas.
NOTE: lsaf_submitjob: Validating dataset lsaf_job_params
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   options nonotes;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   *;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   *;
MAUTOCOMPLOC:  The autocall macro LSAF_VALIDATE_SASDATASET is compiling using the autocall source file /sso/sfw/sas/940/SASFoundation/9.4/lsafapi/lsaf-sas-macro-2.6.1/sasmacros/lsaf_validate_sasdataset.sas.
MPRINT(LSAF_VALIDATE_SASDATASET):   *;
MAUTOCOMPLOC:  The autocall macro LSAF_VALIDATE_SASDATASET_NAME is compiling using the autocall source file /sso/sfw/sas/940/SASFoundation/9.4/lsafapi/lsaf-sas-macro-2.6.1/sasmacros/lsaf_validate_sasdataset_name.sas.
MAUTOCOMPLOC:  The autocall macro QCMPRES is compiling using the autocall source file /sso/sfw/sas/940/SASFoundation/9.4/sasautos/qcmpres.sas.
MAUTOCOMPLOC:  The autocall macro QLEFT is compiling using the autocall source file /sso/sfw/sas/940/SASFoundation/9.4/sasautos/qleft.sas.
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   options nonotes;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   data _null_;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   length message $45 libName $8 dsName $300;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   providedDatasetName=kstrip("lsaf_job_params");
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   dsName="INVALID";
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   dsNameIsValid=0;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   dotCount=countc(providedDatasetName,".");
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   dotPosition=kindexc(providedDatasetName,".");
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   *put dotPosition=;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   if (dotPosition=1 or dotPosition=length(providedDatasetName)) then do;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   message=" Missing either LIBNAME or data set.";
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   GOTO SETVARS;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   end;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   select (dotCount);
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   when (0) dsName=providedDatasetName;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   when (1) do;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   if (dotPosition le 9) then do;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   libName = (ksubstr(providedDatasetName, 1, dotPosition-1));
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   *put libName=;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   dsName = (ksubstr(providedDatasetName, dotPosition+1));
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   end;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   else do;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   message="Libname longer than 8 characters.";
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   GOTO SETVARS;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   end;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   end;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   otherwise do;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   message="Invalid data set name structure.";
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   GOTO SETVARS;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   end;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   end;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   firstchar=ksubstr(kleft(dsName), 1, 1);
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   if (anydigit(firstchar)) then do;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   message="Data set name must start with a character.";
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   GOTO SETVARS;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   end;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   if (length(dsName) > 32) then do;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   message="Data set name longer than 32 characters.";
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   GOTO SETVARS;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   end;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   dsNameIsValid=1;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   SETVARS: call symput("_lsafvaliddsn_", strip(put(dsNameIsValid, best.)));
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   call symput("dsnMsg", message);
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   call symput("specifiedLib", strip(libName));
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   run;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   options NONOTES;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   * CHECK EXISTS: Also getting errors for data set name.;
MPRINT(LSAF_VALIDATE_SASDATASET):  ;
                                                                                                                         The SAS System

MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):  ;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   proc sort data=lsaf_job_params out=__SASMacro_submitJobtemp__;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   by name;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   run;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   data _null_;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   set __SASMacro_submitJobtemp__;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   by name;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   if (first.name AND NOT(last.name)) then do;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   call symput("_lsafMsg_", "Input data set has duplicate values for parameter name " || name || ".");
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   STOP;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   end;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   call symput("_lsafRC_", "0");
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   run;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   option notes;
MPRINT(LSAF_SUBMITJOB):  ;
MPRINT(LSAF_SUBMITJOB):   option notes;
MPRINT(LSAF_SUBMITJOB):   data _null_;
MPRINT(LSAF_SUBMITJOB):   attrib returnCode length=8 message length=$200 jobSubmissionId length=$525 logMsgPrefix length=$70 logMsgPrimary length=$70 logMsg length=$300 ;
MPRINT(LSAF_SUBMITJOB):   set lsaf_job_params end=eof;
MPRINT(LSAF_SUBMITJOB):   if (_n_ = 1) then do;
MPRINT(LSAF_SUBMITJOB):   declare javaobj params("com/sas/lsaf/macro/execution/job/SasParameterValues");
MPRINT(LSAF_SUBMITJOB):   declare javaobj srv("com/sas/lsaf/macro/execution/jobsubmission/JobSubmissionService");
MPRINT(LSAF_SUBMITJOB):   declare javaobj results("com/sas/lsaf/macro/common/result/Result");
MPRINT(LSAF_SUBMITJOB):   end;
MPRINT(LSAF_SUBMITJOB):   params.callVoidMethod("addValue", kstrip(name), kstrip(value), kstrip(type), kstrip(fileVersion), includeSubFolders);
MPRINT(LSAF_SUBMITJOB):   if (eof);
MPRINT(LSAF_SUBMITJOB):   declare javaobj job("com/sas/lsaf/macro/execution/jobsubmission/SasSubmittableJob", "/general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_studies_status.job", "", params);
MPRINT(LSAF_SUBMITJOB):   srv.callStaticStringMethod("submitRepositoryJob", job, results, jobSubmissionId);
MPRINT(LSAF_SUBMITJOB):   results.callIntMethod("getReturnCode", returnCode);
MPRINT(LSAF_SUBMITJOB):   results.callStringMethod("getReturnMessage", message);
MPRINT(LSAF_SUBMITJOB):   logMsgPrefix="NOTE: SAS Life Science Analytics Framework Macro: * ";
MPRINT(LSAF_SUBMITJOB):   if (returnCode ne 0) then do;
MPRINT(LSAF_SUBMITJOB):   logMsgPrimary="ERROR: SAS Life Science Analytics Framework Macro:";
MPRINT(LSAF_SUBMITJOB):   logMsg=" Cannot submit job /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_studies_status.job";
MPRINT(LSAF_SUBMITJOB):   end;
MPRINT(LSAF_SUBMITJOB):   else do;
MPRINT(LSAF_SUBMITJOB):   logMsgPrimary=logMsgPrefix;
MPRINT(LSAF_SUBMITJOB):   logMsg=" Submitted job /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_studies_status.job";
MPRINT(LSAF_SUBMITJOB):   end;
MPRINT(LSAF_SUBMITJOB):   put;
MPRINT(LSAF_SUBMITJOB):   put logMsgPrimary " " logMsg;
MPRINT(LSAF_SUBMITJOB):   put logMsgPrefix " " "lsaf_submitjob";
MPRINT(LSAF_SUBMITJOB):   put logMsgPrefix " _lsafMsg_= " message ;
MPRINT(LSAF_SUBMITJOB):   put logMsgPrefix " _lsafRC_= " returnCode ;
MPRINT(LSAF_SUBMITJOB):   if "lsaf_job_params" = "" then put logMsgPrefix "No job parameters were supplied.";
MPRINT(LSAF_SUBMITJOB):   else put logMsgPrefix "sas_dsname = lsaf_job_params";
MPRINT(LSAF_SUBMITJOB):   put logMsgPrefix "_lsafJobSubmissionId_= " jobSubmissionId;
MPRINT(LSAF_SUBMITJOB):   put;
MPRINT(LSAF_SUBMITJOB):   call symputx("_lsafRC_", returnCode);
MPRINT(LSAF_SUBMITJOB):   call symputx("_lsafMsg_", message);
MPRINT(LSAF_SUBMITJOB):   call symputx("_lsafJobSubmissionId_", strip(jobSubmissionId));
MPRINT(LSAF_SUBMITJOB):   run;


NOTE: SAS Life Science Analytics Framework Macro: *  Submitted job /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_studies_status.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_submitjob
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
                                                                                                                         The SAS System

NOTE: SAS Life Science Analytics Framework Macro: * sas_dsname = lsaf_job_params
NOTE: SAS Life Science Analytics Framework Macro: * _lsafJobSubmissionId_= cb37e48a-71d9-49b3-aa7c-9459a08c0b82
NOTE: There were 4 observations read from the data set WORK.LSAF_JOB_PARAMS.
NOTE: DATA statement used (Total process time):
      real time           1.35 seconds
      cpu time            0.01 seconds
      

MPRINT(LSAF_SUBMITJOB):   options NONOTES;
MPRINT(SUBMIT_JOB):  ;
MPRINT(SUBMIT_JOB):   *- Job submission succeeded -*;
MPRINT(SUBMIT_JOB):   option nomprint nonotes
Calling %lsaf_getitemid(lsaf_path=/general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_studies_status.job) ...
MAUTOCOMPLOC:  The autocall macro LSAF_GETITEMID is compiling using the autocall source file /sso/sfw/sas/940/SASFoundation/9.4/lsafapi/lsaf-sas-macro-2.6.1/sasmacros/lsaf_getitemid.sas.
_LSAFMSG_=Success.  _LSAFRC_=0  _LSAFITEMID_=5e8fff7a-04fc-4577-b25a-b58862bea476
Calling %step_lsaf_getjobsubmissioninfos(job_subm_id=cb37e48a-71d9-49b3-aa7c-9459a08c0b82) ...
MAUTOCOMPLOC:  The autocall macro STEP_LSAF_GETJOBSUBMISSIONINFOS is compiling using the autocall source file 
            /lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/biostat/macros/_library/step_lsaf_getjobsubmissioninfos.sas.
Notice: SYSDATASTEPPHASE= IN_DATA_STEP=N
MAUTOCOMPLOC:  The autocall macro VARLIST is compiling using the autocall source file /lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/biostat/macros/_library/varlist.sas.
Ignoring record: submissionId=30678109-1661-4a87-858f-1bc1b0d581fa jobPath=/general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_lsaf_get_last_sdtm.job jobVersion=0.1 jobId=abcfa448-6829-4513-8bef-3d8418207d45
Ignoring record: submissionId=c4fb4991-9137-4374-8d55-32ed9002f3d8 jobPath=/general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_gadam_ongoing_studies.job jobVersion=0.1 jobId=c762f385-9376-49c8-8cec-d19326e7e18e
Ignoring record: submissionId=e10042a4-6280-4c02-92e6-fbbdbb000293 jobPath=/general/biostat/jobs/gadam_rebuild_adam/prod/jobs/job_gadam_rebuild_adam.job jobVersion=  jobId=02b06e4d-7777-4a59-b2f9-2fc165603216
Ignoring record: submissionId=f00d2b52-d9f1-4ef1-8922-181d934626e0 jobPath=/general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_gadam_ongoing_studies.job jobVersion=0.1 jobId=c762f385-9376-49c8-8cec-d19326e7e18e
Ignoring record: submissionId=7e820358-2d58-4d70-904b-c779f6bea07a jobPath=/clinical/argx-113/cidp/argx-113-1802/biostat/staging/generic_adam/jobs/job_gadam_rebuild_adam.job jobVersion=  jobId=5ddfea34-d035-4d8f-a8ab-3bcb9e5707e3
Ignoring record: submissionId=950a2705-2d15-4db0-bfba-dd7c1cdeb43d jobPath=/clinical/argx-113/cidp/argx-113-1802/biostat/staging/generic_adam/jobs/job_tae.job jobVersion=  jobId=b83418c6-5bc8-45db-8950-5a0ece44040e
Notice: _LSAFJOBSUBMISSIONID_=cb37e48a-71d9-49b3-aa7c-9459a08c0b82 SESSIONID=20fe99f9-5ea5-43ef-be12-0b0a0ccaf5a8 JOB=/general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_studies_status.job JOBID=5e8fff7a-04fc-4577-b25a-b58862bea476
MAUTOCOMPLOC:  The autocall macro GET_LSAF_JOB_SUBMISSION_STATUS is compiling using the autocall source file 
            /lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/biostat/macros/_library/get_lsaf_job_submission_status.sas.
(SUBMIT_JOB): 2023-02-14T23:49:06 - Submitted REPOSITORY Job /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_studies_status.job          with Submission ID: cb37e48a-71d9-49b3-aa7c-9459a08c0b82, Status: STARTED
(SUBMIT_JOB): 23:49:06.05 Elapsed: 00:00:02.22 Job Submission Status: STARTED
(SUBMIT_JOB): 23:49:08.58 Elapsed: 00:00:04.75 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 23:49:11.13 Elapsed: 00:00:07.30 Job Submission Status: COMPLETED_SUCCESSFUL
(SUBMIT_JOB): 2023-02-14T23:49:14 - Submitted REPOSITORY job: /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_studies_status.job has completed with status: COMPLETED_SUCCESSFUL
MPRINT(SUBMIT_JOB):  ;
job_studies_status.job: get job status: 0: Success.:       Elapsed: 00:00:09.80       REPOSITORY Job /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_studies_status.job with Submission ID: cb37e48a-71d9-49b3-aa7c-9459a08c0b82, Status: 
COMPLETED_SUCCESSFUL
608        
609        
610        %*- run job to refresh the list of SDTM Key Variables (dataset sdtm_keys)
611            and Core Variables (dataset sdtm_core_vars) in /general/biostat/jobs/gadam_refresh_sdtm_last/dev/input -*;
612        %submit_job(/general/biostat/jobs/gadam_ongoing_studies/dev/jobs/job_gadam_sdtm_key_core_vars.job, parent_job_instance = &job_instance);
NUM_JOBS_SPAWNED=2
MACROAPIVER=2.6
MPRINT(SUBMIT_JOB):   proc sql noprint;
MPRINT(SUBMIT_JOB):   drop table work.job_Parameters;
NOTE: Table WORK.JOB_PARAMETERS has been dropped.
MPRINT(SUBMIT_JOB):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

DEBUG:(GEN_JOB_ENV): PRX=8
DEBUG:(GEN_JOB_ENV): prxmatch(8, /general/biostat/jobs/gadam_ongoing_studies/dev/jobs/job_gadam_sdtm_key_core_vars.job) = 1
DEBUG:(GEN_JOB_ENV): (0) REFPATH=
DEBUG:(GEN_JOB_ENV): (0) REPEVPATH=/lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/biostat/jobs/gadam_ongoing_studies/prod/
                                                                                                                         The SAS System

DEBUG:(GEN_JOB_ENV): (0) RELREPEVPATH=/general/biostat/jobs/gadam_ongoing_studies/prod/
DEBUG:(GEN_JOB_ENV): (0) _SASFILEPATH_=/general/biostat/jobs/gadam_ongoing_studies/prod/programs/gadam_ongoing_studies.sas
DEBUG:(GEN_JOB_ENV): (0) PROGPATH=/general/biostat/jobs/gadam_ongoing_studies/prod/programs/
DEBUG:(GEN_JOB_ENV): (0) PATH=/general/biostat/jobs/gadam_ongoing_studies/dev/jobs/job_gadam_sdtm_key_core_vars.job
Setting refpath = &repevpath
DEBUG:(GEN_JOB_ENV): (1) REFPATH=/lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/biostat/jobs/gadam_ongoing_studies/prod/
DEBUG:(GEN_JOB_ENV): (2) REFENV=prod
DEBUG:(GEN_JOB_ENV): (3) REFENV=prod
DEBUG:(F_LSAF_EXISTS) - 2023-02-14T23:49:14 - Iteration: 1: slept = 0, exists = 1
DEBUG:(F_LSAF_EXISTS) - 2023-02-14T23:49:14 - Iteration: 1: slept = 0, exists = 1
DEBUG:(F_LSAF_EXISTS) - 2023-02-14T23:49:14 - Iteration: 1: slept = 0, exists = 1
MPRINT(LSAF_EXISTS):  ;
MPRINT(LSAF_EXISTS):   data _null_;
MPRINT(LSAF_EXISTS):   attrib returnCode length=8;
MPRINT(LSAF_EXISTS):   attrib message length=$200;
MPRINT(LSAF_EXISTS):   attrib logMsgPrefix length=$70;
MPRINT(LSAF_EXISTS):   attrib logMsg length=$300;
MPRINT(LSAF_EXISTS):   attrib exists length=3;
MPRINT(LSAF_EXISTS):   attrib logMsgPrimary length=$70;
MPRINT(LSAF_EXISTS):   declare javaobj srv("com/sas/lsaf/macro/content/repository/RepositoryService");
MPRINT(LSAF_EXISTS):   declare javaobj results("com/sas/lsaf/macro/common/result/Result");
MPRINT(LSAF_EXISTS):   srv.callStaticBooleanMethod("exists", "/general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_gadam_sdtm_key_core_vars.job", results, exists);
MPRINT(LSAF_EXISTS):   results.callIntMethod("getReturnCode", returnCode);
MPRINT(LSAF_EXISTS):   results.callStringMethod("getReturnMessage", message);
MPRINT(LSAF_EXISTS):   logMsgPrefix="NOTE: SAS Life Science Analytics Framework Macro: * ";
MPRINT(LSAF_EXISTS):   if (returnCode ne 0) then do;
MPRINT(LSAF_EXISTS):   logMsgPrimary="ERROR: SAS Life Science Analytics Framework Macro:";
MPRINT(LSAF_EXISTS):   logMsg=" Cannot determine if the item exists: /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_gadam_sdtm_key_core_vars.job" ;
MPRINT(LSAF_EXISTS):   exists=-1;
MPRINT(LSAF_EXISTS):   end;
MPRINT(LSAF_EXISTS):   else do;
MPRINT(LSAF_EXISTS):   logMsgPrimary=logMsgPrefix;
MPRINT(LSAF_EXISTS):   if (exists) then do;
MPRINT(LSAF_EXISTS):   logMsg=" The item exists: /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_gadam_sdtm_key_core_vars.job" ;
MPRINT(LSAF_EXISTS):   end;
MPRINT(LSAF_EXISTS):   else do;
MPRINT(LSAF_EXISTS):   logMsg=" The item does not exist: /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_gadam_sdtm_key_core_vars.job" ;
MPRINT(LSAF_EXISTS):   end;
MPRINT(LSAF_EXISTS):   end;
MPRINT(LSAF_EXISTS):   put;
MPRINT(LSAF_EXISTS):   put logMsgPrimary " " logMsg;
MPRINT(LSAF_EXISTS):   put logMsgPrefix " " "lsaf_exists";
MPRINT(LSAF_EXISTS):   put logMsgPrefix " _lsafMsg_= " message;
MPRINT(LSAF_EXISTS):   put logMsgPrefix " _lsafRC_= " returnCode;
MPRINT(LSAF_EXISTS):   put logMsgPrefix " _lsafExists_= " exists;
MPRINT(LSAF_EXISTS):   put;
MPRINT(LSAF_EXISTS):   call symputx("_lsafRC_", returnCode);
MPRINT(LSAF_EXISTS):   call symputx("_lsafMsg_", message);
MPRINT(LSAF_EXISTS):   call symputx("_lsafExists_", exists) ;
MPRINT(LSAF_EXISTS):   run;


NOTE: SAS Life Science Analytics Framework Macro: *  The item exists: /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_gadam_sdtm_key_core_vars.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_exists
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafExists_= 1
NOTE: DATA statement used (Total process time):
                                                                                                                         The SAS System

      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(SUBMIT_JOB):  ;
Notice:(SUBMIT_JOB): LSAF Job Path exists: /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_gadam_sdtm_key_core_vars.job.
MPRINT(SUBMIT_JOB):   proc format;
MPRINT(SUBMIT_JOB):   value $jobabbr "job_gadam_ongoing_studies.job"= "gos" "job_studies_status.job"= "ss" "job_gadam_sdtm_key_core_vars.job"= "gskcv" "job_unzip_sdtm_sources.job"= "uss" "job_zip_extract_files.job"= "zef" "job_lsaf_get_last_sdtm.job"= 
"lgls" "setup_reporting_event_folder.job"= "sref" "job_gadam_refresh_sdtm_last.job"= "grsl" "job_gadam_update_refresh_info.job"= "guri" "convert_definetosas.job"= "cdts" "job_gadam_studysetup.job"= "gss" "job_gadam_rebuild_adam.job"= "gra" "job_adAAA" - 
"job_adzzz"= "adx" "job_qcstudyadams.job"= "qcsa" "job_qc_gadam_vs_study.job"= "qcgvs" "job_qc_gadam_vs_study-overview.job"= "qcgvso" "job_check_and_load.job"= "cal" "job_tAAA" - "job_tzzz"= "txx" "job_gadam_qc_overviews.job"= "gqco" 
"job_make_sdtm_pool_jobs.job"= "mspj" "job_lsaf_pool_last_sdtm.job"= "lpls" "sdtm_pool-AAA" - "sdtm_pool-zzz"= "pci" "job_gadam_refresh_sdtm_overview.job"= "grso" "getdata.job"= "gd" OTHER = "***" ;
NOTE: Format $JOBABBR is already on the library WORK.FORMATS.
NOTE: Format $JOBABBR has been output.
MPRINT(SUBMIT_JOB):   run;

NOTE: PROCEDURE FORMAT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SUBMIT_JOB):   quit;
job_instance=>Ngos117Prod_2<
MPRINT(LSAF_GETJOBPARAMETERS):  ;
MPRINT(LSAF_GETJOBPARAMETERS):   data work.job_Parameters (label="Created by LSAF_GETJOBPARAMETERS" KEEP=jobPath jobVersion name label type defaultValue fileVersion includeSubFolders );
MPRINT(LSAF_GETJOBPARAMETERS):   attrib returnCode length=8 message length=$200 logMsgPrefix length=$70 logMsgPrimary length=$70 logMsg length=$300 rowCount length=8 jobPath length=$2048 label="Job Path" jobVersion length=$32 label="Job Version" name 
length=$256 label="Parameter Name" label length=$256 label="Parameter Label" type length=$32 label="Parameter Type" defaultValue length=$2048 label="Parameter Default Value" fileVersion length=$32 label="File Version if File Type" includeSubFolders 
length=8 label="Include Container SubFolders" includesSubFolders length=$5 label="FOR INTERNAL PROCESSING ONLY.  WILL BE DROPPED." ;
MPRINT(LSAF_GETJOBPARAMETERS):   rowCount=0;
MPRINT(LSAF_GETJOBPARAMETERS):   declare javaobj srv("com/sas/lsaf/macro/execution/job/JobService") ;
MPRINT(LSAF_GETJOBPARAMETERS):   declare javaobj results("com/sas/lsaf/macro/execution/job/SasJobParametersResult");
MPRINT(LSAF_GETJOBPARAMETERS):   srv.callStaticVoidMethod("getRepositoryJobParameters", "/general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_gadam_sdtm_key_core_vars.job", "", results) ;
MPRINT(LSAF_GETJOBPARAMETERS):   results.callIntMethod("getReturnCode", returnCode);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getReturnMessage", message);
MPRINT(LSAF_GETJOBPARAMETERS):   logMsgPrefix="NOTE: SAS Life Science Analytics Framework Macro: * ";
MPRINT(LSAF_GETJOBPARAMETERS):   if (returnCode ne 0) then do;
MPRINT(LSAF_GETJOBPARAMETERS):   logMsgPrimary="ERROR: SAS Life Science Analytics Framework Macro:";
MPRINT(LSAF_GETJOBPARAMETERS):   if "" NE "" then logMsg=" Cannot retrieve parameters for job /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_gadam_sdtm_key_core_vars.job, version " ;
MPRINT(LSAF_GETJOBPARAMETERS):   else logMsg=" Cannot retrieve parameters for job /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_gadam_sdtm_key_core_vars.job" ;
MPRINT(LSAF_GETJOBPARAMETERS):   end;
MPRINT(LSAF_GETJOBPARAMETERS):   else do;
MPRINT(LSAF_GETJOBPARAMETERS):   logMsgPrimary=logMsgPrefix;
MPRINT(LSAF_GETJOBPARAMETERS):   logMsg=" Parameters were returned for job /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_gadam_sdtm_key_core_vars.job" ;
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getJobPath", jobPath);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getJobVersion", jobVersion);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callIntMethod("getSize", rowCount);
MPRINT(LSAF_GETJOBPARAMETERS):   do row=0 to rowCount - 1;
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getName", row, name);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getLabel", row, label);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getType", row, type);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getDefaultValue", row, defaultValue);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getFileVersion", row, fileVersion);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getContainerIncludeSubfolders", row, includesSubFolders);
MPRINT(LSAF_GETJOBPARAMETERS):   includeSubFolders=input(includesSubFolders,best.);
MPRINT(LSAF_GETJOBPARAMETERS):   output;
MPRINT(LSAF_GETJOBPARAMETERS):   end;
MPRINT(LSAF_GETJOBPARAMETERS):   end;
MPRINT(LSAF_GETJOBPARAMETERS):   put;
MPRINT(LSAF_GETJOBPARAMETERS):   put logMsgPrimary " " logMsg;
                                                                                                                         The SAS System

MPRINT(LSAF_GETJOBPARAMETERS):   put logMsgPrefix " " "lsaf_getjobparameters";
MPRINT(LSAF_GETJOBPARAMETERS):   if (rowCount=0) then put logMsgPrefix " No parameters were found.";
MPRINT(LSAF_GETJOBPARAMETERS):   else put logMsgPrefix " " rowCount " records written to data set work.job_Parameters";
MPRINT(LSAF_GETJOBPARAMETERS):   put logMsgPrefix " _lsafMsg_= " message ;
MPRINT(LSAF_GETJOBPARAMETERS):   put logMsgPrefix " _lsafRC_= " returnCode ;
MPRINT(LSAF_GETJOBPARAMETERS):   put;
MPRINT(LSAF_GETJOBPARAMETERS):   call symputx("_lsafRC_", returnCode);
MPRINT(LSAF_GETJOBPARAMETERS):   call symputx("_lsafMsg_", message);
MPRINT(LSAF_GETJOBPARAMETERS):   run;


NOTE: SAS Life Science Analytics Framework Macro: *  Parameters were returned for job /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_gadam_sdtm_key_core_vars.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_getjobparameters
NOTE: SAS Life Science Analytics Framework Macro: *  4  records written to data set work.job_Parameters
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: The data set WORK.JOB_PARAMETERS has 4 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(SUBMIT_JOB):  ;
NOTE: The dataset WORK.JOB_PARAMETERS has 4 observations and 8 variables.
MPRINT(SUBMIT_JOB):   ;
MPRINT(SUBMIT_JOB):   *- dataset to specify job parameters (from macro parameters values) -*;
MPRINT(SUBMIT_JOB):   data lsaf_job_params(index=(name));
MPRINT(SUBMIT_JOB):   set work.job_Parameters(rename=(defaultValue = value));
MPRINT(SUBMIT_JOB):   if upcase(name) = "_PARENTJOB_WS_" then do;
MPRINT(SUBMIT_JOB):   if symexist("_SASWS_") and type = "CHARACTER" then value = symget("_SASWS_");
MPRINT(SUBMIT_JOB):   else value = " ";
MPRINT(SUBMIT_JOB):   end;
MPRINT(SUBMIT_JOB):   else if upcase(name) = "_PARENTJOB_WRK_" then do;
MPRINT(SUBMIT_JOB):   value = pathname("WORK", "L");
MPRINT(SUBMIT_JOB):   end;
MPRINT(SUBMIT_JOB):   else if symexist(name) then do;
MPRINT(SUBMIT_JOB):   if symget(name) ^= ' ' then value = symget(name);
MPRINT(SUBMIT_JOB):   end;
MPRINT(SUBMIT_JOB):   new_value = translate(value, ' ', ',;()"''&%');
MPRINT(SUBMIT_JOB):   if new_value ne value then put "NOTE:(SUBMIT_JOB): Special characters may be removed from parameter value:" / @2 "parameter: " name /@2 "old value: " value /@2 "new value: " new_value;
MPRINT(SUBMIT_JOB):   if _n_=1 then put "Not" "ice:(SUBMIT_JOB): Updated Job parameters:";
MPRINT(SUBMIT_JOB):   if type = "FOLDER" then put " - " name @+(-1) "=" value "[" type= @+(-1) ", " includeSubFolders= @+(-1) "]" /;
MPRINT(SUBMIT_JOB):   else if TYPE = "FILE" then put " - " name @+(-1) "=" value "[" type= @+(-1) ", " fileversion= @+(-1) "]" /;
MPRINT(SUBMIT_JOB):   else put " - " name @+(-1) "=" value "[" type= @+(-1) "]" /;
MPRINT(SUBMIT_JOB):   run;

Notice:(SUBMIT_JOB): Updated Job parameters:
 - job_instance=Ngos117Prod_2 [type=CHARACTER]
 - _PARENTJOB_WS_=/lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba [type=CHARACTER]
 - _PARENTJOB_WRK_=/saswork/sas_tmp/SAS_work89DD00193DB6_xar08auv.vsp.sas.com/SAS_work944F00193DB6_xar08auv.vsp.sas.com [type=CHARACTER]
 - USE_SAS_WORKSPACE_MACROS=  [type=CHARACTER]
NOTE: There were 4 observations read from the data set WORK.JOB_PARAMETERS.
NOTE: The data set WORK.LSAF_JOB_PARAMS has 4 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

                                                                                                                         The SAS System

N_PARAMS=4
MPRINT(SUBMIT_JOB):   data lsaf_job_params(index=(name));
MPRINT(SUBMIT_JOB):   set lsaf_job_params;
MPRINT(SUBMIT_JOB):   by name;
MPRINT(SUBMIT_JOB):   if (not first.name) or (not last.name) then do;
MPRINT(SUBMIT_JOB):   if last.name then action = "(kept)   ";
MPRINT(SUBMIT_JOB):   else action = "(dropped)";
MPRINT(SUBMIT_JOB):   drop action;
MPRINT(SUBMIT_JOB):   put "Not" "ice:(SUBMIT_JOB): duplicate parameter " name " = " value @+(3) action;
MPRINT(SUBMIT_JOB):   end;
MPRINT(SUBMIT_JOB):   if last.name;
MPRINT(SUBMIT_JOB):   run;

NOTE: There were 4 observations read from the data set WORK.LSAF_JOB_PARAMS.
NOTE: The data set WORK.LSAF_JOB_PARAMS has 4 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SUBMIT_JOB):   data _null_;
MPRINT(SUBMIT_JOB):   file print;
MPRINT(SUBMIT_JOB):   set lsaf_job_params(where=(prxmatch('/^(FOLDER|FILE)$/', trim(type))) in=a) lsaf_job_params(where=(prxmatch('/^(FOLDER|FILE)$/', trim(type))=0 and value ^= ' ')) end=last;
MPRINT(SUBMIT_JOB):   if _n_=1 then putlog "=== 2023-02-14T23:49:14 - Submit job: /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_gadam_sdtm_key_core_vars.job (with parameters: " @;
MPRINT(SUBMIT_JOB):   _n_a+a;
MPRINT(SUBMIT_JOB):   if _n_-1 = _n_a then do;
MPRINT(SUBMIT_JOB):   putlog / @8 @;
MPRINT(SUBMIT_JOB):   put / @8 @;
MPRINT(SUBMIT_JOB):   end;
MPRINT(SUBMIT_JOB):   if a then putlog / @8 name @+(-1) "=" value ' (' type= includeSubFolders= @+(-1) ')   ' @;
MPRINT(SUBMIT_JOB):   else putlog name @+(-1) "=" value "  " @ ;
MPRINT(SUBMIT_JOB):   if last then putlog @+8 ") ===";
MPRINT(SUBMIT_JOB):   if _n_=1 then put "=== 2023-02-14T23:49:14 - Submit job: /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_gadam_sdtm_key_core_vars.job (with parameters: " @;
MPRINT(SUBMIT_JOB):   if a then put / @8 name @+(-1) "=" value ' (' type= includeSubFolders= @+(-1) ')   ' @;
MPRINT(SUBMIT_JOB):   else put name @+(-1) "=" value "  " @ ;
MPRINT(SUBMIT_JOB):   if last then put @+8 ") ===";
MPRINT(SUBMIT_JOB):   run;

=== 2023-02-14T23:49:14 - Submit job: /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_gadam_sdtm_key_core_vars.job (with parameters: 
       _PARENTJOB_WRK_=/saswork/sas_tmp/SAS_work89DD00193DB6_xar08auv.vsp.sas.com/SAS_work944F00193DB6_xar08auv.vsp.sas.com   _PARENTJOB_WS_=/lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba   
job_instance=Ngos117Prod_2           ) ===
NOTE: 3 lines were written to file PRINT.
NOTE: There were 0 observations read from the data set WORK.LSAF_JOB_PARAMS.
      WHERE PRXMATCH('/^(FOLDER|FILE)$/', TRIM(type));
NOTE: There were 3 observations read from the data set WORK.LSAF_JOB_PARAMS.
      WHERE (PRXMATCH('/^(FOLDER|FILE)$/', TRIM(type))=0) and (value not = ' ');
NOTE: The DATA step printed page 3.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(LSAF_SUBMITJOB):  ;
NOTE: lsaf_submitjob: Validating dataset lsaf_job_params
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   options nonotes;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   proc datasets library=work nolist;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   delete __SASMacro_submitJobtemp__;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   quit;
                                                                                                                         The SAS System

MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   run;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   options nonotes;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   data _null_;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   length message $45 libName $8 dsName $300;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   providedDatasetName=kstrip("lsaf_job_params");
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   dsName="INVALID";
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   dsNameIsValid=0;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   dotCount=countc(providedDatasetName,".");
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   dotPosition=kindexc(providedDatasetName,".");
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   *put dotPosition=;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   if (dotPosition=1 or dotPosition=length(providedDatasetName)) then do;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   message=" Missing either LIBNAME or data set.";
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   GOTO SETVARS;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   end;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   select (dotCount);
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   when (0) dsName=providedDatasetName;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   when (1) do;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   if (dotPosition le 9) then do;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   libName = (ksubstr(providedDatasetName, 1, dotPosition-1));
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   *put libName=;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   dsName = (ksubstr(providedDatasetName, dotPosition+1));
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   end;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   else do;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   message="Libname longer than 8 characters.";
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   GOTO SETVARS;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   end;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   end;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   otherwise do;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   message="Invalid data set name structure.";
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   GOTO SETVARS;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   end;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   end;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   firstchar=ksubstr(kleft(dsName), 1, 1);
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   if (anydigit(firstchar)) then do;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   message="Data set name must start with a character.";
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   GOTO SETVARS;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   end;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   if (length(dsName) > 32) then do;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   message="Data set name longer than 32 characters.";
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   GOTO SETVARS;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   end;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   dsNameIsValid=1;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   SETVARS: call symput("_lsafvaliddsn_", strip(put(dsNameIsValid, best.)));
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   call symput("dsnMsg", message);
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   call symput("specifiedLib", strip(libName));
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   run;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   options NONOTES;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   * CHECK EXISTS: Also getting errors for data set name.;
MPRINT(LSAF_VALIDATE_SASDATASET):  ;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):  ;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   proc sort data=lsaf_job_params out=__SASMacro_submitJobtemp__;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   by name;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   run;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   data _null_;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   set __SASMacro_submitJobtemp__;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   by name;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   if (first.name AND NOT(last.name)) then do;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   call symput("_lsafMsg_", "Input data set has duplicate values for parameter name " || name || ".");
                                                                                                                         The SAS System

MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   STOP;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   end;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   call symput("_lsafRC_", "0");
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   run;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   option notes;
MPRINT(LSAF_SUBMITJOB):  ;
MPRINT(LSAF_SUBMITJOB):   option notes;
MPRINT(LSAF_SUBMITJOB):   data _null_;
MPRINT(LSAF_SUBMITJOB):   attrib returnCode length=8 message length=$200 jobSubmissionId length=$525 logMsgPrefix length=$70 logMsgPrimary length=$70 logMsg length=$300 ;
MPRINT(LSAF_SUBMITJOB):   set lsaf_job_params end=eof;
MPRINT(LSAF_SUBMITJOB):   if (_n_ = 1) then do;
MPRINT(LSAF_SUBMITJOB):   declare javaobj params("com/sas/lsaf/macro/execution/job/SasParameterValues");
MPRINT(LSAF_SUBMITJOB):   declare javaobj srv("com/sas/lsaf/macro/execution/jobsubmission/JobSubmissionService");
MPRINT(LSAF_SUBMITJOB):   declare javaobj results("com/sas/lsaf/macro/common/result/Result");
MPRINT(LSAF_SUBMITJOB):   end;
MPRINT(LSAF_SUBMITJOB):   params.callVoidMethod("addValue", kstrip(name), kstrip(value), kstrip(type), kstrip(fileVersion), includeSubFolders);
MPRINT(LSAF_SUBMITJOB):   if (eof);
MPRINT(LSAF_SUBMITJOB):   declare javaobj job("com/sas/lsaf/macro/execution/jobsubmission/SasSubmittableJob", "/general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_gadam_sdtm_key_core_vars.job", "", params);
MPRINT(LSAF_SUBMITJOB):   srv.callStaticStringMethod("submitRepositoryJob", job, results, jobSubmissionId);
MPRINT(LSAF_SUBMITJOB):   results.callIntMethod("getReturnCode", returnCode);
MPRINT(LSAF_SUBMITJOB):   results.callStringMethod("getReturnMessage", message);
MPRINT(LSAF_SUBMITJOB):   logMsgPrefix="NOTE: SAS Life Science Analytics Framework Macro: * ";
MPRINT(LSAF_SUBMITJOB):   if (returnCode ne 0) then do;
MPRINT(LSAF_SUBMITJOB):   logMsgPrimary="ERROR: SAS Life Science Analytics Framework Macro:";
MPRINT(LSAF_SUBMITJOB):   logMsg=" Cannot submit job /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_gadam_sdtm_key_core_vars.job";
MPRINT(LSAF_SUBMITJOB):   end;
MPRINT(LSAF_SUBMITJOB):   else do;
MPRINT(LSAF_SUBMITJOB):   logMsgPrimary=logMsgPrefix;
MPRINT(LSAF_SUBMITJOB):   logMsg=" Submitted job /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_gadam_sdtm_key_core_vars.job";
MPRINT(LSAF_SUBMITJOB):   end;
MPRINT(LSAF_SUBMITJOB):   put;
MPRINT(LSAF_SUBMITJOB):   put logMsgPrimary " " logMsg;
MPRINT(LSAF_SUBMITJOB):   put logMsgPrefix " " "lsaf_submitjob";
MPRINT(LSAF_SUBMITJOB):   put logMsgPrefix " _lsafMsg_= " message ;
MPRINT(LSAF_SUBMITJOB):   put logMsgPrefix " _lsafRC_= " returnCode ;
MPRINT(LSAF_SUBMITJOB):   if "lsaf_job_params" = "" then put logMsgPrefix "No job parameters were supplied.";
MPRINT(LSAF_SUBMITJOB):   else put logMsgPrefix "sas_dsname = lsaf_job_params";
MPRINT(LSAF_SUBMITJOB):   put logMsgPrefix "_lsafJobSubmissionId_= " jobSubmissionId;
MPRINT(LSAF_SUBMITJOB):   put;
MPRINT(LSAF_SUBMITJOB):   call symputx("_lsafRC_", returnCode);
MPRINT(LSAF_SUBMITJOB):   call symputx("_lsafMsg_", message);
MPRINT(LSAF_SUBMITJOB):   call symputx("_lsafJobSubmissionId_", strip(jobSubmissionId));
MPRINT(LSAF_SUBMITJOB):   run;


NOTE: SAS Life Science Analytics Framework Macro: *  Submitted job /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_gadam_sdtm_key_core_vars.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_submitjob
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: SAS Life Science Analytics Framework Macro: * sas_dsname = lsaf_job_params
NOTE: SAS Life Science Analytics Framework Macro: * _lsafJobSubmissionId_= 4b878872-2fe9-4ec3-b9f8-02e2e7b895ce
NOTE: There were 4 observations read from the data set WORK.LSAF_JOB_PARAMS.
NOTE: DATA statement used (Total process time):
      real time           1.33 seconds
      cpu time            0.00 seconds
      

MPRINT(LSAF_SUBMITJOB):   options NONOTES;
                                                                                                                         The SAS System

MPRINT(SUBMIT_JOB):  ;
MPRINT(SUBMIT_JOB):   *- Job submission succeeded -*;
MPRINT(SUBMIT_JOB):   option nomprint nonotes
Calling %lsaf_getitemid(lsaf_path=/general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_gadam_sdtm_key_core_vars.job) ...
_LSAFMSG_=Success.  _LSAFRC_=0  _LSAFITEMID_=638175be-2ea4-4ab9-a552-5ab0175653e0
Calling %step_lsaf_getjobsubmissioninfos(job_subm_id=4b878872-2fe9-4ec3-b9f8-02e2e7b895ce) ...
Notice: SYSDATASTEPPHASE= IN_DATA_STEP=N
Ignoring record: submissionId=30678109-1661-4a87-858f-1bc1b0d581fa jobPath=/general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_lsaf_get_last_sdtm.job jobVersion=0.1 jobId=abcfa448-6829-4513-8bef-3d8418207d45
Ignoring record: submissionId=c4fb4991-9137-4374-8d55-32ed9002f3d8 jobPath=/general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_gadam_ongoing_studies.job jobVersion=0.1 jobId=c762f385-9376-49c8-8cec-d19326e7e18e
Ignoring record: submissionId=e10042a4-6280-4c02-92e6-fbbdbb000293 jobPath=/general/biostat/jobs/gadam_rebuild_adam/prod/jobs/job_gadam_rebuild_adam.job jobVersion=  jobId=02b06e4d-7777-4a59-b2f9-2fc165603216
Ignoring record: submissionId=f00d2b52-d9f1-4ef1-8922-181d934626e0 jobPath=/general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_gadam_ongoing_studies.job jobVersion=0.1 jobId=c762f385-9376-49c8-8cec-d19326e7e18e
Ignoring record: submissionId=7e820358-2d58-4d70-904b-c779f6bea07a jobPath=/clinical/argx-113/cidp/argx-113-1802/biostat/staging/generic_adam/jobs/job_gadam_rebuild_adam.job jobVersion=  jobId=5ddfea34-d035-4d8f-a8ab-3bcb9e5707e3
Ignoring record: submissionId=950a2705-2d15-4db0-bfba-dd7c1cdeb43d jobPath=/clinical/argx-113/cidp/argx-113-1802/biostat/staging/generic_adam/jobs/job_tae.job jobVersion=  jobId=b83418c6-5bc8-45db-8950-5a0ece44040e
Notice: _LSAFJOBSUBMISSIONID_=4b878872-2fe9-4ec3-b9f8-02e2e7b895ce SESSIONID=d9df0b5b-3bee-4fbd-9daf-9e2affb9497d JOB=/general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_gadam_sdtm_key_core_vars.job JOBID=638175be-2ea4-4ab9-a552-5ab0175653e0
(SUBMIT_JOB): 2023-02-14T23:49:16 - Submitted REPOSITORY Job /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_gadam_sdtm_key_core_vars.job          with Submission ID: 4b878872-2fe9-4ec3-b9f8-02e2e7b895ce, Status: STARTED
(SUBMIT_JOB): 23:49:15.71 Elapsed: 00:00:02.08 Job Submission Status: STARTED
(SUBMIT_JOB): 23:49:18.25 Elapsed: 00:00:04.61 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 23:49:20.79 Elapsed: 00:00:07.15 Job Submission Status: COMPLETED_SUCCESSFUL
(SUBMIT_JOB): 2023-02-14T23:49:23 - Submitted REPOSITORY job: /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_gadam_sdtm_key_core_vars.job has completed with status: COMPLETED_SUCCESSFUL
MPRINT(SUBMIT_JOB):  ;
job_gadam_sdtm_key_core_vars.job: get job status: 0: Success.:       Elapsed: 00:00:09.65       REPOSITORY Job /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_gadam_sdtm_key_core_vars.job with Submission ID: 4b878872-2fe9-4ec3-b9f8-02e2e7b895ce, 
Status: COMPLETED_SUCCESSFUL
613        
614        %if %qsysfunc(upcase(%superq(refresh_sdtm)), $1.) = Y
615         or %qsysfunc(upcase(%superq(create_folder)), $1.) = Y
616         or %qsysfunc(upcase(%superq(create_gadam_folder)), $1.) = Y
617         or %qsysfunc(upcase(%superq(setup_gadam_folder)), $1.) = Y
618         or %qsysfunc(upcase(%superq(rebuild_gadam_datasets)), $1.) = Y
619         or %qsysfunc(upcase(%superq(check_and_load_gadam)), $1.) = Y
620        %then %do;
621        
622           %macro cond;
623              %if %qsysfunc(upcase(%superq(refresh_sdtm)), $1.) = Y %then %do;
624                 %*- run job to extract extra sdtm_sources from zip files as specified in /general/biostat/jobs/gadam_ongoing_studies/dev/input/sdtm_extra_sources.xlsx -*;
625                 %submit_job(/general/biostat/jobs/gadam_ongoing_studies/dev/jobs/job_unzip_sdtm_sources.job, parent_job_instance = &job_instance);
626              %end;
627           %mend cond;
628           %cond;
NUM_JOBS_SPAWNED=3
MACROAPIVER=2.6
MPRINT(SUBMIT_JOB):   proc sql noprint;
MPRINT(SUBMIT_JOB):   drop table work.job_Parameters;
NOTE: Table WORK.JOB_PARAMETERS has been dropped.
MPRINT(SUBMIT_JOB):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

DEBUG:(GEN_JOB_ENV): PRX=15
DEBUG:(GEN_JOB_ENV): prxmatch(15, /general/biostat/jobs/gadam_ongoing_studies/dev/jobs/job_unzip_sdtm_sources.job) = 1
DEBUG:(GEN_JOB_ENV): (0) REFPATH=
DEBUG:(GEN_JOB_ENV): (0) REPEVPATH=/lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/biostat/jobs/gadam_ongoing_studies/prod/
DEBUG:(GEN_JOB_ENV): (0) RELREPEVPATH=/general/biostat/jobs/gadam_ongoing_studies/prod/
DEBUG:(GEN_JOB_ENV): (0) _SASFILEPATH_=/general/biostat/jobs/gadam_ongoing_studies/prod/programs/gadam_ongoing_studies.sas
DEBUG:(GEN_JOB_ENV): (0) PROGPATH=/general/biostat/jobs/gadam_ongoing_studies/prod/programs/
DEBUG:(GEN_JOB_ENV): (0) PATH=/general/biostat/jobs/gadam_ongoing_studies/dev/jobs/job_unzip_sdtm_sources.job
                                                                                                                         The SAS System

Setting refpath = &repevpath
DEBUG:(GEN_JOB_ENV): (1) REFPATH=/lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/biostat/jobs/gadam_ongoing_studies/prod/
DEBUG:(GEN_JOB_ENV): (2) REFENV=prod
DEBUG:(GEN_JOB_ENV): (3) REFENV=prod
DEBUG:(F_LSAF_EXISTS) - 2023-02-14T23:49:23 - Iteration: 1: slept = 0, exists = 1
DEBUG:(F_LSAF_EXISTS) - 2023-02-14T23:49:23 - Iteration: 1: slept = 0, exists = 1
DEBUG:(F_LSAF_EXISTS) - 2023-02-14T23:49:23 - Iteration: 1: slept = 0, exists = 1
MPRINT(LSAF_EXISTS):  ;
MPRINT(LSAF_EXISTS):   data _null_;
MPRINT(LSAF_EXISTS):   attrib returnCode length=8;
MPRINT(LSAF_EXISTS):   attrib message length=$200;
MPRINT(LSAF_EXISTS):   attrib logMsgPrefix length=$70;
MPRINT(LSAF_EXISTS):   attrib logMsg length=$300;
MPRINT(LSAF_EXISTS):   attrib exists length=3;
MPRINT(LSAF_EXISTS):   attrib logMsgPrimary length=$70;
MPRINT(LSAF_EXISTS):   declare javaobj srv("com/sas/lsaf/macro/content/repository/RepositoryService");
MPRINT(LSAF_EXISTS):   declare javaobj results("com/sas/lsaf/macro/common/result/Result");
MPRINT(LSAF_EXISTS):   srv.callStaticBooleanMethod("exists", "/general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_unzip_sdtm_sources.job", results, exists);
MPRINT(LSAF_EXISTS):   results.callIntMethod("getReturnCode", returnCode);
MPRINT(LSAF_EXISTS):   results.callStringMethod("getReturnMessage", message);
MPRINT(LSAF_EXISTS):   logMsgPrefix="NOTE: SAS Life Science Analytics Framework Macro: * ";
MPRINT(LSAF_EXISTS):   if (returnCode ne 0) then do;
MPRINT(LSAF_EXISTS):   logMsgPrimary="ERROR: SAS Life Science Analytics Framework Macro:";
MPRINT(LSAF_EXISTS):   logMsg=" Cannot determine if the item exists: /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_unzip_sdtm_sources.job" ;
MPRINT(LSAF_EXISTS):   exists=-1;
MPRINT(LSAF_EXISTS):   end;
MPRINT(LSAF_EXISTS):   else do;
MPRINT(LSAF_EXISTS):   logMsgPrimary=logMsgPrefix;
MPRINT(LSAF_EXISTS):   if (exists) then do;
MPRINT(LSAF_EXISTS):   logMsg=" The item exists: /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_unzip_sdtm_sources.job" ;
MPRINT(LSAF_EXISTS):   end;
MPRINT(LSAF_EXISTS):   else do;
MPRINT(LSAF_EXISTS):   logMsg=" The item does not exist: /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_unzip_sdtm_sources.job" ;
MPRINT(LSAF_EXISTS):   end;
MPRINT(LSAF_EXISTS):   end;
MPRINT(LSAF_EXISTS):   put;
MPRINT(LSAF_EXISTS):   put logMsgPrimary " " logMsg;
MPRINT(LSAF_EXISTS):   put logMsgPrefix " " "lsaf_exists";
MPRINT(LSAF_EXISTS):   put logMsgPrefix " _lsafMsg_= " message;
MPRINT(LSAF_EXISTS):   put logMsgPrefix " _lsafRC_= " returnCode;
MPRINT(LSAF_EXISTS):   put logMsgPrefix " _lsafExists_= " exists;
MPRINT(LSAF_EXISTS):   put;
MPRINT(LSAF_EXISTS):   call symputx("_lsafRC_", returnCode);
MPRINT(LSAF_EXISTS):   call symputx("_lsafMsg_", message);
MPRINT(LSAF_EXISTS):   call symputx("_lsafExists_", exists) ;
MPRINT(LSAF_EXISTS):   run;


NOTE: SAS Life Science Analytics Framework Macro: *  The item exists: /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_unzip_sdtm_sources.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_exists
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafExists_= 1
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

                                                                                                                         The SAS System

MPRINT(SUBMIT_JOB):  ;
Notice:(SUBMIT_JOB): LSAF Job Path exists: /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_unzip_sdtm_sources.job.
MPRINT(SUBMIT_JOB):   proc format;
MPRINT(SUBMIT_JOB):   value $jobabbr "job_gadam_ongoing_studies.job"= "gos" "job_studies_status.job"= "ss" "job_gadam_sdtm_key_core_vars.job"= "gskcv" "job_unzip_sdtm_sources.job"= "uss" "job_zip_extract_files.job"= "zef" "job_lsaf_get_last_sdtm.job"= 
"lgls" "setup_reporting_event_folder.job"= "sref" "job_gadam_refresh_sdtm_last.job"= "grsl" "job_gadam_update_refresh_info.job"= "guri" "convert_definetosas.job"= "cdts" "job_gadam_studysetup.job"= "gss" "job_gadam_rebuild_adam.job"= "gra" "job_adAAA" - 
"job_adzzz"= "adx" "job_qcstudyadams.job"= "qcsa" "job_qc_gadam_vs_study.job"= "qcgvs" "job_qc_gadam_vs_study-overview.job"= "qcgvso" "job_check_and_load.job"= "cal" "job_tAAA" - "job_tzzz"= "txx" "job_gadam_qc_overviews.job"= "gqco" 
"job_make_sdtm_pool_jobs.job"= "mspj" "job_lsaf_pool_last_sdtm.job"= "lpls" "sdtm_pool-AAA" - "sdtm_pool-zzz"= "pci" "job_gadam_refresh_sdtm_overview.job"= "grso" "getdata.job"= "gd" OTHER = "***" ;
NOTE: Format $JOBABBR is already on the library WORK.FORMATS.
NOTE: Format $JOBABBR has been output.
MPRINT(SUBMIT_JOB):   run;

NOTE: PROCEDURE FORMAT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SUBMIT_JOB):   quit;
job_instance=>Ngos117Prod_3<
MPRINT(LSAF_GETJOBPARAMETERS):  ;
MPRINT(LSAF_GETJOBPARAMETERS):   data work.job_Parameters (label="Created by LSAF_GETJOBPARAMETERS" KEEP=jobPath jobVersion name label type defaultValue fileVersion includeSubFolders );
MPRINT(LSAF_GETJOBPARAMETERS):   attrib returnCode length=8 message length=$200 logMsgPrefix length=$70 logMsgPrimary length=$70 logMsg length=$300 rowCount length=8 jobPath length=$2048 label="Job Path" jobVersion length=$32 label="Job Version" name 
length=$256 label="Parameter Name" label length=$256 label="Parameter Label" type length=$32 label="Parameter Type" defaultValue length=$2048 label="Parameter Default Value" fileVersion length=$32 label="File Version if File Type" includeSubFolders 
length=8 label="Include Container SubFolders" includesSubFolders length=$5 label="FOR INTERNAL PROCESSING ONLY.  WILL BE DROPPED." ;
MPRINT(LSAF_GETJOBPARAMETERS):   rowCount=0;
MPRINT(LSAF_GETJOBPARAMETERS):   declare javaobj srv("com/sas/lsaf/macro/execution/job/JobService") ;
MPRINT(LSAF_GETJOBPARAMETERS):   declare javaobj results("com/sas/lsaf/macro/execution/job/SasJobParametersResult");
MPRINT(LSAF_GETJOBPARAMETERS):   srv.callStaticVoidMethod("getRepositoryJobParameters", "/general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_unzip_sdtm_sources.job", "", results) ;
MPRINT(LSAF_GETJOBPARAMETERS):   results.callIntMethod("getReturnCode", returnCode);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getReturnMessage", message);
MPRINT(LSAF_GETJOBPARAMETERS):   logMsgPrefix="NOTE: SAS Life Science Analytics Framework Macro: * ";
MPRINT(LSAF_GETJOBPARAMETERS):   if (returnCode ne 0) then do;
MPRINT(LSAF_GETJOBPARAMETERS):   logMsgPrimary="ERROR: SAS Life Science Analytics Framework Macro:";
MPRINT(LSAF_GETJOBPARAMETERS):   if "" NE "" then logMsg=" Cannot retrieve parameters for job /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_unzip_sdtm_sources.job, version " ;
MPRINT(LSAF_GETJOBPARAMETERS):   else logMsg=" Cannot retrieve parameters for job /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_unzip_sdtm_sources.job" ;
MPRINT(LSAF_GETJOBPARAMETERS):   end;
MPRINT(LSAF_GETJOBPARAMETERS):   else do;
MPRINT(LSAF_GETJOBPARAMETERS):   logMsgPrimary=logMsgPrefix;
MPRINT(LSAF_GETJOBPARAMETERS):   logMsg=" Parameters were returned for job /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_unzip_sdtm_sources.job" ;
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getJobPath", jobPath);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getJobVersion", jobVersion);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callIntMethod("getSize", rowCount);
MPRINT(LSAF_GETJOBPARAMETERS):   do row=0 to rowCount - 1;
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getName", row, name);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getLabel", row, label);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getType", row, type);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getDefaultValue", row, defaultValue);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getFileVersion", row, fileVersion);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getContainerIncludeSubfolders", row, includesSubFolders);
MPRINT(LSAF_GETJOBPARAMETERS):   includeSubFolders=input(includesSubFolders,best.);
MPRINT(LSAF_GETJOBPARAMETERS):   output;
MPRINT(LSAF_GETJOBPARAMETERS):   end;
MPRINT(LSAF_GETJOBPARAMETERS):   end;
MPRINT(LSAF_GETJOBPARAMETERS):   put;
MPRINT(LSAF_GETJOBPARAMETERS):   put logMsgPrimary " " logMsg;
MPRINT(LSAF_GETJOBPARAMETERS):   put logMsgPrefix " " "lsaf_getjobparameters";
MPRINT(LSAF_GETJOBPARAMETERS):   if (rowCount=0) then put logMsgPrefix " No parameters were found.";
MPRINT(LSAF_GETJOBPARAMETERS):   else put logMsgPrefix " " rowCount " records written to data set work.job_Parameters";
MPRINT(LSAF_GETJOBPARAMETERS):   put logMsgPrefix " _lsafMsg_= " message ;
                                                                                                                         The SAS System

MPRINT(LSAF_GETJOBPARAMETERS):   put logMsgPrefix " _lsafRC_= " returnCode ;
MPRINT(LSAF_GETJOBPARAMETERS):   put;
MPRINT(LSAF_GETJOBPARAMETERS):   call symputx("_lsafRC_", returnCode);
MPRINT(LSAF_GETJOBPARAMETERS):   call symputx("_lsafMsg_", message);
MPRINT(LSAF_GETJOBPARAMETERS):   run;


NOTE: SAS Life Science Analytics Framework Macro: *  Parameters were returned for job /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_unzip_sdtm_sources.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_getjobparameters
NOTE: SAS Life Science Analytics Framework Macro: *  4  records written to data set work.job_Parameters
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: The data set WORK.JOB_PARAMETERS has 4 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      

MPRINT(SUBMIT_JOB):  ;
NOTE: The dataset WORK.JOB_PARAMETERS has 4 observations and 8 variables.
MPRINT(SUBMIT_JOB):   ;
MPRINT(SUBMIT_JOB):   *- dataset to specify job parameters (from macro parameters values) -*;
MPRINT(SUBMIT_JOB):   data lsaf_job_params(index=(name));
MPRINT(SUBMIT_JOB):   set work.job_Parameters(rename=(defaultValue = value));
MPRINT(SUBMIT_JOB):   if upcase(name) = "_PARENTJOB_WS_" then do;
MPRINT(SUBMIT_JOB):   if symexist("_SASWS_") and type = "CHARACTER" then value = symget("_SASWS_");
MPRINT(SUBMIT_JOB):   else value = " ";
MPRINT(SUBMIT_JOB):   end;
MPRINT(SUBMIT_JOB):   else if upcase(name) = "_PARENTJOB_WRK_" then do;
MPRINT(SUBMIT_JOB):   value = pathname("WORK", "L");
MPRINT(SUBMIT_JOB):   end;
MPRINT(SUBMIT_JOB):   else if symexist(name) then do;
MPRINT(SUBMIT_JOB):   if symget(name) ^= ' ' then value = symget(name);
MPRINT(SUBMIT_JOB):   end;
MPRINT(SUBMIT_JOB):   new_value = translate(value, ' ', ',;()"''&%');
MPRINT(SUBMIT_JOB):   if new_value ne value then put "NOTE:(SUBMIT_JOB): Special characters may be removed from parameter value:" / @2 "parameter: " name /@2 "old value: " value /@2 "new value: " new_value;
MPRINT(SUBMIT_JOB):   if _n_=1 then put "Not" "ice:(SUBMIT_JOB): Updated Job parameters:";
MPRINT(SUBMIT_JOB):   if type = "FOLDER" then put " - " name @+(-1) "=" value "[" type= @+(-1) ", " includeSubFolders= @+(-1) "]" /;
MPRINT(SUBMIT_JOB):   else if TYPE = "FILE" then put " - " name @+(-1) "=" value "[" type= @+(-1) ", " fileversion= @+(-1) "]" /;
MPRINT(SUBMIT_JOB):   else put " - " name @+(-1) "=" value "[" type= @+(-1) "]" /;
MPRINT(SUBMIT_JOB):   run;

Notice:(SUBMIT_JOB): Updated Job parameters:
 - job_instance=Ngos117Prod_3 [type=CHARACTER]
 - _PARENTJOB_WS_=/lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba [type=CHARACTER]
 - _PARENTJOB_WRK_=/saswork/sas_tmp/SAS_work89DD00193DB6_xar08auv.vsp.sas.com/SAS_work944F00193DB6_xar08auv.vsp.sas.com [type=CHARACTER]
 - USE_SAS_WORKSPACE_MACROS=  [type=CHARACTER]
NOTE: There were 4 observations read from the data set WORK.JOB_PARAMETERS.
NOTE: The data set WORK.LSAF_JOB_PARAMS has 4 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

N_PARAMS=4
MPRINT(SUBMIT_JOB):   data lsaf_job_params(index=(name));
MPRINT(SUBMIT_JOB):   set lsaf_job_params;
MPRINT(SUBMIT_JOB):   by name;
                                                                                                                         The SAS System

MPRINT(SUBMIT_JOB):   if (not first.name) or (not last.name) then do;
MPRINT(SUBMIT_JOB):   if last.name then action = "(kept)   ";
MPRINT(SUBMIT_JOB):   else action = "(dropped)";
MPRINT(SUBMIT_JOB):   drop action;
MPRINT(SUBMIT_JOB):   put "Not" "ice:(SUBMIT_JOB): duplicate parameter " name " = " value @+(3) action;
MPRINT(SUBMIT_JOB):   end;
MPRINT(SUBMIT_JOB):   if last.name;
MPRINT(SUBMIT_JOB):   run;

NOTE: There were 4 observations read from the data set WORK.LSAF_JOB_PARAMS.
NOTE: The data set WORK.LSAF_JOB_PARAMS has 4 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(SUBMIT_JOB):   data _null_;
MPRINT(SUBMIT_JOB):   file print;
MPRINT(SUBMIT_JOB):   set lsaf_job_params(where=(prxmatch('/^(FOLDER|FILE)$/', trim(type))) in=a) lsaf_job_params(where=(prxmatch('/^(FOLDER|FILE)$/', trim(type))=0 and value ^= ' ')) end=last;
MPRINT(SUBMIT_JOB):   if _n_=1 then putlog "=== 2023-02-14T23:49:24 - Submit job: /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_unzip_sdtm_sources.job (with parameters: " @;
MPRINT(SUBMIT_JOB):   _n_a+a;
MPRINT(SUBMIT_JOB):   if _n_-1 = _n_a then do;
MPRINT(SUBMIT_JOB):   putlog / @8 @;
MPRINT(SUBMIT_JOB):   put / @8 @;
MPRINT(SUBMIT_JOB):   end;
MPRINT(SUBMIT_JOB):   if a then putlog / @8 name @+(-1) "=" value ' (' type= includeSubFolders= @+(-1) ')   ' @;
MPRINT(SUBMIT_JOB):   else putlog name @+(-1) "=" value "  " @ ;
MPRINT(SUBMIT_JOB):   if last then putlog @+8 ") ===";
MPRINT(SUBMIT_JOB):   if _n_=1 then put "=== 2023-02-14T23:49:24 - Submit job: /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_unzip_sdtm_sources.job (with parameters: " @;
MPRINT(SUBMIT_JOB):   if a then put / @8 name @+(-1) "=" value ' (' type= includeSubFolders= @+(-1) ')   ' @;
MPRINT(SUBMIT_JOB):   else put name @+(-1) "=" value "  " @ ;
MPRINT(SUBMIT_JOB):   if last then put @+8 ") ===";
MPRINT(SUBMIT_JOB):   run;

=== 2023-02-14T23:49:24 - Submit job: /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_unzip_sdtm_sources.job (with parameters: 
       _PARENTJOB_WRK_=/saswork/sas_tmp/SAS_work89DD00193DB6_xar08auv.vsp.sas.com/SAS_work944F00193DB6_xar08auv.vsp.sas.com   _PARENTJOB_WS_=/lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba   
job_instance=Ngos117Prod_3           ) ===
NOTE: 3 lines were written to file PRINT.
NOTE: There were 0 observations read from the data set WORK.LSAF_JOB_PARAMS.
      WHERE PRXMATCH('/^(FOLDER|FILE)$/', TRIM(type));
NOTE: There were 3 observations read from the data set WORK.LSAF_JOB_PARAMS.
      WHERE (PRXMATCH('/^(FOLDER|FILE)$/', TRIM(type))=0) and (value not = ' ');
NOTE: The DATA step printed page 5.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(LSAF_SUBMITJOB):  ;
NOTE: lsaf_submitjob: Validating dataset lsaf_job_params
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   options nonotes;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   proc datasets library=work nolist;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   delete __SASMacro_submitJobtemp__;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   quit;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   run;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   options nonotes;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   data _null_;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   length message $45 libName $8 dsName $300;
                                                                                                                         The SAS System

MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   providedDatasetName=kstrip("lsaf_job_params");
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   dsName="INVALID";
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   dsNameIsValid=0;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   dotCount=countc(providedDatasetName,".");
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   dotPosition=kindexc(providedDatasetName,".");
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   *put dotPosition=;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   if (dotPosition=1 or dotPosition=length(providedDatasetName)) then do;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   message=" Missing either LIBNAME or data set.";
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   GOTO SETVARS;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   end;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   select (dotCount);
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   when (0) dsName=providedDatasetName;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   when (1) do;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   if (dotPosition le 9) then do;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   libName = (ksubstr(providedDatasetName, 1, dotPosition-1));
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   *put libName=;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   dsName = (ksubstr(providedDatasetName, dotPosition+1));
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   end;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   else do;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   message="Libname longer than 8 characters.";
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   GOTO SETVARS;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   end;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   end;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   otherwise do;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   message="Invalid data set name structure.";
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   GOTO SETVARS;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   end;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   end;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   firstchar=ksubstr(kleft(dsName), 1, 1);
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   if (anydigit(firstchar)) then do;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   message="Data set name must start with a character.";
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   GOTO SETVARS;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   end;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   if (length(dsName) > 32) then do;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   message="Data set name longer than 32 characters.";
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   GOTO SETVARS;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   end;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   dsNameIsValid=1;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   SETVARS: call symput("_lsafvaliddsn_", strip(put(dsNameIsValid, best.)));
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   call symput("dsnMsg", message);
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   call symput("specifiedLib", strip(libName));
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   run;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   options NONOTES;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   * CHECK EXISTS: Also getting errors for data set name.;
MPRINT(LSAF_VALIDATE_SASDATASET):  ;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):  ;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   proc sort data=lsaf_job_params out=__SASMacro_submitJobtemp__;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   by name;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   run;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   data _null_;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   set __SASMacro_submitJobtemp__;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   by name;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   if (first.name AND NOT(last.name)) then do;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   call symput("_lsafMsg_", "Input data set has duplicate values for parameter name " || name || ".");
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   STOP;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   end;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   call symput("_lsafRC_", "0");
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   run;
                                                                                                                         The SAS System

MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   option notes;
MPRINT(LSAF_SUBMITJOB):  ;
MPRINT(LSAF_SUBMITJOB):   option notes;
MPRINT(LSAF_SUBMITJOB):   data _null_;
MPRINT(LSAF_SUBMITJOB):   attrib returnCode length=8 message length=$200 jobSubmissionId length=$525 logMsgPrefix length=$70 logMsgPrimary length=$70 logMsg length=$300 ;
MPRINT(LSAF_SUBMITJOB):   set lsaf_job_params end=eof;
MPRINT(LSAF_SUBMITJOB):   if (_n_ = 1) then do;
MPRINT(LSAF_SUBMITJOB):   declare javaobj params("com/sas/lsaf/macro/execution/job/SasParameterValues");
MPRINT(LSAF_SUBMITJOB):   declare javaobj srv("com/sas/lsaf/macro/execution/jobsubmission/JobSubmissionService");
MPRINT(LSAF_SUBMITJOB):   declare javaobj results("com/sas/lsaf/macro/common/result/Result");
MPRINT(LSAF_SUBMITJOB):   end;
MPRINT(LSAF_SUBMITJOB):   params.callVoidMethod("addValue", kstrip(name), kstrip(value), kstrip(type), kstrip(fileVersion), includeSubFolders);
MPRINT(LSAF_SUBMITJOB):   if (eof);
MPRINT(LSAF_SUBMITJOB):   declare javaobj job("com/sas/lsaf/macro/execution/jobsubmission/SasSubmittableJob", "/general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_unzip_sdtm_sources.job", "", params);
MPRINT(LSAF_SUBMITJOB):   srv.callStaticStringMethod("submitRepositoryJob", job, results, jobSubmissionId);
MPRINT(LSAF_SUBMITJOB):   results.callIntMethod("getReturnCode", returnCode);
MPRINT(LSAF_SUBMITJOB):   results.callStringMethod("getReturnMessage", message);
MPRINT(LSAF_SUBMITJOB):   logMsgPrefix="NOTE: SAS Life Science Analytics Framework Macro: * ";
MPRINT(LSAF_SUBMITJOB):   if (returnCode ne 0) then do;
MPRINT(LSAF_SUBMITJOB):   logMsgPrimary="ERROR: SAS Life Science Analytics Framework Macro:";
MPRINT(LSAF_SUBMITJOB):   logMsg=" Cannot submit job /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_unzip_sdtm_sources.job";
MPRINT(LSAF_SUBMITJOB):   end;
MPRINT(LSAF_SUBMITJOB):   else do;
MPRINT(LSAF_SUBMITJOB):   logMsgPrimary=logMsgPrefix;
MPRINT(LSAF_SUBMITJOB):   logMsg=" Submitted job /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_unzip_sdtm_sources.job";
MPRINT(LSAF_SUBMITJOB):   end;
MPRINT(LSAF_SUBMITJOB):   put;
MPRINT(LSAF_SUBMITJOB):   put logMsgPrimary " " logMsg;
MPRINT(LSAF_SUBMITJOB):   put logMsgPrefix " " "lsaf_submitjob";
MPRINT(LSAF_SUBMITJOB):   put logMsgPrefix " _lsafMsg_= " message ;
MPRINT(LSAF_SUBMITJOB):   put logMsgPrefix " _lsafRC_= " returnCode ;
MPRINT(LSAF_SUBMITJOB):   if "lsaf_job_params" = "" then put logMsgPrefix "No job parameters were supplied.";
MPRINT(LSAF_SUBMITJOB):   else put logMsgPrefix "sas_dsname = lsaf_job_params";
MPRINT(LSAF_SUBMITJOB):   put logMsgPrefix "_lsafJobSubmissionId_= " jobSubmissionId;
MPRINT(LSAF_SUBMITJOB):   put;
MPRINT(LSAF_SUBMITJOB):   call symputx("_lsafRC_", returnCode);
MPRINT(LSAF_SUBMITJOB):   call symputx("_lsafMsg_", message);
MPRINT(LSAF_SUBMITJOB):   call symputx("_lsafJobSubmissionId_", strip(jobSubmissionId));
MPRINT(LSAF_SUBMITJOB):   run;


NOTE: SAS Life Science Analytics Framework Macro: *  Submitted job /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_unzip_sdtm_sources.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_submitjob
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: SAS Life Science Analytics Framework Macro: * sas_dsname = lsaf_job_params
NOTE: SAS Life Science Analytics Framework Macro: * _lsafJobSubmissionId_= 55fe1570-2db1-4163-9277-0dad3fc08630
NOTE: There were 4 observations read from the data set WORK.LSAF_JOB_PARAMS.
NOTE: DATA statement used (Total process time):
      real time           1.34 seconds
      cpu time            0.01 seconds
      

MPRINT(LSAF_SUBMITJOB):   options NONOTES;
MPRINT(SUBMIT_JOB):  ;
MPRINT(SUBMIT_JOB):   *- Job submission succeeded -*;
MPRINT(SUBMIT_JOB):   option nomprint nonotes
Calling %lsaf_getitemid(lsaf_path=/general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_unzip_sdtm_sources.job) ...
                                                                                                                         The SAS System

_LSAFMSG_=Success.  _LSAFRC_=0  _LSAFITEMID_=1c2ecf91-c7e9-4c12-89e8-e4b5da1212df
Calling %step_lsaf_getjobsubmissioninfos(job_subm_id=55fe1570-2db1-4163-9277-0dad3fc08630) ...
Notice: SYSDATASTEPPHASE= IN_DATA_STEP=N
Ignoring record: submissionId=30678109-1661-4a87-858f-1bc1b0d581fa jobPath=/general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_lsaf_get_last_sdtm.job jobVersion=0.1 jobId=abcfa448-6829-4513-8bef-3d8418207d45
Ignoring record: submissionId=c4fb4991-9137-4374-8d55-32ed9002f3d8 jobPath=/general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_gadam_ongoing_studies.job jobVersion=0.1 jobId=c762f385-9376-49c8-8cec-d19326e7e18e
Ignoring record: submissionId=e10042a4-6280-4c02-92e6-fbbdbb000293 jobPath=/general/biostat/jobs/gadam_rebuild_adam/prod/jobs/job_gadam_rebuild_adam.job jobVersion=  jobId=02b06e4d-7777-4a59-b2f9-2fc165603216
Ignoring record: submissionId=f00d2b52-d9f1-4ef1-8922-181d934626e0 jobPath=/general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_gadam_ongoing_studies.job jobVersion=0.1 jobId=c762f385-9376-49c8-8cec-d19326e7e18e
Ignoring record: submissionId=7e820358-2d58-4d70-904b-c779f6bea07a jobPath=/clinical/argx-113/cidp/argx-113-1802/biostat/staging/generic_adam/jobs/job_gadam_rebuild_adam.job jobVersion=  jobId=5ddfea34-d035-4d8f-a8ab-3bcb9e5707e3
Ignoring record: submissionId=950a2705-2d15-4db0-bfba-dd7c1cdeb43d jobPath=/clinical/argx-113/cidp/argx-113-1802/biostat/staging/generic_adam/jobs/job_tae.job jobVersion=  jobId=b83418c6-5bc8-45db-8950-5a0ece44040e
Notice: _LSAFJOBSUBMISSIONID_=55fe1570-2db1-4163-9277-0dad3fc08630 SESSIONID=f685b710-5b41-4fa9-bbe9-944391e71266 JOB=/general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_unzip_sdtm_sources.job JOBID=1c2ecf91-c7e9-4c12-89e8-e4b5da1212df
(SUBMIT_JOB): 2023-02-14T23:49:25 - Submitted REPOSITORY Job /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_unzip_sdtm_sources.job          with Submission ID: 55fe1570-2db1-4163-9277-0dad3fc08630, Status: STARTED
(SUBMIT_JOB): 23:49:25.42 Elapsed: 00:00:02.13 Job Submission Status: STARTED
(SUBMIT_JOB): 23:49:27.95 Elapsed: 00:00:04.66 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 23:49:30.49 Elapsed: 00:00:07.20 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 23:49:33.03 Elapsed: 00:00:09.74 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 23:49:35.57 Elapsed: 00:00:12.28 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 23:49:38.10 Elapsed: 00:00:14.81 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 23:49:40.65 Elapsed: 00:00:17.36 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 23:49:43.19 Elapsed: 00:00:19.90 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 23:49:45.72 Elapsed: 00:00:22.43 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 23:49:48.26 Elapsed: 00:00:24.97 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 23:49:50.80 Elapsed: 00:00:27.51 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 23:49:53.35 Elapsed: 00:00:30.06 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 23:50:00.89 Elapsed: 00:00:37.60 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 23:50:08.42 Elapsed: 00:00:45.13 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 23:50:15.96 Elapsed: 00:00:52.67 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 23:50:23.50 Elapsed: 00:01:00.21 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 23:50:46.03 Elapsed: 00:01:22.74 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 23:51:08.57 Elapsed: 00:01:45.28 Job Submission Status: COMPLETED_SUCCESSFUL
(SUBMIT_JOB): 2023-02-14T23:51:39 - Submitted REPOSITORY job: /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_unzip_sdtm_sources.job has completed with status: COMPLETED_SUCCESSFUL
MPRINT(SUBMIT_JOB):  ;
job_unzip_sdtm_sources.job: get job status: 0: Success.:       Elapsed: 00:02:15.28       REPOSITORY Job /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_unzip_sdtm_sources.job with Submission ID: 55fe1570-2db1-4163-9277-0dad3fc08630, Status: 
COMPLETED_SUCCESSFUL
MPRINT(COND):  ;
629        
630           %*- run job to create/refresh sdtm_last and/or generic_adam folders on all active studies (excluding 'pooling' studies [study numbers ending with -9xxx]) -*;
631           %submit_job(/general/biostat/jobs/gadam_ongoing_studies/dev/jobs/job_lsaf_get_last_sdtm.job, parent_job_instance = &job_instance);
NUM_JOBS_SPAWNED=4
MACROAPIVER=2.6
MPRINT(SUBMIT_JOB):   proc sql noprint;
MPRINT(SUBMIT_JOB):   drop table work.job_Parameters;
NOTE: Table WORK.JOB_PARAMETERS has been dropped.
MPRINT(SUBMIT_JOB):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

DEBUG:(GEN_JOB_ENV): PRX=22
DEBUG:(GEN_JOB_ENV): prxmatch(22, /general/biostat/jobs/gadam_ongoing_studies/dev/jobs/job_lsaf_get_last_sdtm.job) = 1
DEBUG:(GEN_JOB_ENV): (0) REFPATH=
DEBUG:(GEN_JOB_ENV): (0) REPEVPATH=/lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/biostat/jobs/gadam_ongoing_studies/prod/
DEBUG:(GEN_JOB_ENV): (0) RELREPEVPATH=/general/biostat/jobs/gadam_ongoing_studies/prod/
DEBUG:(GEN_JOB_ENV): (0) _SASFILEPATH_=/general/biostat/jobs/gadam_ongoing_studies/prod/programs/gadam_ongoing_studies.sas
DEBUG:(GEN_JOB_ENV): (0) PROGPATH=/general/biostat/jobs/gadam_ongoing_studies/prod/programs/
DEBUG:(GEN_JOB_ENV): (0) PATH=/general/biostat/jobs/gadam_ongoing_studies/dev/jobs/job_lsaf_get_last_sdtm.job
Setting refpath = &repevpath
                                                                                                                         The SAS System

DEBUG:(GEN_JOB_ENV): (1) REFPATH=/lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/biostat/jobs/gadam_ongoing_studies/prod/
DEBUG:(GEN_JOB_ENV): (2) REFENV=prod
DEBUG:(GEN_JOB_ENV): (3) REFENV=prod
DEBUG:(F_LSAF_EXISTS) - 2023-02-14T23:51:39 - Iteration: 1: slept = 0, exists = 1
DEBUG:(F_LSAF_EXISTS) - 2023-02-14T23:51:39 - Iteration: 1: slept = 0, exists = 1
DEBUG:(F_LSAF_EXISTS) - 2023-02-14T23:51:39 - Iteration: 1: slept = 0, exists = 1
MPRINT(LSAF_EXISTS):  ;
MPRINT(LSAF_EXISTS):   data _null_;
MPRINT(LSAF_EXISTS):   attrib returnCode length=8;
MPRINT(LSAF_EXISTS):   attrib message length=$200;
MPRINT(LSAF_EXISTS):   attrib logMsgPrefix length=$70;
MPRINT(LSAF_EXISTS):   attrib logMsg length=$300;
MPRINT(LSAF_EXISTS):   attrib exists length=3;
MPRINT(LSAF_EXISTS):   attrib logMsgPrimary length=$70;
MPRINT(LSAF_EXISTS):   declare javaobj srv("com/sas/lsaf/macro/content/repository/RepositoryService");
MPRINT(LSAF_EXISTS):   declare javaobj results("com/sas/lsaf/macro/common/result/Result");
MPRINT(LSAF_EXISTS):   srv.callStaticBooleanMethod("exists", "/general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_lsaf_get_last_sdtm.job", results, exists);
MPRINT(LSAF_EXISTS):   results.callIntMethod("getReturnCode", returnCode);
MPRINT(LSAF_EXISTS):   results.callStringMethod("getReturnMessage", message);
MPRINT(LSAF_EXISTS):   logMsgPrefix="NOTE: SAS Life Science Analytics Framework Macro: * ";
MPRINT(LSAF_EXISTS):   if (returnCode ne 0) then do;
MPRINT(LSAF_EXISTS):   logMsgPrimary="ERROR: SAS Life Science Analytics Framework Macro:";
MPRINT(LSAF_EXISTS):   logMsg=" Cannot determine if the item exists: /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_lsaf_get_last_sdtm.job" ;
MPRINT(LSAF_EXISTS):   exists=-1;
MPRINT(LSAF_EXISTS):   end;
MPRINT(LSAF_EXISTS):   else do;
MPRINT(LSAF_EXISTS):   logMsgPrimary=logMsgPrefix;
MPRINT(LSAF_EXISTS):   if (exists) then do;
MPRINT(LSAF_EXISTS):   logMsg=" The item exists: /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_lsaf_get_last_sdtm.job" ;
MPRINT(LSAF_EXISTS):   end;
MPRINT(LSAF_EXISTS):   else do;
MPRINT(LSAF_EXISTS):   logMsg=" The item does not exist: /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_lsaf_get_last_sdtm.job" ;
MPRINT(LSAF_EXISTS):   end;
MPRINT(LSAF_EXISTS):   end;
MPRINT(LSAF_EXISTS):   put;
MPRINT(LSAF_EXISTS):   put logMsgPrimary " " logMsg;
MPRINT(LSAF_EXISTS):   put logMsgPrefix " " "lsaf_exists";
MPRINT(LSAF_EXISTS):   put logMsgPrefix " _lsafMsg_= " message;
MPRINT(LSAF_EXISTS):   put logMsgPrefix " _lsafRC_= " returnCode;
MPRINT(LSAF_EXISTS):   put logMsgPrefix " _lsafExists_= " exists;
MPRINT(LSAF_EXISTS):   put;
MPRINT(LSAF_EXISTS):   call symputx("_lsafRC_", returnCode);
MPRINT(LSAF_EXISTS):   call symputx("_lsafMsg_", message);
MPRINT(LSAF_EXISTS):   call symputx("_lsafExists_", exists) ;
MPRINT(LSAF_EXISTS):   run;


NOTE: SAS Life Science Analytics Framework Macro: *  The item exists: /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_lsaf_get_last_sdtm.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_exists
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafExists_= 1
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(SUBMIT_JOB):  ;
                                                                                                                         The SAS System

Notice:(SUBMIT_JOB): LSAF Job Path exists: /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_lsaf_get_last_sdtm.job.
MPRINT(SUBMIT_JOB):   proc format;
MPRINT(SUBMIT_JOB):   value $jobabbr "job_gadam_ongoing_studies.job"= "gos" "job_studies_status.job"= "ss" "job_gadam_sdtm_key_core_vars.job"= "gskcv" "job_unzip_sdtm_sources.job"= "uss" "job_zip_extract_files.job"= "zef" "job_lsaf_get_last_sdtm.job"= 
"lgls" "setup_reporting_event_folder.job"= "sref" "job_gadam_refresh_sdtm_last.job"= "grsl" "job_gadam_update_refresh_info.job"= "guri" "convert_definetosas.job"= "cdts" "job_gadam_studysetup.job"= "gss" "job_gadam_rebuild_adam.job"= "gra" "job_adAAA" - 
"job_adzzz"= "adx" "job_qcstudyadams.job"= "qcsa" "job_qc_gadam_vs_study.job"= "qcgvs" "job_qc_gadam_vs_study-overview.job"= "qcgvso" "job_check_and_load.job"= "cal" "job_tAAA" - "job_tzzz"= "txx" "job_gadam_qc_overviews.job"= "gqco" 
"job_make_sdtm_pool_jobs.job"= "mspj" "job_lsaf_pool_last_sdtm.job"= "lpls" "sdtm_pool-AAA" - "sdtm_pool-zzz"= "pci" "job_gadam_refresh_sdtm_overview.job"= "grso" "getdata.job"= "gd" OTHER = "***" ;
NOTE: Format $JOBABBR is already on the library WORK.FORMATS.
NOTE: Format $JOBABBR has been output.
MPRINT(SUBMIT_JOB):   run;

NOTE: PROCEDURE FORMAT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SUBMIT_JOB):   quit;
job_instance=>Ngos117Prod_4<
MPRINT(LSAF_GETJOBPARAMETERS):  ;
MPRINT(LSAF_GETJOBPARAMETERS):   data work.job_Parameters (label="Created by LSAF_GETJOBPARAMETERS" KEEP=jobPath jobVersion name label type defaultValue fileVersion includeSubFolders );
MPRINT(LSAF_GETJOBPARAMETERS):   attrib returnCode length=8 message length=$200 logMsgPrefix length=$70 logMsgPrimary length=$70 logMsg length=$300 rowCount length=8 jobPath length=$2048 label="Job Path" jobVersion length=$32 label="Job Version" name 
length=$256 label="Parameter Name" label length=$256 label="Parameter Label" type length=$32 label="Parameter Type" defaultValue length=$2048 label="Parameter Default Value" fileVersion length=$32 label="File Version if File Type" includeSubFolders 
length=8 label="Include Container SubFolders" includesSubFolders length=$5 label="FOR INTERNAL PROCESSING ONLY.  WILL BE DROPPED." ;
MPRINT(LSAF_GETJOBPARAMETERS):   rowCount=0;
MPRINT(LSAF_GETJOBPARAMETERS):   declare javaobj srv("com/sas/lsaf/macro/execution/job/JobService") ;
MPRINT(LSAF_GETJOBPARAMETERS):   declare javaobj results("com/sas/lsaf/macro/execution/job/SasJobParametersResult");
MPRINT(LSAF_GETJOBPARAMETERS):   srv.callStaticVoidMethod("getRepositoryJobParameters", "/general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_lsaf_get_last_sdtm.job", "", results) ;
MPRINT(LSAF_GETJOBPARAMETERS):   results.callIntMethod("getReturnCode", returnCode);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getReturnMessage", message);
MPRINT(LSAF_GETJOBPARAMETERS):   logMsgPrefix="NOTE: SAS Life Science Analytics Framework Macro: * ";
MPRINT(LSAF_GETJOBPARAMETERS):   if (returnCode ne 0) then do;
MPRINT(LSAF_GETJOBPARAMETERS):   logMsgPrimary="ERROR: SAS Life Science Analytics Framework Macro:";
MPRINT(LSAF_GETJOBPARAMETERS):   if "" NE "" then logMsg=" Cannot retrieve parameters for job /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_lsaf_get_last_sdtm.job, version " ;
MPRINT(LSAF_GETJOBPARAMETERS):   else logMsg=" Cannot retrieve parameters for job /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_lsaf_get_last_sdtm.job" ;
MPRINT(LSAF_GETJOBPARAMETERS):   end;
MPRINT(LSAF_GETJOBPARAMETERS):   else do;
MPRINT(LSAF_GETJOBPARAMETERS):   logMsgPrimary=logMsgPrefix;
MPRINT(LSAF_GETJOBPARAMETERS):   logMsg=" Parameters were returned for job /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_lsaf_get_last_sdtm.job" ;
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getJobPath", jobPath);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getJobVersion", jobVersion);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callIntMethod("getSize", rowCount);
MPRINT(LSAF_GETJOBPARAMETERS):   do row=0 to rowCount - 1;
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getName", row, name);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getLabel", row, label);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getType", row, type);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getDefaultValue", row, defaultValue);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getFileVersion", row, fileVersion);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getContainerIncludeSubfolders", row, includesSubFolders);
MPRINT(LSAF_GETJOBPARAMETERS):   includeSubFolders=input(includesSubFolders,best.);
MPRINT(LSAF_GETJOBPARAMETERS):   output;
MPRINT(LSAF_GETJOBPARAMETERS):   end;
MPRINT(LSAF_GETJOBPARAMETERS):   end;
MPRINT(LSAF_GETJOBPARAMETERS):   put;
MPRINT(LSAF_GETJOBPARAMETERS):   put logMsgPrimary " " logMsg;
MPRINT(LSAF_GETJOBPARAMETERS):   put logMsgPrefix " " "lsaf_getjobparameters";
MPRINT(LSAF_GETJOBPARAMETERS):   if (rowCount=0) then put logMsgPrefix " No parameters were found.";
MPRINT(LSAF_GETJOBPARAMETERS):   else put logMsgPrefix " " rowCount " records written to data set work.job_Parameters";
MPRINT(LSAF_GETJOBPARAMETERS):   put logMsgPrefix " _lsafMsg_= " message ;
MPRINT(LSAF_GETJOBPARAMETERS):   put logMsgPrefix " _lsafRC_= " returnCode ;
                                                                                                                         The SAS System

MPRINT(LSAF_GETJOBPARAMETERS):   put;
MPRINT(LSAF_GETJOBPARAMETERS):   call symputx("_lsafRC_", returnCode);
MPRINT(LSAF_GETJOBPARAMETERS):   call symputx("_lsafMsg_", message);
MPRINT(LSAF_GETJOBPARAMETERS):   run;


NOTE: SAS Life Science Analytics Framework Macro: *  Parameters were returned for job /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_lsaf_get_last_sdtm.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_getjobparameters
NOTE: SAS Life Science Analytics Framework Macro: *  23  records written to data set work.job_Parameters
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: The data set WORK.JOB_PARAMETERS has 23 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.02 seconds
      

MPRINT(SUBMIT_JOB):  ;
NOTE: The dataset WORK.JOB_PARAMETERS has 23 observations and 8 variables.
MPRINT(SUBMIT_JOB):   ;
MPRINT(SUBMIT_JOB):   *- dataset to specify job parameters (from macro parameters values) -*;
MPRINT(SUBMIT_JOB):   data lsaf_job_params(index=(name));
MPRINT(SUBMIT_JOB):   set work.job_Parameters(rename=(defaultValue = value));
MPRINT(SUBMIT_JOB):   if upcase(name) = "_PARENTJOB_WS_" then do;
MPRINT(SUBMIT_JOB):   if symexist("_SASWS_") and type = "CHARACTER" then value = symget("_SASWS_");
MPRINT(SUBMIT_JOB):   else value = " ";
MPRINT(SUBMIT_JOB):   end;
MPRINT(SUBMIT_JOB):   else if upcase(name) = "_PARENTJOB_WRK_" then do;
MPRINT(SUBMIT_JOB):   value = pathname("WORK", "L");
MPRINT(SUBMIT_JOB):   end;
MPRINT(SUBMIT_JOB):   else if symexist(name) then do;
MPRINT(SUBMIT_JOB):   if symget(name) ^= ' ' then value = symget(name);
MPRINT(SUBMIT_JOB):   end;
MPRINT(SUBMIT_JOB):   new_value = translate(value, ' ', ',;()"''&%');
MPRINT(SUBMIT_JOB):   if new_value ne value then put "NOTE:(SUBMIT_JOB): Special characters may be removed from parameter value:" / @2 "parameter: " name /@2 "old value: " value /@2 "new value: " new_value;
MPRINT(SUBMIT_JOB):   if _n_=1 then put "Not" "ice:(SUBMIT_JOB): Updated Job parameters:";
MPRINT(SUBMIT_JOB):   if type = "FOLDER" then put " - " name @+(-1) "=" value "[" type= @+(-1) ", " includeSubFolders= @+(-1) "]" /;
MPRINT(SUBMIT_JOB):   else if TYPE = "FILE" then put " - " name @+(-1) "=" value "[" type= @+(-1) ", " fileversion= @+(-1) "]" /;
MPRINT(SUBMIT_JOB):   else put " - " name @+(-1) "=" value "[" type= @+(-1) "]" /;
MPRINT(SUBMIT_JOB):   run;

Notice:(SUBMIT_JOB): Updated Job parameters:
 - create_folder=Y [type=CHARACTER]
 - refresh_sdtm=Y [type=CHARACTER]
 - create_gadam_folder=Y [type=CHARACTER]
 - setup_gadam_folder=N [type=CHARACTER]
 - gadam_files_source=/general/biostat/gadam [type=CHARACTER]
 - rebuild_gadam_datasets=Y [type=CHARACTER]
 - qc_gadam_vs_study=Y [type=CHARACTER]
 - check_and_load_gadam=Y [type=CHARACTER]
 - run_gadam_tables=Y [type=CHARACTER]
 - wait=Y [type=CHARACTER]
 - force=N [type=CHARACTER]
 - mock=N [type=CHARACTER]
 - run_next_job=N [type=CHARACTER]
 - next_job=/general/biostat/jobs/gadam_rebuild_adam/dev/jobs/job_gadam_rebuild_adam.job [type=CHARACTER]
 - compounds=argx-117 [type=CHARACTER]
 - indications=  [type=CHARACTER]
                                                                                                                         The SAS System

 - studies=  [type=CHARACTER]
 - domains=  [type=CHARACTER]
 - last_refresh_reldy=. - 0 [type=CHARACTER]
 - job_instance=Ngos117Prod_4 [type=CHARACTER]
 - _PARENTJOB_WS_=/lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba [type=CHARACTER]
 - _PARENTJOB_WRK_=/saswork/sas_tmp/SAS_work89DD00193DB6_xar08auv.vsp.sas.com/SAS_work944F00193DB6_xar08auv.vsp.sas.com [type=CHARACTER]
 - USE_SAS_WORKSPACE_MACROS=  [type=CHARACTER]
NOTE: There were 23 observations read from the data set WORK.JOB_PARAMETERS.
NOTE: The data set WORK.LSAF_JOB_PARAMS has 23 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

N_PARAMS=23
MPRINT(SUBMIT_JOB):   data lsaf_job_params(index=(name));
MPRINT(SUBMIT_JOB):   set lsaf_job_params;
MPRINT(SUBMIT_JOB):   by name;
MPRINT(SUBMIT_JOB):   if (not first.name) or (not last.name) then do;
MPRINT(SUBMIT_JOB):   if last.name then action = "(kept)   ";
MPRINT(SUBMIT_JOB):   else action = "(dropped)";
MPRINT(SUBMIT_JOB):   drop action;
MPRINT(SUBMIT_JOB):   put "Not" "ice:(SUBMIT_JOB): duplicate parameter " name " = " value @+(3) action;
MPRINT(SUBMIT_JOB):   end;
MPRINT(SUBMIT_JOB):   if last.name;
MPRINT(SUBMIT_JOB):   run;

NOTE: There were 23 observations read from the data set WORK.LSAF_JOB_PARAMS.
NOTE: The data set WORK.LSAF_JOB_PARAMS has 23 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SUBMIT_JOB):   data _null_;
MPRINT(SUBMIT_JOB):   file print;
MPRINT(SUBMIT_JOB):   set lsaf_job_params(where=(prxmatch('/^(FOLDER|FILE)$/', trim(type))) in=a) lsaf_job_params(where=(prxmatch('/^(FOLDER|FILE)$/', trim(type))=0 and value ^= ' ')) end=last;
MPRINT(SUBMIT_JOB):   if _n_=1 then putlog "=== 2023-02-14T23:51:39 - Submit job: /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_lsaf_get_last_sdtm.job (with parameters: " @;
MPRINT(SUBMIT_JOB):   _n_a+a;
MPRINT(SUBMIT_JOB):   if _n_-1 = _n_a then do;
MPRINT(SUBMIT_JOB):   putlog / @8 @;
MPRINT(SUBMIT_JOB):   put / @8 @;
MPRINT(SUBMIT_JOB):   end;
MPRINT(SUBMIT_JOB):   if a then putlog / @8 name @+(-1) "=" value ' (' type= includeSubFolders= @+(-1) ')   ' @;
MPRINT(SUBMIT_JOB):   else putlog name @+(-1) "=" value "  " @ ;
MPRINT(SUBMIT_JOB):   if last then putlog @+8 ") ===";
MPRINT(SUBMIT_JOB):   if _n_=1 then put "=== 2023-02-14T23:51:39 - Submit job: /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_lsaf_get_last_sdtm.job (with parameters: " @;
MPRINT(SUBMIT_JOB):   if a then put / @8 name @+(-1) "=" value ' (' type= includeSubFolders= @+(-1) ')   ' @;
MPRINT(SUBMIT_JOB):   else put name @+(-1) "=" value "  " @ ;
MPRINT(SUBMIT_JOB):   if last then put @+8 ") ===";
MPRINT(SUBMIT_JOB):   run;

=== 2023-02-14T23:51:39 - Submit job: /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_lsaf_get_last_sdtm.job (with parameters: 
       _PARENTJOB_WRK_=/saswork/sas_tmp/SAS_work89DD00193DB6_xar08auv.vsp.sas.com/SAS_work944F00193DB6_xar08auv.vsp.sas.com   _PARENTJOB_WS_=/lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba   
check_and_load_gadam=Y   compounds=argx-117   create_folder=Y   create_gadam_folder=Y   force=N   gadam_files_source=/general/biostat/gadam   job_instance=Ngos117Prod_4   last_refresh_reldy=. - 0   mock=N   next_job=
/general/biostat/jobs/gadam_rebuild_adam/dev/jobs/job_gadam_rebuild_adam.job   qc_gadam_vs_study=Y   rebuild_gadam_datasets=Y   refresh_sdtm=Y   run_gadam_tables=Y   run_next_job=N   setup_gadam_folder=N   wait=Y           ) ===
NOTE: 4 lines were written to file PRINT.
NOTE: There were 0 observations read from the data set WORK.LSAF_JOB_PARAMS.
                                                                                                                         The SAS System

      WHERE PRXMATCH('/^(FOLDER|FILE)$/', TRIM(type));
NOTE: There were 19 observations read from the data set WORK.LSAF_JOB_PARAMS.
      WHERE (PRXMATCH('/^(FOLDER|FILE)$/', TRIM(type))=0) and (value not = ' ');
NOTE: The DATA step printed page 7.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(LSAF_SUBMITJOB):  ;
NOTE: lsaf_submitjob: Validating dataset lsaf_job_params
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   options nonotes;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   proc datasets library=work nolist;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   delete __SASMacro_submitJobtemp__;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   quit;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   run;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   options nonotes;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   data _null_;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   length message $45 libName $8 dsName $300;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   providedDatasetName=kstrip("lsaf_job_params");
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   dsName="INVALID";
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   dsNameIsValid=0;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   dotCount=countc(providedDatasetName,".");
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   dotPosition=kindexc(providedDatasetName,".");
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   *put dotPosition=;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   if (dotPosition=1 or dotPosition=length(providedDatasetName)) then do;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   message=" Missing either LIBNAME or data set.";
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   GOTO SETVARS;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   end;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   select (dotCount);
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   when (0) dsName=providedDatasetName;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   when (1) do;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   if (dotPosition le 9) then do;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   libName = (ksubstr(providedDatasetName, 1, dotPosition-1));
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   *put libName=;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   dsName = (ksubstr(providedDatasetName, dotPosition+1));
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   end;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   else do;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   message="Libname longer than 8 characters.";
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   GOTO SETVARS;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   end;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   end;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   otherwise do;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   message="Invalid data set name structure.";
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   GOTO SETVARS;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   end;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   end;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   firstchar=ksubstr(kleft(dsName), 1, 1);
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   if (anydigit(firstchar)) then do;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   message="Data set name must start with a character.";
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   GOTO SETVARS;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   end;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   if (length(dsName) > 32) then do;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   message="Data set name longer than 32 characters.";
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   GOTO SETVARS;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   end;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   dsNameIsValid=1;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   SETVARS: call symput("_lsafvaliddsn_", strip(put(dsNameIsValid, best.)));
                                                                                                                         The SAS System

MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   call symput("dsnMsg", message);
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   call symput("specifiedLib", strip(libName));
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   run;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   options NONOTES;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   * CHECK EXISTS: Also getting errors for data set name.;
MPRINT(LSAF_VALIDATE_SASDATASET):  ;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):  ;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   proc sort data=lsaf_job_params out=__SASMacro_submitJobtemp__;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   by name;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   run;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   data _null_;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   set __SASMacro_submitJobtemp__;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   by name;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   if (first.name AND NOT(last.name)) then do;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   call symput("_lsafMsg_", "Input data set has duplicate values for parameter name " || name || ".");
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   STOP;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   end;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   call symput("_lsafRC_", "0");
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   run;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   option notes;
MPRINT(LSAF_SUBMITJOB):  ;
MPRINT(LSAF_SUBMITJOB):   option notes;
MPRINT(LSAF_SUBMITJOB):   data _null_;
MPRINT(LSAF_SUBMITJOB):   attrib returnCode length=8 message length=$200 jobSubmissionId length=$525 logMsgPrefix length=$70 logMsgPrimary length=$70 logMsg length=$300 ;
MPRINT(LSAF_SUBMITJOB):   set lsaf_job_params end=eof;
MPRINT(LSAF_SUBMITJOB):   if (_n_ = 1) then do;
MPRINT(LSAF_SUBMITJOB):   declare javaobj params("com/sas/lsaf/macro/execution/job/SasParameterValues");
MPRINT(LSAF_SUBMITJOB):   declare javaobj srv("com/sas/lsaf/macro/execution/jobsubmission/JobSubmissionService");
MPRINT(LSAF_SUBMITJOB):   declare javaobj results("com/sas/lsaf/macro/common/result/Result");
MPRINT(LSAF_SUBMITJOB):   end;
MPRINT(LSAF_SUBMITJOB):   params.callVoidMethod("addValue", kstrip(name), kstrip(value), kstrip(type), kstrip(fileVersion), includeSubFolders);
MPRINT(LSAF_SUBMITJOB):   if (eof);
MPRINT(LSAF_SUBMITJOB):   declare javaobj job("com/sas/lsaf/macro/execution/jobsubmission/SasSubmittableJob", "/general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_lsaf_get_last_sdtm.job", "", params);
MPRINT(LSAF_SUBMITJOB):   srv.callStaticStringMethod("submitRepositoryJob", job, results, jobSubmissionId);
MPRINT(LSAF_SUBMITJOB):   results.callIntMethod("getReturnCode", returnCode);
MPRINT(LSAF_SUBMITJOB):   results.callStringMethod("getReturnMessage", message);
MPRINT(LSAF_SUBMITJOB):   logMsgPrefix="NOTE: SAS Life Science Analytics Framework Macro: * ";
MPRINT(LSAF_SUBMITJOB):   if (returnCode ne 0) then do;
MPRINT(LSAF_SUBMITJOB):   logMsgPrimary="ERROR: SAS Life Science Analytics Framework Macro:";
MPRINT(LSAF_SUBMITJOB):   logMsg=" Cannot submit job /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_lsaf_get_last_sdtm.job";
MPRINT(LSAF_SUBMITJOB):   end;
MPRINT(LSAF_SUBMITJOB):   else do;
MPRINT(LSAF_SUBMITJOB):   logMsgPrimary=logMsgPrefix;
MPRINT(LSAF_SUBMITJOB):   logMsg=" Submitted job /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_lsaf_get_last_sdtm.job";
MPRINT(LSAF_SUBMITJOB):   end;
MPRINT(LSAF_SUBMITJOB):   put;
MPRINT(LSAF_SUBMITJOB):   put logMsgPrimary " " logMsg;
MPRINT(LSAF_SUBMITJOB):   put logMsgPrefix " " "lsaf_submitjob";
MPRINT(LSAF_SUBMITJOB):   put logMsgPrefix " _lsafMsg_= " message ;
MPRINT(LSAF_SUBMITJOB):   put logMsgPrefix " _lsafRC_= " returnCode ;
MPRINT(LSAF_SUBMITJOB):   if "lsaf_job_params" = "" then put logMsgPrefix "No job parameters were supplied.";
MPRINT(LSAF_SUBMITJOB):   else put logMsgPrefix "sas_dsname = lsaf_job_params";
MPRINT(LSAF_SUBMITJOB):   put logMsgPrefix "_lsafJobSubmissionId_= " jobSubmissionId;
MPRINT(LSAF_SUBMITJOB):   put;
MPRINT(LSAF_SUBMITJOB):   call symputx("_lsafRC_", returnCode);
MPRINT(LSAF_SUBMITJOB):   call symputx("_lsafMsg_", message);
MPRINT(LSAF_SUBMITJOB):   call symputx("_lsafJobSubmissionId_", strip(jobSubmissionId));
MPRINT(LSAF_SUBMITJOB):   run;
                                                                                                                         The SAS System



NOTE: SAS Life Science Analytics Framework Macro: *  Submitted job /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_lsaf_get_last_sdtm.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_submitjob
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: SAS Life Science Analytics Framework Macro: * sas_dsname = lsaf_job_params
NOTE: SAS Life Science Analytics Framework Macro: * _lsafJobSubmissionId_= feed1f0f-2d9a-42b9-8060-8fddd1e47337
NOTE: There were 23 observations read from the data set WORK.LSAF_JOB_PARAMS.
NOTE: DATA statement used (Total process time):
      real time           1.34 seconds
      cpu time            0.01 seconds
      

MPRINT(LSAF_SUBMITJOB):   options NONOTES;
MPRINT(SUBMIT_JOB):  ;
MPRINT(SUBMIT_JOB):   *- Job submission succeeded -*;
MPRINT(SUBMIT_JOB):   option nomprint nonotes
Calling %lsaf_getitemid(lsaf_path=/general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_lsaf_get_last_sdtm.job) ...
_LSAFMSG_=Success.  _LSAFRC_=0  _LSAFITEMID_=abcfa448-6829-4513-8bef-3d8418207d45
Calling %step_lsaf_getjobsubmissioninfos(job_subm_id=feed1f0f-2d9a-42b9-8060-8fddd1e47337) ...
Notice: SYSDATASTEPPHASE= IN_DATA_STEP=N
Ignoring record: submissionId=30678109-1661-4a87-858f-1bc1b0d581fa jobPath=/general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_lsaf_get_last_sdtm.job jobVersion=0.1 jobId=abcfa448-6829-4513-8bef-3d8418207d45
Ignoring record: submissionId=c4fb4991-9137-4374-8d55-32ed9002f3d8 jobPath=/general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_gadam_ongoing_studies.job jobVersion=0.1 jobId=c762f385-9376-49c8-8cec-d19326e7e18e
Ignoring record: submissionId=e10042a4-6280-4c02-92e6-fbbdbb000293 jobPath=/general/biostat/jobs/gadam_rebuild_adam/prod/jobs/job_gadam_rebuild_adam.job jobVersion=  jobId=02b06e4d-7777-4a59-b2f9-2fc165603216
Ignoring record: submissionId=f00d2b52-d9f1-4ef1-8922-181d934626e0 jobPath=/general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_gadam_ongoing_studies.job jobVersion=0.1 jobId=c762f385-9376-49c8-8cec-d19326e7e18e
Ignoring record: submissionId=6268b771-fe80-4ae6-a69b-7d57f3adcc30 jobPath=/general/biostat/jobs/dashboard/dev/jobs/pp.job jobVersion=1.2 jobId=030fd944-90dd-464a-8101-6d0ab92dae81
Ignoring record: submissionId=7e820358-2d58-4d70-904b-c779f6bea07a jobPath=/clinical/argx-113/cidp/argx-113-1802/biostat/staging/generic_adam/jobs/job_gadam_rebuild_adam.job jobVersion=  jobId=5ddfea34-d035-4d8f-a8ab-3bcb9e5707e3
Ignoring record: submissionId=b3a3cc26-3075-48a2-9a4c-e48c70a25098 jobPath=/clinical/argx-113/cidp/argx-113-1802/biostat/staging/generic_adam/jobs/job_taeisr.job jobVersion=  jobId=110a9401-0b4f-472c-9f07-e5d644824482
Notice: _LSAFJOBSUBMISSIONID_=feed1f0f-2d9a-42b9-8060-8fddd1e47337 SESSIONID=4724796d-7de6-4aed-81d4-34fc18efa8d7 JOB=/general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_lsaf_get_last_sdtm.job JOBID=abcfa448-6829-4513-8bef-3d8418207d45
(SUBMIT_JOB): 2023-02-14T23:51:41 - Submitted REPOSITORY Job /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_lsaf_get_last_sdtm.job          with Submission ID: feed1f0f-2d9a-42b9-8060-8fddd1e47337, Status: STARTED
(SUBMIT_JOB): 23:51:40.75 Elapsed: 00:00:02.18 Job Submission Status: STARTED
(SUBMIT_JOB): 23:51:43.28 Elapsed: 00:00:04.71 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 23:51:45.83 Elapsed: 00:00:07.25 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 23:51:48.37 Elapsed: 00:00:09.79 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 23:51:50.90 Elapsed: 00:00:12.33 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 23:51:53.44 Elapsed: 00:00:14.86 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 23:51:55.97 Elapsed: 00:00:17.39 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 23:51:58.50 Elapsed: 00:00:19.93 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 23:52:01.06 Elapsed: 00:00:22.49 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 23:52:03.61 Elapsed: 00:00:25.04 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 23:52:06.16 Elapsed: 00:00:27.59 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 23:52:08.69 Elapsed: 00:00:30.12 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 23:52:16.22 Elapsed: 00:00:37.65 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 23:52:23.76 Elapsed: 00:00:45.18 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 23:52:31.30 Elapsed: 00:00:52.72 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 23:52:38.83 Elapsed: 00:01:00.26 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 23:53:01.36 Elapsed: 00:01:22.79 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 23:53:23.90 Elapsed: 00:01:45.32 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 23:53:53.93 Elapsed: 00:02:15.36 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 23:54:23.96 Elapsed: 00:02:45.39 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 23:54:54.00 Elapsed: 00:03:15.42 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 23:55:24.05 Elapsed: 00:03:45.47 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 23:55:54.08 Elapsed: 00:04:15.51 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 23:56:24.14 Elapsed: 00:04:45.56 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 23:56:54.18 Elapsed: 00:05:15.60 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 23:57:24.22 Elapsed: 00:05:45.64 Job Submission Status: RUNNING_TASKS
                                                                                                                         The SAS System

(SUBMIT_JOB): 23:57:54.26 Elapsed: 00:06:15.68 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 23:58:24.29 Elapsed: 00:06:45.71 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 23:58:54.33 Elapsed: 00:07:15.75 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 23:59:24.38 Elapsed: 00:07:45.80 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 23:59:54.41 Elapsed: 00:08:15.83 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:00:24.46 Elapsed: 00:08:45.88 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:00:54.52 Elapsed: 00:09:15.94 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:01:24.56 Elapsed: 00:09:45.98 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:01:54.60 Elapsed: 00:10:16.02 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:02:24.68 Elapsed: 00:10:46.10 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:02:54.72 Elapsed: 00:11:16.14 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:03:24.79 Elapsed: 00:11:46.22 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:03:54.86 Elapsed: 00:12:16.28 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:04:24.90 Elapsed: 00:12:46.33 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:04:54.96 Elapsed: 00:13:16.38 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:05:25.13 Elapsed: 00:13:46.55 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:05:55.17 Elapsed: 00:14:16.60 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:06:25.35 Elapsed: 00:14:46.77 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:06:55.59 Elapsed: 00:15:17.02 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:07:25.67 Elapsed: 00:15:47.09 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:07:55.72 Elapsed: 00:16:17.14 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:08:25.85 Elapsed: 00:16:47.28 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:08:55.90 Elapsed: 00:17:17.32 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:09:25.96 Elapsed: 00:17:47.38 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:09:56.01 Elapsed: 00:18:17.44 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:10:26.13 Elapsed: 00:18:47.55 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:10:56.33 Elapsed: 00:19:17.75 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:11:26.45 Elapsed: 00:19:47.88 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:11:56.52 Elapsed: 00:20:17.94 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:12:26.59 Elapsed: 00:20:48.01 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:12:56.87 Elapsed: 00:21:18.30 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:13:26.94 Elapsed: 00:21:48.36 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:13:57.02 Elapsed: 00:22:18.44 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:14:27.05 Elapsed: 00:22:48.48 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:14:57.10 Elapsed: 00:23:18.52 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:15:27.13 Elapsed: 00:23:48.56 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:15:57.19 Elapsed: 00:24:18.62 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:16:27.33 Elapsed: 00:24:48.75 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:16:57.56 Elapsed: 00:25:18.99 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:17:27.71 Elapsed: 00:25:49.14 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:17:57.80 Elapsed: 00:26:19.22 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:18:27.90 Elapsed: 00:26:49.33 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:18:58.01 Elapsed: 00:27:19.43 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:19:28.11 Elapsed: 00:27:49.54 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:19:58.15 Elapsed: 00:28:19.57 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:20:28.21 Elapsed: 00:28:49.63 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:20:58.31 Elapsed: 00:29:19.73 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:21:28.36 Elapsed: 00:29:49.78 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:21:58.39 Elapsed: 00:30:19.82 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:22:28.43 Elapsed: 00:30:49.85 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:22:58.47 Elapsed: 00:31:19.89 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:23:28.50 Elapsed: 00:31:49.93 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:23:58.54 Elapsed: 00:32:19.96 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:24:28.59 Elapsed: 00:32:50.02 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:24:58.63 Elapsed: 00:33:20.05 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:25:28.68 Elapsed: 00:33:50.11 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:25:58.73 Elapsed: 00:34:20.16 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:26:28.78 Elapsed: 00:34:50.20 Job Submission Status: RUNNING_TASKS
                                                                                                                         The SAS System

(SUBMIT_JOB): 00:26:58.86 Elapsed: 00:35:20.28 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:27:28.89 Elapsed: 00:35:50.32 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:27:58.93 Elapsed: 00:36:20.36 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:28:28.97 Elapsed: 00:36:50.39 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:28:59.01 Elapsed: 00:37:20.43 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:29:29.05 Elapsed: 00:37:50.47 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:29:59.08 Elapsed: 00:38:20.51 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:30:29.13 Elapsed: 00:38:50.55 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:30:59.16 Elapsed: 00:39:20.59 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:31:29.20 Elapsed: 00:39:50.62 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:31:59.23 Elapsed: 00:40:20.65 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:32:29.28 Elapsed: 00:40:50.70 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:32:59.31 Elapsed: 00:41:20.74 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:33:29.35 Elapsed: 00:41:50.77 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:33:59.38 Elapsed: 00:42:20.81 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:34:29.42 Elapsed: 00:42:50.85 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:34:59.46 Elapsed: 00:43:20.89 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:35:29.50 Elapsed: 00:43:50.92 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:35:59.54 Elapsed: 00:44:20.96 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:36:29.57 Elapsed: 00:44:51.00 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:36:59.62 Elapsed: 00:45:21.04 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:37:29.65 Elapsed: 00:45:51.07 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:37:59.69 Elapsed: 00:46:21.12 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:38:29.74 Elapsed: 00:46:51.16 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:38:59.79 Elapsed: 00:47:21.22 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:39:29.83 Elapsed: 00:47:51.25 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:39:59.87 Elapsed: 00:48:21.29 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:40:29.91 Elapsed: 00:48:51.34 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:40:59.95 Elapsed: 00:49:21.38 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:41:29.99 Elapsed: 00:49:51.41 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:42:00.02 Elapsed: 00:50:21.45 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:42:30.06 Elapsed: 00:50:51.48 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:43:00.11 Elapsed: 00:51:21.53 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:43:30.15 Elapsed: 00:51:51.57 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:44:00.19 Elapsed: 00:52:21.62 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:44:30.24 Elapsed: 00:52:51.66 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:45:00.27 Elapsed: 00:53:21.70 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:45:30.32 Elapsed: 00:53:51.74 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:46:00.37 Elapsed: 00:54:21.80 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:46:30.41 Elapsed: 00:54:51.83 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:47:00.45 Elapsed: 00:55:21.87 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:47:30.48 Elapsed: 00:55:51.90 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:48:00.52 Elapsed: 00:56:21.94 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:48:30.55 Elapsed: 00:56:51.98 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:49:00.59 Elapsed: 00:57:22.01 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:49:30.62 Elapsed: 00:57:52.05 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:50:00.68 Elapsed: 00:58:22.10 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:50:30.72 Elapsed: 00:58:52.14 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:51:00.75 Elapsed: 00:59:22.18 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:51:30.79 Elapsed: 00:59:52.21 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:52:00.83 Elapsed: 01:00:22.25 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:52:30.86 Elapsed: 01:00:52.29 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:53:00.90 Elapsed: 01:01:22.32 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:53:30.94 Elapsed: 01:01:52.36 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:54:00.97 Elapsed: 01:02:22.39 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:54:31.00 Elapsed: 01:02:52.42 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:55:01.04 Elapsed: 01:03:22.46 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:55:31.08 Elapsed: 01:03:52.51 Job Submission Status: RUNNING_TASKS
                                                                                                                         The SAS System

(SUBMIT_JOB): 00:56:01.12 Elapsed: 01:04:22.55 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:56:31.16 Elapsed: 01:04:52.58 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:57:01.19 Elapsed: 01:05:22.61 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:57:31.24 Elapsed: 01:05:52.66 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:58:01.28 Elapsed: 01:06:22.71 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:58:31.33 Elapsed: 01:06:52.75 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:59:01.36 Elapsed: 01:07:22.79 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 00:59:31.40 Elapsed: 01:07:52.82 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:00:01.43 Elapsed: 01:08:22.86 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:00:31.46 Elapsed: 01:08:52.89 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:01:01.50 Elapsed: 01:09:22.93 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:01:31.54 Elapsed: 01:09:52.96 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:02:01.60 Elapsed: 01:10:23.02 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:02:31.64 Elapsed: 01:10:53.06 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:03:01.69 Elapsed: 01:11:23.11 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:03:31.74 Elapsed: 01:11:53.16 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:04:01.80 Elapsed: 01:12:23.23 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:04:31.84 Elapsed: 01:12:53.26 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:05:01.87 Elapsed: 01:13:23.30 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:05:31.91 Elapsed: 01:13:53.33 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:06:01.95 Elapsed: 01:14:23.38 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:06:31.99 Elapsed: 01:14:53.41 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:07:02.03 Elapsed: 01:15:23.46 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:07:32.08 Elapsed: 01:15:53.51 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:08:02.12 Elapsed: 01:16:23.54 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:08:32.17 Elapsed: 01:16:53.59 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:09:02.21 Elapsed: 01:17:23.63 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:09:32.24 Elapsed: 01:17:53.67 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:10:02.28 Elapsed: 01:18:23.70 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:10:32.31 Elapsed: 01:18:53.74 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:11:02.34 Elapsed: 01:19:23.77 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:11:32.38 Elapsed: 01:19:53.80 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:12:02.41 Elapsed: 01:20:23.83 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:12:32.45 Elapsed: 01:20:53.87 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:13:02.49 Elapsed: 01:21:23.91 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:13:32.58 Elapsed: 01:21:54.00 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:14:02.61 Elapsed: 01:22:24.04 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:14:32.65 Elapsed: 01:22:54.07 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:15:02.68 Elapsed: 01:23:24.11 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:15:32.72 Elapsed: 01:23:54.14 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:16:02.75 Elapsed: 01:24:24.17 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:16:32.80 Elapsed: 01:24:54.23 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:17:02.84 Elapsed: 01:25:24.26 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:17:32.90 Elapsed: 01:25:54.32 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:18:02.94 Elapsed: 01:26:24.36 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:18:32.97 Elapsed: 01:26:54.40 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:19:03.01 Elapsed: 01:27:24.43 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:19:33.04 Elapsed: 01:27:54.47 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:20:03.08 Elapsed: 01:28:24.50 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:20:33.11 Elapsed: 01:28:54.54 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:21:03.15 Elapsed: 01:29:24.57 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:21:33.18 Elapsed: 01:29:54.61 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:22:03.22 Elapsed: 01:30:24.64 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:22:33.25 Elapsed: 01:30:54.68 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:23:03.29 Elapsed: 01:31:24.72 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:23:33.33 Elapsed: 01:31:54.76 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:24:03.36 Elapsed: 01:32:24.79 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:24:33.40 Elapsed: 01:32:54.82 Job Submission Status: RUNNING_TASKS
                                                                                                                         The SAS System

(SUBMIT_JOB): 01:25:03.44 Elapsed: 01:33:24.86 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:25:33.48 Elapsed: 01:33:54.90 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:26:03.52 Elapsed: 01:34:24.94 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:26:33.56 Elapsed: 01:34:54.99 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:27:03.60 Elapsed: 01:35:25.02 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:27:33.63 Elapsed: 01:35:55.06 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:28:03.67 Elapsed: 01:36:25.09 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:28:33.70 Elapsed: 01:36:55.13 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:29:03.76 Elapsed: 01:37:25.19 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:29:33.80 Elapsed: 01:37:55.22 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:30:03.83 Elapsed: 01:38:25.26 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:30:33.87 Elapsed: 01:38:55.29 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:31:03.90 Elapsed: 01:39:25.33 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:31:33.94 Elapsed: 01:39:55.36 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:32:03.98 Elapsed: 01:40:25.40 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:32:34.01 Elapsed: 01:40:55.44 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:33:04.05 Elapsed: 01:41:25.48 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:33:34.09 Elapsed: 01:41:55.51 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:34:04.12 Elapsed: 01:42:25.55 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:34:34.16 Elapsed: 01:42:55.59 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:35:04.20 Elapsed: 01:43:25.62 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:35:34.23 Elapsed: 01:43:55.65 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:36:04.26 Elapsed: 01:44:25.68 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:36:34.33 Elapsed: 01:44:55.76 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:37:04.37 Elapsed: 01:45:25.79 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:37:34.40 Elapsed: 01:45:55.83 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:38:04.44 Elapsed: 01:46:25.86 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:38:34.48 Elapsed: 01:46:55.90 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:39:04.51 Elapsed: 01:47:25.93 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:39:34.55 Elapsed: 01:47:55.97 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:40:04.62 Elapsed: 01:48:26.04 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:40:34.66 Elapsed: 01:48:56.08 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:41:04.69 Elapsed: 01:49:26.11 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:41:34.73 Elapsed: 01:49:56.15 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:42:04.77 Elapsed: 01:50:26.19 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:42:34.80 Elapsed: 01:50:56.23 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:43:04.85 Elapsed: 01:51:26.27 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:43:34.88 Elapsed: 01:51:56.30 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:44:04.92 Elapsed: 01:52:26.35 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:44:34.96 Elapsed: 01:52:56.38 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:45:04.99 Elapsed: 01:53:26.42 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:45:35.03 Elapsed: 01:53:56.45 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:46:05.06 Elapsed: 01:54:26.49 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:46:35.10 Elapsed: 01:54:56.52 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:47:05.13 Elapsed: 01:55:26.56 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:47:35.17 Elapsed: 01:55:56.59 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:48:05.20 Elapsed: 01:56:26.63 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:48:35.23 Elapsed: 01:56:56.66 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:49:05.27 Elapsed: 01:57:26.70 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:49:35.31 Elapsed: 01:57:56.73 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:50:05.34 Elapsed: 01:58:26.77 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:50:35.38 Elapsed: 01:58:56.80 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:51:05.42 Elapsed: 01:59:26.84 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:51:35.46 Elapsed: 01:59:56.88 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:52:05.50 Elapsed: 02:00:26.92 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:52:35.54 Elapsed: 02:00:56.96 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:53:05.59 Elapsed: 02:01:27.01 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:53:35.63 Elapsed: 02:01:57.05 Job Submission Status: RUNNING_TASKS
                                                                                                                         The SAS System

(SUBMIT_JOB): 01:54:05.69 Elapsed: 02:02:27.11 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:54:35.72 Elapsed: 02:02:57.15 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:55:05.76 Elapsed: 02:03:27.18 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:55:35.79 Elapsed: 02:03:57.22 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:56:05.83 Elapsed: 02:04:27.25 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:56:35.87 Elapsed: 02:04:57.30 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:57:05.91 Elapsed: 02:05:27.33 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:57:35.94 Elapsed: 02:05:57.37 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:58:05.98 Elapsed: 02:06:27.40 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:58:36.02 Elapsed: 02:06:57.44 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:59:06.05 Elapsed: 02:07:27.47 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 01:59:36.10 Elapsed: 02:07:57.52 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:00:06.14 Elapsed: 02:08:27.57 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:00:36.18 Elapsed: 02:08:57.60 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:01:06.23 Elapsed: 02:09:27.66 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:01:36.27 Elapsed: 02:09:57.69 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:02:06.31 Elapsed: 02:10:27.73 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:02:36.34 Elapsed: 02:10:57.77 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:03:06.40 Elapsed: 02:11:27.82 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:03:36.43 Elapsed: 02:11:57.86 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:04:06.47 Elapsed: 02:12:27.90 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:04:36.51 Elapsed: 02:12:57.93 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:05:06.55 Elapsed: 02:13:27.97 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:05:36.59 Elapsed: 02:13:58.01 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:06:06.63 Elapsed: 02:14:28.05 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:06:36.66 Elapsed: 02:14:58.09 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:07:06.70 Elapsed: 02:15:28.13 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:07:36.74 Elapsed: 02:15:58.16 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:08:06.78 Elapsed: 02:16:28.20 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:08:36.81 Elapsed: 02:16:58.23 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:09:06.85 Elapsed: 02:17:28.27 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:09:36.90 Elapsed: 02:17:58.32 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:10:06.93 Elapsed: 02:18:28.36 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:10:36.99 Elapsed: 02:18:58.42 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:11:07.04 Elapsed: 02:19:28.46 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:11:37.08 Elapsed: 02:19:58.50 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:12:07.11 Elapsed: 02:20:28.54 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:12:37.15 Elapsed: 02:20:58.58 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:13:07.19 Elapsed: 02:21:28.62 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:13:37.23 Elapsed: 02:21:58.66 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:14:07.27 Elapsed: 02:22:28.70 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:14:37.31 Elapsed: 02:22:58.74 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:15:07.35 Elapsed: 02:23:28.77 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:15:37.39 Elapsed: 02:23:58.81 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:16:07.42 Elapsed: 02:24:28.85 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:16:37.46 Elapsed: 02:24:58.88 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:17:07.49 Elapsed: 02:25:28.92 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:17:37.53 Elapsed: 02:25:58.95 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:18:07.58 Elapsed: 02:26:29.00 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:18:37.62 Elapsed: 02:26:59.05 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:19:07.70 Elapsed: 02:27:29.12 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:19:37.73 Elapsed: 02:27:59.15 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:20:07.76 Elapsed: 02:28:29.19 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:20:37.80 Elapsed: 02:28:59.22 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:21:07.83 Elapsed: 02:29:29.26 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:21:37.87 Elapsed: 02:29:59.29 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:22:07.90 Elapsed: 02:30:29.33 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:22:37.94 Elapsed: 02:30:59.37 Job Submission Status: RUNNING_TASKS
                                                                                                                         The SAS System

(SUBMIT_JOB): 02:23:07.98 Elapsed: 02:31:29.40 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:23:38.01 Elapsed: 02:31:59.43 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:24:08.04 Elapsed: 02:32:29.47 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:24:38.08 Elapsed: 02:32:59.50 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:25:08.11 Elapsed: 02:33:29.54 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:25:38.15 Elapsed: 02:33:59.57 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:26:08.19 Elapsed: 02:34:29.61 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:26:38.22 Elapsed: 02:34:59.64 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:27:08.25 Elapsed: 02:35:29.68 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:27:38.29 Elapsed: 02:35:59.71 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:28:08.34 Elapsed: 02:36:29.76 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:28:38.37 Elapsed: 02:36:59.79 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:29:08.41 Elapsed: 02:37:29.83 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:29:38.44 Elapsed: 02:37:59.86 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:30:08.47 Elapsed: 02:38:29.90 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:30:38.51 Elapsed: 02:38:59.93 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:31:08.55 Elapsed: 02:39:29.97 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:31:38.58 Elapsed: 02:40:00.01 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:32:08.62 Elapsed: 02:40:30.04 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:32:38.65 Elapsed: 02:41:00.08 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:33:08.69 Elapsed: 02:41:30.11 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:33:38.72 Elapsed: 02:42:00.14 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:34:08.75 Elapsed: 02:42:30.18 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:34:38.79 Elapsed: 02:43:00.21 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:35:08.82 Elapsed: 02:43:30.24 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:35:38.86 Elapsed: 02:44:00.28 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:36:08.89 Elapsed: 02:44:30.31 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:36:38.92 Elapsed: 02:45:00.35 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:37:08.98 Elapsed: 02:45:30.40 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:37:39.02 Elapsed: 02:46:00.44 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:38:09.06 Elapsed: 02:46:30.48 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:38:39.09 Elapsed: 02:47:00.51 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:39:09.12 Elapsed: 02:47:30.55 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:39:39.16 Elapsed: 02:48:00.59 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:40:09.21 Elapsed: 02:48:30.63 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:40:39.24 Elapsed: 02:49:00.66 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:41:09.28 Elapsed: 02:49:30.70 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:41:39.31 Elapsed: 02:50:00.74 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:42:09.36 Elapsed: 02:50:30.78 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:42:39.41 Elapsed: 02:51:00.83 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:43:09.44 Elapsed: 02:51:30.87 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:43:39.48 Elapsed: 02:52:00.90 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:44:09.54 Elapsed: 02:52:30.96 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:44:39.59 Elapsed: 02:53:01.02 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:45:09.63 Elapsed: 02:53:31.05 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:45:39.66 Elapsed: 02:54:01.08 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:46:09.70 Elapsed: 02:54:31.12 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:46:39.76 Elapsed: 02:55:01.18 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:47:09.79 Elapsed: 02:55:31.22 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:47:39.83 Elapsed: 02:56:01.25 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:48:09.86 Elapsed: 02:56:31.28 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:48:39.91 Elapsed: 02:57:01.34 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:49:09.95 Elapsed: 02:57:31.37 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:49:40.00 Elapsed: 02:58:01.43 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:50:10.03 Elapsed: 02:58:31.45 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:50:40.10 Elapsed: 02:59:01.52 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:51:10.14 Elapsed: 02:59:31.56 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:51:40.18 Elapsed: 03:00:01.60 Job Submission Status: RUNNING_TASKS
                                                                                                                         The SAS System

(SUBMIT_JOB): 02:52:10.22 Elapsed: 03:00:31.65 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:52:40.26 Elapsed: 03:01:01.69 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:53:10.31 Elapsed: 03:01:31.74 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:53:40.35 Elapsed: 03:02:01.77 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:54:10.38 Elapsed: 03:02:31.81 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:54:40.42 Elapsed: 03:03:01.84 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:55:10.46 Elapsed: 03:03:31.88 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:55:40.49 Elapsed: 03:04:01.92 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:56:10.53 Elapsed: 03:04:31.95 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:56:40.57 Elapsed: 03:05:01.99 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:57:10.61 Elapsed: 03:05:32.03 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:57:40.64 Elapsed: 03:06:02.07 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:58:10.68 Elapsed: 03:06:32.11 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:58:40.73 Elapsed: 03:07:02.16 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:59:10.77 Elapsed: 03:07:32.20 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 02:59:40.81 Elapsed: 03:08:02.23 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:00:10.84 Elapsed: 03:08:32.27 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:00:40.88 Elapsed: 03:09:02.30 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:01:10.91 Elapsed: 03:09:32.33 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:01:40.95 Elapsed: 03:10:02.37 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:02:10.99 Elapsed: 03:10:32.41 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:02:41.02 Elapsed: 03:11:02.45 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:03:11.06 Elapsed: 03:11:32.49 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:03:41.10 Elapsed: 03:12:02.52 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:04:11.13 Elapsed: 03:12:32.56 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:04:41.17 Elapsed: 03:13:02.60 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:05:11.22 Elapsed: 03:13:32.64 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:05:41.26 Elapsed: 03:14:02.68 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:06:11.31 Elapsed: 03:14:32.73 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:06:41.34 Elapsed: 03:15:02.77 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:07:11.38 Elapsed: 03:15:32.80 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:07:41.42 Elapsed: 03:16:02.84 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:08:11.45 Elapsed: 03:16:32.88 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:08:41.51 Elapsed: 03:17:02.93 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:09:11.57 Elapsed: 03:17:32.99 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:09:41.61 Elapsed: 03:18:03.03 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:10:11.64 Elapsed: 03:18:33.06 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:10:41.68 Elapsed: 03:19:03.10 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:11:11.71 Elapsed: 03:19:33.14 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:11:41.76 Elapsed: 03:20:03.18 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:12:11.79 Elapsed: 03:20:33.22 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:12:41.83 Elapsed: 03:21:03.25 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:13:11.88 Elapsed: 03:21:33.30 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:13:41.93 Elapsed: 03:22:03.35 Job Submission Status: RUNNING_TASKS
ERROR:(GET_LSAF_JOB_SUBMISSION_STATUS): job has status: COMPLETED_ERRORS
(SUBMIT_JOB): 03:14:11.96 Elapsed: 03:22:33.38 Job Submission Status: COMPLETED_ERRORS
(SUBMIT_JOB): 2023-02-15T03:14:42 - Submitted REPOSITORY job: /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_lsaf_get_last_sdtm.job has completed with status: COMPLETED_ERRORS
ERROR:(SUBMIT_JOB): REPOSITORY job job_lsaf_get_last_sdtm.job has status: COMPLETED_ERRORS
MPRINT(SUBMIT_JOB):  ;
job_lsaf_get_last_sdtm.job: get job status: 0: Success.:       Elapsed: 03:23:03.39       REPOSITORY Job /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_lsaf_get_last_sdtm.job with Submission ID: feed1f0f-2d9a-42b9-8060-8fddd1e47337, Status: 
COMPLETED_ERRORS
632        
633           %*- run job to pool gadam qc overviews -*;
634           %submit_job(/general/biostat/jobs/gadam_rebuild_adam/dev/jobs/job_gadam_qc_overviews.job, parent_job_instance = &job_instance);
NUM_JOBS_SPAWNED=5
MACROAPIVER=2.6
MPRINT(SUBMIT_JOB):   proc sql noprint;
MPRINT(SUBMIT_JOB):   drop table work.job_Parameters;
                                                                                                                         The SAS System

NOTE: Table WORK.JOB_PARAMETERS has been dropped.
MPRINT(SUBMIT_JOB):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

DEBUG:(GEN_JOB_ENV): PRX=29
DEBUG:(GEN_JOB_ENV): prxmatch(29, /general/biostat/jobs/gadam_rebuild_adam/dev/jobs/job_gadam_qc_overviews.job) = 1
DEBUG:(GEN_JOB_ENV): (0) REFPATH=
DEBUG:(GEN_JOB_ENV): (0) REPEVPATH=/lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/biostat/jobs/gadam_ongoing_studies/prod/
DEBUG:(GEN_JOB_ENV): (0) RELREPEVPATH=/general/biostat/jobs/gadam_ongoing_studies/prod/
DEBUG:(GEN_JOB_ENV): (0) _SASFILEPATH_=/general/biostat/jobs/gadam_ongoing_studies/prod/programs/gadam_ongoing_studies.sas
DEBUG:(GEN_JOB_ENV): (0) PROGPATH=/general/biostat/jobs/gadam_ongoing_studies/prod/programs/
DEBUG:(GEN_JOB_ENV): (0) PATH=/general/biostat/jobs/gadam_rebuild_adam/dev/jobs/job_gadam_qc_overviews.job
Setting refpath = &repevpath
DEBUG:(GEN_JOB_ENV): (1) REFPATH=/lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/biostat/jobs/gadam_ongoing_studies/prod/
DEBUG:(GEN_JOB_ENV): (2) REFENV=prod
DEBUG:(GEN_JOB_ENV): (3) REFENV=prod
DEBUG:(F_LSAF_EXISTS) - 2023-02-15T03:14:42 - Iteration: 1: slept = 0, exists = 1
DEBUG:(F_LSAF_EXISTS) - 2023-02-15T03:14:42 - Iteration: 1: slept = 0, exists = 1
DEBUG:(F_LSAF_EXISTS) - 2023-02-15T03:14:42 - Iteration: 1: slept = 0, exists = 1
MPRINT(LSAF_EXISTS):  ;
MPRINT(LSAF_EXISTS):   data _null_;
MPRINT(LSAF_EXISTS):   attrib returnCode length=8;
MPRINT(LSAF_EXISTS):   attrib message length=$200;
MPRINT(LSAF_EXISTS):   attrib logMsgPrefix length=$70;
MPRINT(LSAF_EXISTS):   attrib logMsg length=$300;
MPRINT(LSAF_EXISTS):   attrib exists length=3;
MPRINT(LSAF_EXISTS):   attrib logMsgPrimary length=$70;
MPRINT(LSAF_EXISTS):   declare javaobj srv("com/sas/lsaf/macro/content/repository/RepositoryService");
MPRINT(LSAF_EXISTS):   declare javaobj results("com/sas/lsaf/macro/common/result/Result");
MPRINT(LSAF_EXISTS):   srv.callStaticBooleanMethod("exists", "/general/biostat/jobs/gadam_rebuild_adam/prod/jobs/job_gadam_qc_overviews.job", results, exists);
MPRINT(LSAF_EXISTS):   results.callIntMethod("getReturnCode", returnCode);
MPRINT(LSAF_EXISTS):   results.callStringMethod("getReturnMessage", message);
MPRINT(LSAF_EXISTS):   logMsgPrefix="NOTE: SAS Life Science Analytics Framework Macro: * ";
MPRINT(LSAF_EXISTS):   if (returnCode ne 0) then do;
MPRINT(LSAF_EXISTS):   logMsgPrimary="ERROR: SAS Life Science Analytics Framework Macro:";
MPRINT(LSAF_EXISTS):   logMsg=" Cannot determine if the item exists: /general/biostat/jobs/gadam_rebuild_adam/prod/jobs/job_gadam_qc_overviews.job" ;
MPRINT(LSAF_EXISTS):   exists=-1;
MPRINT(LSAF_EXISTS):   end;
MPRINT(LSAF_EXISTS):   else do;
MPRINT(LSAF_EXISTS):   logMsgPrimary=logMsgPrefix;
MPRINT(LSAF_EXISTS):   if (exists) then do;
MPRINT(LSAF_EXISTS):   logMsg=" The item exists: /general/biostat/jobs/gadam_rebuild_adam/prod/jobs/job_gadam_qc_overviews.job" ;
MPRINT(LSAF_EXISTS):   end;
MPRINT(LSAF_EXISTS):   else do;
MPRINT(LSAF_EXISTS):   logMsg=" The item does not exist: /general/biostat/jobs/gadam_rebuild_adam/prod/jobs/job_gadam_qc_overviews.job" ;
MPRINT(LSAF_EXISTS):   end;
MPRINT(LSAF_EXISTS):   end;
MPRINT(LSAF_EXISTS):   put;
MPRINT(LSAF_EXISTS):   put logMsgPrimary " " logMsg;
MPRINT(LSAF_EXISTS):   put logMsgPrefix " " "lsaf_exists";
MPRINT(LSAF_EXISTS):   put logMsgPrefix " _lsafMsg_= " message;
MPRINT(LSAF_EXISTS):   put logMsgPrefix " _lsafRC_= " returnCode;
MPRINT(LSAF_EXISTS):   put logMsgPrefix " _lsafExists_= " exists;
MPRINT(LSAF_EXISTS):   put;
MPRINT(LSAF_EXISTS):   call symputx("_lsafRC_", returnCode);
                                                                                                                         The SAS System

MPRINT(LSAF_EXISTS):   call symputx("_lsafMsg_", message);
MPRINT(LSAF_EXISTS):   call symputx("_lsafExists_", exists) ;
MPRINT(LSAF_EXISTS):   run;


NOTE: SAS Life Science Analytics Framework Macro: *  The item exists: /general/biostat/jobs/gadam_rebuild_adam/prod/jobs/job_gadam_qc_overviews.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_exists
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafExists_= 1
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(SUBMIT_JOB):  ;
Notice:(SUBMIT_JOB): LSAF Job Path exists: /general/biostat/jobs/gadam_rebuild_adam/prod/jobs/job_gadam_qc_overviews.job.
MPRINT(SUBMIT_JOB):   proc format;
MPRINT(SUBMIT_JOB):   value $jobabbr "job_gadam_ongoing_studies.job"= "gos" "job_studies_status.job"= "ss" "job_gadam_sdtm_key_core_vars.job"= "gskcv" "job_unzip_sdtm_sources.job"= "uss" "job_zip_extract_files.job"= "zef" "job_lsaf_get_last_sdtm.job"= 
"lgls" "setup_reporting_event_folder.job"= "sref" "job_gadam_refresh_sdtm_last.job"= "grsl" "job_gadam_update_refresh_info.job"= "guri" "convert_definetosas.job"= "cdts" "job_gadam_studysetup.job"= "gss" "job_gadam_rebuild_adam.job"= "gra" "job_adAAA" - 
"job_adzzz"= "adx" "job_qcstudyadams.job"= "qcsa" "job_qc_gadam_vs_study.job"= "qcgvs" "job_qc_gadam_vs_study-overview.job"= "qcgvso" "job_check_and_load.job"= "cal" "job_tAAA" - "job_tzzz"= "txx" "job_gadam_qc_overviews.job"= "gqco" 
"job_make_sdtm_pool_jobs.job"= "mspj" "job_lsaf_pool_last_sdtm.job"= "lpls" "sdtm_pool-AAA" - "sdtm_pool-zzz"= "pci" "job_gadam_refresh_sdtm_overview.job"= "grso" "getdata.job"= "gd" OTHER = "***" ;
NOTE: Format $JOBABBR is already on the library WORK.FORMATS.
NOTE: Format $JOBABBR has been output.
MPRINT(SUBMIT_JOB):   run;

NOTE: PROCEDURE FORMAT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SUBMIT_JOB):   quit;
job_instance=>Ngos117Prod_5<
MPRINT(LSAF_GETJOBPARAMETERS):  ;
MPRINT(LSAF_GETJOBPARAMETERS):   data work.job_Parameters (label="Created by LSAF_GETJOBPARAMETERS" KEEP=jobPath jobVersion name label type defaultValue fileVersion includeSubFolders );
MPRINT(LSAF_GETJOBPARAMETERS):   attrib returnCode length=8 message length=$200 logMsgPrefix length=$70 logMsgPrimary length=$70 logMsg length=$300 rowCount length=8 jobPath length=$2048 label="Job Path" jobVersion length=$32 label="Job Version" name 
length=$256 label="Parameter Name" label length=$256 label="Parameter Label" type length=$32 label="Parameter Type" defaultValue length=$2048 label="Parameter Default Value" fileVersion length=$32 label="File Version if File Type" includeSubFolders 
length=8 label="Include Container SubFolders" includesSubFolders length=$5 label="FOR INTERNAL PROCESSING ONLY.  WILL BE DROPPED." ;
MPRINT(LSAF_GETJOBPARAMETERS):   rowCount=0;
MPRINT(LSAF_GETJOBPARAMETERS):   declare javaobj srv("com/sas/lsaf/macro/execution/job/JobService") ;
MPRINT(LSAF_GETJOBPARAMETERS):   declare javaobj results("com/sas/lsaf/macro/execution/job/SasJobParametersResult");
MPRINT(LSAF_GETJOBPARAMETERS):   srv.callStaticVoidMethod("getRepositoryJobParameters", "/general/biostat/jobs/gadam_rebuild_adam/prod/jobs/job_gadam_qc_overviews.job", "", results) ;
MPRINT(LSAF_GETJOBPARAMETERS):   results.callIntMethod("getReturnCode", returnCode);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getReturnMessage", message);
MPRINT(LSAF_GETJOBPARAMETERS):   logMsgPrefix="NOTE: SAS Life Science Analytics Framework Macro: * ";
MPRINT(LSAF_GETJOBPARAMETERS):   if (returnCode ne 0) then do;
MPRINT(LSAF_GETJOBPARAMETERS):   logMsgPrimary="ERROR: SAS Life Science Analytics Framework Macro:";
MPRINT(LSAF_GETJOBPARAMETERS):   if "" NE "" then logMsg=" Cannot retrieve parameters for job /general/biostat/jobs/gadam_rebuild_adam/prod/jobs/job_gadam_qc_overviews.job, version " ;
MPRINT(LSAF_GETJOBPARAMETERS):   else logMsg=" Cannot retrieve parameters for job /general/biostat/jobs/gadam_rebuild_adam/prod/jobs/job_gadam_qc_overviews.job" ;
MPRINT(LSAF_GETJOBPARAMETERS):   end;
MPRINT(LSAF_GETJOBPARAMETERS):   else do;
MPRINT(LSAF_GETJOBPARAMETERS):   logMsgPrimary=logMsgPrefix;
MPRINT(LSAF_GETJOBPARAMETERS):   logMsg=" Parameters were returned for job /general/biostat/jobs/gadam_rebuild_adam/prod/jobs/job_gadam_qc_overviews.job" ;
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getJobPath", jobPath);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getJobVersion", jobVersion);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callIntMethod("getSize", rowCount);
MPRINT(LSAF_GETJOBPARAMETERS):   do row=0 to rowCount - 1;
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getName", row, name);
                                                                                                                         The SAS System

MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getLabel", row, label);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getType", row, type);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getDefaultValue", row, defaultValue);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getFileVersion", row, fileVersion);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getContainerIncludeSubfolders", row, includesSubFolders);
MPRINT(LSAF_GETJOBPARAMETERS):   includeSubFolders=input(includesSubFolders,best.);
MPRINT(LSAF_GETJOBPARAMETERS):   output;
MPRINT(LSAF_GETJOBPARAMETERS):   end;
MPRINT(LSAF_GETJOBPARAMETERS):   end;
MPRINT(LSAF_GETJOBPARAMETERS):   put;
MPRINT(LSAF_GETJOBPARAMETERS):   put logMsgPrimary " " logMsg;
MPRINT(LSAF_GETJOBPARAMETERS):   put logMsgPrefix " " "lsaf_getjobparameters";
MPRINT(LSAF_GETJOBPARAMETERS):   if (rowCount=0) then put logMsgPrefix " No parameters were found.";
MPRINT(LSAF_GETJOBPARAMETERS):   else put logMsgPrefix " " rowCount " records written to data set work.job_Parameters";
MPRINT(LSAF_GETJOBPARAMETERS):   put logMsgPrefix " _lsafMsg_= " message ;
MPRINT(LSAF_GETJOBPARAMETERS):   put logMsgPrefix " _lsafRC_= " returnCode ;
MPRINT(LSAF_GETJOBPARAMETERS):   put;
MPRINT(LSAF_GETJOBPARAMETERS):   call symputx("_lsafRC_", returnCode);
MPRINT(LSAF_GETJOBPARAMETERS):   call symputx("_lsafMsg_", message);
MPRINT(LSAF_GETJOBPARAMETERS):   run;


NOTE: SAS Life Science Analytics Framework Macro: *  Parameters were returned for job /general/biostat/jobs/gadam_rebuild_adam/prod/jobs/job_gadam_qc_overviews.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_getjobparameters
NOTE: SAS Life Science Analytics Framework Macro: *  74  records written to data set work.job_Parameters
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: The data set WORK.JOB_PARAMETERS has 74 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.04 seconds
      

MPRINT(SUBMIT_JOB):  ;
NOTE: The dataset WORK.JOB_PARAMETERS has 74 observations and 8 variables.
MPRINT(SUBMIT_JOB):   ;
MPRINT(SUBMIT_JOB):   *- dataset to specify job parameters (from macro parameters values) -*;
MPRINT(SUBMIT_JOB):   data lsaf_job_params(index=(name));
MPRINT(SUBMIT_JOB):   set work.job_Parameters(rename=(defaultValue = value));
MPRINT(SUBMIT_JOB):   if upcase(name) = "_PARENTJOB_WS_" then do;
MPRINT(SUBMIT_JOB):   if symexist("_SASWS_") and type = "CHARACTER" then value = symget("_SASWS_");
MPRINT(SUBMIT_JOB):   else value = " ";
MPRINT(SUBMIT_JOB):   end;
MPRINT(SUBMIT_JOB):   else if upcase(name) = "_PARENTJOB_WRK_" then do;
MPRINT(SUBMIT_JOB):   value = pathname("WORK", "L");
MPRINT(SUBMIT_JOB):   end;
MPRINT(SUBMIT_JOB):   else if symexist(name) then do;
MPRINT(SUBMIT_JOB):   if symget(name) ^= ' ' then value = symget(name);
MPRINT(SUBMIT_JOB):   end;
MPRINT(SUBMIT_JOB):   new_value = translate(value, ' ', ',;()"''&%');
MPRINT(SUBMIT_JOB):   if new_value ne value then put "NOTE:(SUBMIT_JOB): Special characters may be removed from parameter value:" / @2 "parameter: " name /@2 "old value: " value /@2 "new value: " new_value;
MPRINT(SUBMIT_JOB):   if _n_=1 then put "Not" "ice:(SUBMIT_JOB): Updated Job parameters:";
MPRINT(SUBMIT_JOB):   if type = "FOLDER" then put " - " name @+(-1) "=" value "[" type= @+(-1) ", " includeSubFolders= @+(-1) "]" /;
MPRINT(SUBMIT_JOB):   else if TYPE = "FILE" then put " - " name @+(-1) "=" value "[" type= @+(-1) ", " fileversion= @+(-1) "]" /;
MPRINT(SUBMIT_JOB):   else put " - " name @+(-1) "=" value "[" type= @+(-1) "]" /;
MPRINT(SUBMIT_JOB):   run;

Notice:(SUBMIT_JOB): Updated Job parameters:
                                                                                                                         The SAS System

 - path1=/clinical/argx-110/aml/argx-110-0000/biostat/staging/generic_adam/qc [type=CHARACTER]
 - outpath=/general/biostat/jobs/gadam_rebuild_adam/dev/output/qc [type=CHARACTER]
NOTE:(SUBMIT_JOB): Special characters may be removed from parameter value:
 parameter: ds_cond
 old value: upcase(memname) in ('OVERVIEW' 'DATAPATHS' 'GENERIC_VAR_ALL')
 new value: upcase memname  in   OVERVIEW   DATAPATHS   GENERIC_VAR_ALL
 - ds_cond=upcase(memname) in ('OVERVIEW' 'DATAPATHS' 'GENERIC_VAR_ALL') [type=CHARACTER]
 - path2=/clinical/argx-110/aml/argx-110-1002/biostat/staging/generic_adam/qc [type=CHARACTER]
 - path3=/clinical/argx-110/aml/argx-110-1003/biostat/staging/generic_adam/qc [type=CHARACTER]
 - path4=/clinical/argx-110/aml/argx-110-1601/biostat/staging/generic_adam/qc [type=CHARACTER]
 - path5=/clinical/argx-110/aml/argx-110-2001/biostat/staging/generic_adam/qc [type=CHARACTER]
 - path6=/clinical/argx-113/bp/argx-113-0000/biostat/staging/generic_adam/qc [type=CHARACTER]
 - path7=/clinical/argx-113/bp/argx-113-2009/biostat/staging/generic_adam/qc [type=CHARACTER]
 - path8=/clinical/argx-113/cidp/argx-113-0000/biostat/staging/generic_adam/qc [type=CHARACTER]
 - path9=/clinical/argx-113/cidp/argx-113-1802/biostat/staging/generic_adam/qc [type=CHARACTER]
 - path10=/clinical/argx-113/cidp/argx-113-1902/biostat/staging/generic_adam/qc [type=CHARACTER]
 - path11=/clinical/argx-113/hv/argx-113-0000/biostat/staging/generic_adam/qc [type=CHARACTER]
 - path12=/clinical/argx-113/hv/argx-113-1501/biostat/staging/generic_adam/qc [type=CHARACTER]
 - path13=/clinical/argx-113/hv/argx-113-1702/biostat/staging/generic_adam/qc [type=CHARACTER]
 - path14=/clinical/argx-113/hv/argx-113-1901/biostat/staging/generic_adam/qc [type=CHARACTER]
 - path15=/clinical/argx-113/hv/argx-113-1907/biostat/staging/generic_adam/qc [type=CHARACTER]
 - path16=/clinical/argx-113/hv/argx-113-2102/biostat/staging/generic_adam/qc [type=CHARACTER]
 - path17=/clinical/argx-113/hv/argx-113-2201/biostat/staging/generic_adam/qc [type=CHARACTER]
 - path18=/clinical/argx-113/hv/argx-113-z005/biostat/staging/generic_adam/qc [type=CHARACTER]
 - path19=/clinical/argx-113/hv/argx-113-z006/biostat/staging/generic_adam/qc [type=CHARACTER]
 - path20=/clinical/argx-113/iim/argx-113-0000/biostat/staging/generic_adam/qc [type=CHARACTER]
 - path21=/clinical/argx-113/iim/argx-113-2007/biostat/staging/generic_adam/qc [type=CHARACTER]
 - path22=/clinical/argx-113/iim/argx-113-2011/biostat/staging/generic_adam/qc [type=CHARACTER]
 - path23=/clinical/argx-113/itp/argx-113-0000/biostat/staging/generic_adam/qc [type=CHARACTER]
 - path24=/clinical/argx-113/itp/argx-113-1603/biostat/staging/generic_adam/qc [type=CHARACTER]
 - path25=/clinical/argx-113/itp/argx-113-1801/biostat/staging/generic_adam/qc [type=CHARACTER]
 - path26=/clinical/argx-113/itp/argx-113-1803/biostat/staging/generic_adam/qc [type=CHARACTER]
 - path27=/clinical/argx-113/itp/argx-113-2004/biostat/staging/generic_adam/qc [type=CHARACTER]
 - path28=/clinical/argx-113/itp/argx-113-2005/biostat/staging/generic_adam/qc [type=CHARACTER]
 - path29=/clinical/argx-113/ln/argx-113-0000/biostat/staging/generic_adam/qc [type=CHARACTER]
 - path30=/clinical/argx-113/ln/argx-113-2202/biostat/staging/generic_adam/qc [type=CHARACTER]
 - path31=/clinical/argx-113/mg/argx-113-0000/biostat/staging/generic_adam/qc [type=CHARACTER]
 - path32=/clinical/argx-113/mg/argx-113-1602/biostat/staging/generic_adam/qc [type=CHARACTER]
 - path33=/clinical/argx-113/mg/argx-113-1704/biostat/staging/generic_adam/qc [type=CHARACTER]
 - path34=/clinical/argx-113/mg/argx-113-1705/biostat/staging/generic_adam/qc [type=CHARACTER]
 - path35=/clinical/argx-113/mg/argx-113-2001/biostat/staging/generic_adam/qc [type=CHARACTER]
 - path36=/clinical/argx-113/mg/argx-113-2002/biostat/staging/generic_adam/qc [type=CHARACTER]
 - path37=/clinical/argx-113/mg/argx-113-2003/biostat/staging/generic_adam/qc [type=CHARACTER]
 - path38=/clinical/argx-113/mg/argx-113-2006/biostat/staging/generic_adam/qc [type=CHARACTER]
 - path39=/clinical/argx-113/mg/argx-113-2008/biostat/staging/generic_adam/qc [type=CHARACTER]
 - path40=/clinical/argx-113/mn/argx-113-0000/biostat/staging/generic_adam/qc [type=CHARACTER]
 - path41=/clinical/argx-113/mn/argx-113-2203/biostat/staging/generic_adam/qc [type=CHARACTER]
 - path42=/clinical/argx-113/pemphigus/argx-113-0000/biostat/staging/generic_adam/qc [type=CHARACTER]
 - path43=/clinical/argx-113/pemphigus/argx-113-1701/biostat/staging/generic_adam/qc [type=CHARACTER]
 - path44=/clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/generic_adam/qc [type=CHARACTER]
 - path45=/clinical/argx-113/pemphigus/argx-113-1905/biostat/staging/generic_adam/qc [type=CHARACTER]
 - path46=/clinical/argx-113/pots/argx-113-0000/biostat/staging/generic_adam/qc [type=CHARACTER]
 - path47=/clinical/argx-113/pots/argx-113-2104/biostat/staging/generic_adam/qc [type=CHARACTER]
 - path48=/clinical/argx-113/sjogren/argx-113-0000/biostat/staging/generic_adam/qc [type=CHARACTER]
 - path49=/clinical/argx-113/sjogren/argx-113-2106/biostat/staging/generic_adam/qc [type=CHARACTER]
 - path50=/clinical/argx-113/x-ind/argx-113-0000/biostat/staging/generic_adam/qc [type=CHARACTER]
 - path51=/clinical/argx-117/covid-19/argx-117-0000/biostat/staging/generic_adam/qc [type=CHARACTER]
 - path52=/clinical/argx-117/covid-19/argx-117-2001/biostat/staging/generic_adam/qc [type=CHARACTER]
                                                                                                                         The SAS System

 - path53=/clinical/argx-117/dgf/argx-117-0000/biostat/staging/generic_adam/qc [type=CHARACTER]
 - path54=/clinical/argx-117/dgf/argx-117-2201/biostat/staging/generic_adam/qc [type=CHARACTER]
 - path55=/clinical/argx-117/hv/argx-117-0000/biostat/staging/generic_adam/qc [type=CHARACTER]
 - path56=/clinical/argx-117/hv/argx-117-1901/biostat/staging/generic_adam/qc [type=CHARACTER]
 - path57=/clinical/argx-117/mmn/argx-117-0000/biostat/staging/generic_adam/qc [type=CHARACTER]
 - path58=/clinical/argx-117/mmn/argx-117-2002/biostat/staging/generic_adam/qc [type=CHARACTER]
 - path59=/clinical/argx-117/mmn/argx-117-2003/biostat/staging/generic_adam/qc [type=CHARACTER]
 - path60=/clinical/argx-117/x-ind/argx-117-0000/biostat/staging/generic_adam/qc [type=CHARACTER]
 - path61=/clinical/test/gadam-tests/test-0000/biostat/staging/generic_adam/qc [type=CHARACTER]
 - path62=/clinical/test/gadam-tests/test-0001/biostat/staging/generic_adam/qc [type=CHARACTER]
 - path63=/clinical/test/gadam-tests/test-0002/biostat/staging/generic_adam/qc [type=CHARACTER]
 - path64=/clinical/test/gadam-tests/test-0003/biostat/staging/generic_adam/qc [type=CHARACTER]
 - path65=/clinical/test/gadam-tests/test-0004/biostat/staging/generic_adam/qc [type=CHARACTER]
 - path66=/clinical/test/indic/cdisc-pilot-0000/biostat/staging/generic_adam/qc [type=CHARACTER]
 - path67=/clinical/test/indic/cdisc-pilot-0001/biostat/staging/generic_adam/qc [type=CHARACTER]
 - path68=/clinical/test/indic/test-0000/biostat/staging/generic_adam/qc [type=CHARACTER]
 - path69=/clinical/test/indic/test-001/biostat/staging/generic_adam/qc [type=CHARACTER]
 - path70=/clinical/test/indic/test-002/biostat/staging/generic_adam/qc [type=CHARACTER]
 - path71=/clinical/test/indic/training-001/biostat/staging/generic_adam/qc [type=CHARACTER]
 - path72=/clinical/test/indic/training-002/biostat/staging/generic_adam/qc [type=CHARACTER]
NOTE: There were 74 observations read from the data set WORK.JOB_PARAMETERS.
NOTE: The data set WORK.LSAF_JOB_PARAMS has 74 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.02 seconds
      

N_PARAMS=74
MPRINT(SUBMIT_JOB):   data lsaf_job_params(index=(name));
MPRINT(SUBMIT_JOB):   set lsaf_job_params;
MPRINT(SUBMIT_JOB):   by name;
MPRINT(SUBMIT_JOB):   if (not first.name) or (not last.name) then do;
MPRINT(SUBMIT_JOB):   if last.name then action = "(kept)   ";
MPRINT(SUBMIT_JOB):   else action = "(dropped)";
MPRINT(SUBMIT_JOB):   drop action;
MPRINT(SUBMIT_JOB):   put "Not" "ice:(SUBMIT_JOB): duplicate parameter " name " = " value @+(3) action;
MPRINT(SUBMIT_JOB):   end;
MPRINT(SUBMIT_JOB):   if last.name;
MPRINT(SUBMIT_JOB):   run;

NOTE: There were 74 observations read from the data set WORK.LSAF_JOB_PARAMS.
NOTE: The data set WORK.LSAF_JOB_PARAMS has 74 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SUBMIT_JOB):   data _null_;
MPRINT(SUBMIT_JOB):   file print;
MPRINT(SUBMIT_JOB):   set lsaf_job_params(where=(prxmatch('/^(FOLDER|FILE)$/', trim(type))) in=a) lsaf_job_params(where=(prxmatch('/^(FOLDER|FILE)$/', trim(type))=0 and value ^= ' ')) end=last;
MPRINT(SUBMIT_JOB):   if _n_=1 then putlog "=== 2023-02-15T03:14:42 - Submit job: /general/biostat/jobs/gadam_rebuild_adam/prod/jobs/job_gadam_qc_overviews.job (with parameters: " @;
MPRINT(SUBMIT_JOB):   _n_a+a;
MPRINT(SUBMIT_JOB):   if _n_-1 = _n_a then do;
MPRINT(SUBMIT_JOB):   putlog / @8 @;
MPRINT(SUBMIT_JOB):   put / @8 @;
MPRINT(SUBMIT_JOB):   end;
MPRINT(SUBMIT_JOB):   if a then putlog / @8 name @+(-1) "=" value ' (' type= includeSubFolders= @+(-1) ')   ' @;
MPRINT(SUBMIT_JOB):   else putlog name @+(-1) "=" value "  " @ ;
                                                                                                                         The SAS System

MPRINT(SUBMIT_JOB):   if last then putlog @+8 ") ===";
MPRINT(SUBMIT_JOB):   if _n_=1 then put "=== 2023-02-15T03:14:42 - Submit job: /general/biostat/jobs/gadam_rebuild_adam/prod/jobs/job_gadam_qc_overviews.job (with parameters: " @;
MPRINT(SUBMIT_JOB):   if a then put / @8 name @+(-1) "=" value ' (' type= includeSubFolders= @+(-1) ')   ' @;
MPRINT(SUBMIT_JOB):   else put name @+(-1) "=" value "  " @ ;
MPRINT(SUBMIT_JOB):   if last then put @+8 ") ===";
MPRINT(SUBMIT_JOB):   run;

=== 2023-02-15T03:14:42 - Submit job: /general/biostat/jobs/gadam_rebuild_adam/prod/jobs/job_gadam_qc_overviews.job (with parameters: 
       ds_cond=upcase(memname) in ('OVERVIEW' 'DATAPATHS' 'GENERIC_VAR_ALL')   outpath=/general/biostat/jobs/gadam_rebuild_adam/dev/output/qc   path1=/clinical/argx-110/aml/argx-110-0000/biostat/staging/generic_adam/qc   path10=
/clinical/argx-113/cidp/argx-113-1902/biostat/staging/generic_adam/qc   path11=/clinical/argx-113/hv/argx-113-0000/biostat/staging/generic_adam/qc   path12=/clinical/argx-113/hv/argx-113-1501/biostat/staging/generic_adam/qc   path13=
/clinical/argx-113/hv/argx-113-1702/biostat/staging/generic_adam/qc   path14=/clinical/argx-113/hv/argx-113-1901/biostat/staging/generic_adam/qc   path15=/clinical/argx-113/hv/argx-113-1907/biostat/staging/generic_adam/qc   path16=
/clinical/argx-113/hv/argx-113-2102/biostat/staging/generic_adam/qc   path17=/clinical/argx-113/hv/argx-113-2201/biostat/staging/generic_adam/qc   path18=/clinical/argx-113/hv/argx-113-z005/biostat/staging/generic_adam/qc   path19=
/clinical/argx-113/hv/argx-113-z006/biostat/staging/generic_adam/qc   path2=/clinical/argx-110/aml/argx-110-1002/biostat/staging/generic_adam/qc   path20=/clinical/argx-113/iim/argx-113-0000/biostat/staging/generic_adam/qc   path21=
/clinical/argx-113/iim/argx-113-2007/biostat/staging/generic_adam/qc   path22=/clinical/argx-113/iim/argx-113-2011/biostat/staging/generic_adam/qc   path23=/clinical/argx-113/itp/argx-113-0000/biostat/staging/generic_adam/qc   path24=
/clinical/argx-113/itp/argx-113-1603/biostat/staging/generic_adam/qc   path25=/clinical/argx-113/itp/argx-113-1801/biostat/staging/generic_adam/qc   path26=/clinical/argx-113/itp/argx-113-1803/biostat/staging/generic_adam/qc   path27=
/clinical/argx-113/itp/argx-113-2004/biostat/staging/generic_adam/qc   path28=/clinical/argx-113/itp/argx-113-2005/biostat/staging/generic_adam/qc   path29=/clinical/argx-113/ln/argx-113-0000/biostat/staging/generic_adam/qc   path3=
/clinical/argx-110/aml/argx-110-1003/biostat/staging/generic_adam/qc   path30=/clinical/argx-113/ln/argx-113-2202/biostat/staging/generic_adam/qc   path31=/clinical/argx-113/mg/argx-113-0000/biostat/staging/generic_adam/qc   path32=
/clinical/argx-113/mg/argx-113-1602/biostat/staging/generic_adam/qc   path33=/clinical/argx-113/mg/argx-113-1704/biostat/staging/generic_adam/qc   path34=/clinical/argx-113/mg/argx-113-1705/biostat/staging/generic_adam/qc   path35=
/clinical/argx-113/mg/argx-113-2001/biostat/staging/generic_adam/qc   path36=/clinical/argx-113/mg/argx-113-2002/biostat/staging/generic_adam/qc   path37=/clinical/argx-113/mg/argx-113-2003/biostat/staging/generic_adam/qc   path38=
/clinical/argx-113/mg/argx-113-2006/biostat/staging/generic_adam/qc   path39=/clinical/argx-113/mg/argx-113-2008/biostat/staging/generic_adam/qc   path4=/clinical/argx-110/aml/argx-110-1601/biostat/staging/generic_adam/qc   path40=
/clinical/argx-113/mn/argx-113-0000/biostat/staging/generic_adam/qc   path41=/clinical/argx-113/mn/argx-113-2203/biostat/staging/generic_adam/qc   path42=/clinical/argx-113/pemphigus/argx-113-0000/biostat/staging/generic_adam/qc   path43=
/clinical/argx-113/pemphigus/argx-113-1701/biostat/staging/generic_adam/qc   path44=/clinical/argx-113/pemphigus/argx-113-1904/biostat/staging/generic_adam/qc   path45=/clinical/argx-113/pemphigus/argx-113-1905/biostat/staging/generic_adam/qc   path46=
/clinical/argx-113/pots/argx-113-0000/biostat/staging/generic_adam/qc   path47=/clinical/argx-113/pots/argx-113-2104/biostat/staging/generic_adam/qc   path48=/clinical/argx-113/sjogren/argx-113-0000/biostat/staging/generic_adam/qc   path49=
/clinical/argx-113/sjogren/argx-113-2106/biostat/staging/generic_adam/qc   path5=/clinical/argx-110/aml/argx-110-2001/biostat/staging/generic_adam/qc   path50=/clinical/argx-113/x-ind/argx-113-0000/biostat/staging/generic_adam/qc   path51=
/clinical/argx-117/covid-19/argx-117-0000/biostat/staging/generic_adam/qc   path52=/clinical/argx-117/covid-19/argx-117-2001/biostat/staging/generic_adam/qc   path53=/clinical/argx-117/dgf/argx-117-0000/biostat/staging/generic_adam/qc   path54=
/clinical/argx-117/dgf/argx-117-2201/biostat/staging/generic_adam/qc   path55=/clinical/argx-117/hv/argx-117-0000/biostat/staging/generic_adam/qc   path56=/clinical/argx-117/hv/argx-117-1901/biostat/staging/generic_adam/qc   path57=
/clinical/argx-117/mmn/argx-117-0000/biostat/staging/generic_adam/qc   path58=/clinical/argx-117/mmn/argx-117-2002/biostat/staging/generic_adam/qc   path59=/clinical/argx-117/mmn/argx-117-2003/biostat/staging/generic_adam/qc   path6=
/clinical/argx-113/bp/argx-113-0000/biostat/staging/generic_adam/qc   path60=/clinical/argx-117/x-ind/argx-117-0000/biostat/staging/generic_adam/qc   path61=/clinical/test/gadam-tests/test-0000/biostat/staging/generic_adam/qc   path62=
/clinical/test/gadam-tests/test-0001/biostat/staging/generic_adam/qc   path63=/clinical/test/gadam-tests/test-0002/biostat/staging/generic_adam/qc   path64=/clinical/test/gadam-tests/test-0003/biostat/staging/generic_adam/qc   path65=
/clinical/test/gadam-tests/test-0004/biostat/staging/generic_adam/qc   path66=/clinical/test/indic/cdisc-pilot-0000/biostat/staging/generic_adam/qc   path67=/clinical/test/indic/cdisc-pilot-0001/biostat/staging/generic_adam/qc   path68=
/clinical/test/indic/test-0000/biostat/staging/generic_adam/qc   path69=/clinical/test/indic/test-001/biostat/staging/generic_adam/qc   path7=/clinical/argx-113/bp/argx-113-2009/biostat/staging/generic_adam/qc   path70=
/clinical/test/indic/test-002/biostat/staging/generic_adam/qc   path71=/clinical/test/indic/training-001/biostat/staging/generic_adam/qc   path72=/clinical/test/indic/training-002/biostat/staging/generic_adam/qc   path8=
/clinical/argx-113/cidp/argx-113-0000/biostat/staging/generic_adam/qc   path9=/clinical/argx-113/cidp/argx-113-1802/biostat/staging/generic_adam/qc           ) ===
NOTE: 26 lines were written to file PRINT.
NOTE: There were 0 observations read from the data set WORK.LSAF_JOB_PARAMS.
      WHERE PRXMATCH('/^(FOLDER|FILE)$/', TRIM(type));
NOTE: There were 74 observations read from the data set WORK.LSAF_JOB_PARAMS.
      WHERE (PRXMATCH('/^(FOLDER|FILE)$/', TRIM(type))=0) and (value not = ' ');
NOTE: The DATA step printed page 9.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(LSAF_SUBMITJOB):  ;
NOTE: lsaf_submitjob: Validating dataset lsaf_job_params
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   options nonotes;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   proc datasets library=work nolist;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   delete __SASMacro_submitJobtemp__;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   quit;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   run;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   options nonotes;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   data _null_;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   length message $45 libName $8 dsName $300;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   providedDatasetName=kstrip("lsaf_job_params");
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   dsName="INVALID";
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   dsNameIsValid=0;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   dotCount=countc(providedDatasetName,".");
                                                                                                                         The SAS System

MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   dotPosition=kindexc(providedDatasetName,".");
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   *put dotPosition=;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   if (dotPosition=1 or dotPosition=length(providedDatasetName)) then do;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   message=" Missing either LIBNAME or data set.";
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   GOTO SETVARS;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   end;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   select (dotCount);
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   when (0) dsName=providedDatasetName;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   when (1) do;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   if (dotPosition le 9) then do;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   libName = (ksubstr(providedDatasetName, 1, dotPosition-1));
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   *put libName=;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   dsName = (ksubstr(providedDatasetName, dotPosition+1));
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   end;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   else do;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   message="Libname longer than 8 characters.";
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   GOTO SETVARS;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   end;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   end;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   otherwise do;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   message="Invalid data set name structure.";
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   GOTO SETVARS;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   end;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   end;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   firstchar=ksubstr(kleft(dsName), 1, 1);
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   if (anydigit(firstchar)) then do;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   message="Data set name must start with a character.";
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   GOTO SETVARS;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   end;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   if (length(dsName) > 32) then do;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   message="Data set name longer than 32 characters.";
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   GOTO SETVARS;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   end;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   dsNameIsValid=1;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   SETVARS: call symput("_lsafvaliddsn_", strip(put(dsNameIsValid, best.)));
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   call symput("dsnMsg", message);
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   call symput("specifiedLib", strip(libName));
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   run;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   options NONOTES;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   * CHECK EXISTS: Also getting errors for data set name.;
MPRINT(LSAF_VALIDATE_SASDATASET):  ;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):  ;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   proc sort data=lsaf_job_params out=__SASMacro_submitJobtemp__;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   by name;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   run;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   data _null_;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   set __SASMacro_submitJobtemp__;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   by name;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   if (first.name AND NOT(last.name)) then do;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   call symput("_lsafMsg_", "Input data set has duplicate values for parameter name " || name || ".");
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   STOP;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   end;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   call symput("_lsafRC_", "0");
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   run;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   option notes;
MPRINT(LSAF_SUBMITJOB):  ;
MPRINT(LSAF_SUBMITJOB):   option notes;
MPRINT(LSAF_SUBMITJOB):   data _null_;
                                                                                                                         The SAS System

MPRINT(LSAF_SUBMITJOB):   attrib returnCode length=8 message length=$200 jobSubmissionId length=$525 logMsgPrefix length=$70 logMsgPrimary length=$70 logMsg length=$300 ;
MPRINT(LSAF_SUBMITJOB):   set lsaf_job_params end=eof;
MPRINT(LSAF_SUBMITJOB):   if (_n_ = 1) then do;
MPRINT(LSAF_SUBMITJOB):   declare javaobj params("com/sas/lsaf/macro/execution/job/SasParameterValues");
MPRINT(LSAF_SUBMITJOB):   declare javaobj srv("com/sas/lsaf/macro/execution/jobsubmission/JobSubmissionService");
MPRINT(LSAF_SUBMITJOB):   declare javaobj results("com/sas/lsaf/macro/common/result/Result");
MPRINT(LSAF_SUBMITJOB):   end;
MPRINT(LSAF_SUBMITJOB):   params.callVoidMethod("addValue", kstrip(name), kstrip(value), kstrip(type), kstrip(fileVersion), includeSubFolders);
MPRINT(LSAF_SUBMITJOB):   if (eof);
MPRINT(LSAF_SUBMITJOB):   declare javaobj job("com/sas/lsaf/macro/execution/jobsubmission/SasSubmittableJob", "/general/biostat/jobs/gadam_rebuild_adam/prod/jobs/job_gadam_qc_overviews.job", "", params);
MPRINT(LSAF_SUBMITJOB):   srv.callStaticStringMethod("submitRepositoryJob", job, results, jobSubmissionId);
MPRINT(LSAF_SUBMITJOB):   results.callIntMethod("getReturnCode", returnCode);
MPRINT(LSAF_SUBMITJOB):   results.callStringMethod("getReturnMessage", message);
MPRINT(LSAF_SUBMITJOB):   logMsgPrefix="NOTE: SAS Life Science Analytics Framework Macro: * ";
MPRINT(LSAF_SUBMITJOB):   if (returnCode ne 0) then do;
MPRINT(LSAF_SUBMITJOB):   logMsgPrimary="ERROR: SAS Life Science Analytics Framework Macro:";
MPRINT(LSAF_SUBMITJOB):   logMsg=" Cannot submit job /general/biostat/jobs/gadam_rebuild_adam/prod/jobs/job_gadam_qc_overviews.job";
MPRINT(LSAF_SUBMITJOB):   end;
MPRINT(LSAF_SUBMITJOB):   else do;
MPRINT(LSAF_SUBMITJOB):   logMsgPrimary=logMsgPrefix;
MPRINT(LSAF_SUBMITJOB):   logMsg=" Submitted job /general/biostat/jobs/gadam_rebuild_adam/prod/jobs/job_gadam_qc_overviews.job";
MPRINT(LSAF_SUBMITJOB):   end;
MPRINT(LSAF_SUBMITJOB):   put;
MPRINT(LSAF_SUBMITJOB):   put logMsgPrimary " " logMsg;
MPRINT(LSAF_SUBMITJOB):   put logMsgPrefix " " "lsaf_submitjob";
MPRINT(LSAF_SUBMITJOB):   put logMsgPrefix " _lsafMsg_= " message ;
MPRINT(LSAF_SUBMITJOB):   put logMsgPrefix " _lsafRC_= " returnCode ;
MPRINT(LSAF_SUBMITJOB):   if "lsaf_job_params" = "" then put logMsgPrefix "No job parameters were supplied.";
MPRINT(LSAF_SUBMITJOB):   else put logMsgPrefix "sas_dsname = lsaf_job_params";
MPRINT(LSAF_SUBMITJOB):   put logMsgPrefix "_lsafJobSubmissionId_= " jobSubmissionId;
MPRINT(LSAF_SUBMITJOB):   put;
MPRINT(LSAF_SUBMITJOB):   call symputx("_lsafRC_", returnCode);
MPRINT(LSAF_SUBMITJOB):   call symputx("_lsafMsg_", message);
MPRINT(LSAF_SUBMITJOB):   call symputx("_lsafJobSubmissionId_", strip(jobSubmissionId));
MPRINT(LSAF_SUBMITJOB):   run;


NOTE: SAS Life Science Analytics Framework Macro: *  Submitted job /general/biostat/jobs/gadam_rebuild_adam/prod/jobs/job_gadam_qc_overviews.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_submitjob
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: SAS Life Science Analytics Framework Macro: * sas_dsname = lsaf_job_params
NOTE: SAS Life Science Analytics Framework Macro: * _lsafJobSubmissionId_= fa3f6c13-a937-494e-997e-176882d11fd0
NOTE: There were 74 observations read from the data set WORK.LSAF_JOB_PARAMS.
NOTE: DATA statement used (Total process time):
      real time           1.40 seconds
      cpu time            0.02 seconds
      

MPRINT(LSAF_SUBMITJOB):   options NONOTES;
MPRINT(SUBMIT_JOB):  ;
MPRINT(SUBMIT_JOB):   *- Job submission succeeded -*;
MPRINT(SUBMIT_JOB):   option nomprint nonotes
Calling %lsaf_getitemid(lsaf_path=/general/biostat/jobs/gadam_rebuild_adam/prod/jobs/job_gadam_qc_overviews.job) ...
_LSAFMSG_=Success.  _LSAFRC_=0  _LSAFITEMID_=f02d1cdf-52e1-410c-b885-a5ce7901d51a
Calling %step_lsaf_getjobsubmissioninfos(job_subm_id=fa3f6c13-a937-494e-997e-176882d11fd0) ...
Notice: SYSDATASTEPPHASE= IN_DATA_STEP=N
                                                                                                                         The SAS System

Ignoring record: submissionId=30678109-1661-4a87-858f-1bc1b0d581fa jobPath=/general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_lsaf_get_last_sdtm.job jobVersion=0.1 jobId=abcfa448-6829-4513-8bef-3d8418207d45
Ignoring record: submissionId=ff89ee33-52c3-4658-8107-f03231e35ef7 jobPath=/clinical/argx-113/hv/argx-113-1901/biostat/staging/generic_adam/jobs/job_gadam_rebuild_adam.job jobVersion=  jobId=5593d879-35b7-4dc2-82f8-999c46a500a1
Ignoring record: submissionId=c4fb4991-9137-4374-8d55-32ed9002f3d8 jobPath=/general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_gadam_ongoing_studies.job jobVersion=0.1 jobId=c762f385-9376-49c8-8cec-d19326e7e18e
Ignoring record: submissionId=fd655b6e-9a18-4d48-96ad-60edca349c3d jobPath=/general/biostat/jobs/gadam_rebuild_adam/prod/jobs/job_gadam_rebuild_adam.job jobVersion=  jobId=02b06e4d-7777-4a59-b2f9-2fc165603216
Ignoring record: submissionId=f00d2b52-d9f1-4ef1-8922-181d934626e0 jobPath=/general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_gadam_ongoing_studies.job jobVersion=0.1 jobId=c762f385-9376-49c8-8cec-d19326e7e18e
Notice: _LSAFJOBSUBMISSIONID_=fa3f6c13-a937-494e-997e-176882d11fd0 SESSIONID=814f0fd3-cdd4-42c2-a296-09fdf2ef3bdf JOB=/general/biostat/jobs/gadam_rebuild_adam/prod/jobs/job_gadam_qc_overviews.job JOBID=f02d1cdf-52e1-410c-b885-a5ce7901d51a
(SUBMIT_JOB): 2023-02-15T03:14:44 - Submitted REPOSITORY Job /general/biostat/jobs/gadam_rebuild_adam/prod/jobs/job_gadam_qc_overviews.job          with Submission ID: fa3f6c13-a937-494e-997e-176882d11fd0, Status: STARTED
(SUBMIT_JOB): 03:14:44.14 Elapsed: 00:00:02.17 Job Submission Status: STARTED
(SUBMIT_JOB): 03:14:46.67 Elapsed: 00:00:04.71 Job Submission Status: STARTED
(SUBMIT_JOB): 03:14:49.20 Elapsed: 00:00:07.24 Job Submission Status: STARTED
(SUBMIT_JOB): 03:14:51.73 Elapsed: 00:00:09.77 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:14:54.27 Elapsed: 00:00:12.30 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:14:56.80 Elapsed: 00:00:14.84 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:14:59.33 Elapsed: 00:00:17.37 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:15:01.87 Elapsed: 00:00:19.90 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:15:04.42 Elapsed: 00:00:22.45 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:15:06.95 Elapsed: 00:00:24.98 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:15:09.56 Elapsed: 00:00:27.59 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:15:12.10 Elapsed: 00:00:30.13 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:15:19.63 Elapsed: 00:00:37.66 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:15:27.16 Elapsed: 00:00:45.19 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:15:34.69 Elapsed: 00:00:52.72 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:15:42.22 Elapsed: 00:01:00.26 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:16:04.76 Elapsed: 00:01:22.79 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:16:27.29 Elapsed: 00:01:45.33 Job Submission Status: RUNNING_TASKS
WARNING:(GET_LSAF_JOB_SUBMISSION_STATUS): job has status: COMPLETED_WARNINGS
(SUBMIT_JOB): 03:16:57.33 Elapsed: 00:02:15.36 Job Submission Status: COMPLETED_WARNINGS
(SUBMIT_JOB): 2023-02-15T03:17:27 - Submitted REPOSITORY job: /general/biostat/jobs/gadam_rebuild_adam/prod/jobs/job_gadam_qc_overviews.job has completed with status: COMPLETED_WARNINGS
WARNING:(SUBMIT_JOB): REPOSITORY job job_gadam_qc_overviews.job has status: COMPLETED_WARNINGS
MPRINT(SUBMIT_JOB):  ;
job_gadam_qc_overviews.job: get job status: 0: Success.:       Elapsed: 00:02:45.37       REPOSITORY Job /general/biostat/jobs/gadam_rebuild_adam/prod/jobs/job_gadam_qc_overviews.job with Submission ID: fa3f6c13-a937-494e-997e-176882d11fd0, Status: 
COMPLETED_WARNINGS
635        
636           %*- run job to collect gadam qc results for all variables and all daatsets from all studies with QC performed against Study ADaM datasets -*;
637           %submit_job(/general/biostat/jobs/gadam_rebuild_adam/dev/jobs/job_collect_generic_var_all.job, parent_job_instance = &job_instance);
NUM_JOBS_SPAWNED=6
MACROAPIVER=2.6
MPRINT(SUBMIT_JOB):   proc sql noprint;
MPRINT(SUBMIT_JOB):   drop table work.job_Parameters;
NOTE: Table WORK.JOB_PARAMETERS has been dropped.
MPRINT(SUBMIT_JOB):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

DEBUG:(GEN_JOB_ENV): PRX=36
DEBUG:(GEN_JOB_ENV): prxmatch(36, /general/biostat/jobs/gadam_rebuild_adam/dev/jobs/job_collect_generic_var_all.job) = 1
DEBUG:(GEN_JOB_ENV): (0) REFPATH=
DEBUG:(GEN_JOB_ENV): (0) REPEVPATH=/lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/biostat/jobs/gadam_ongoing_studies/prod/
DEBUG:(GEN_JOB_ENV): (0) RELREPEVPATH=/general/biostat/jobs/gadam_ongoing_studies/prod/
DEBUG:(GEN_JOB_ENV): (0) _SASFILEPATH_=/general/biostat/jobs/gadam_ongoing_studies/prod/programs/gadam_ongoing_studies.sas
DEBUG:(GEN_JOB_ENV): (0) PROGPATH=/general/biostat/jobs/gadam_ongoing_studies/prod/programs/
DEBUG:(GEN_JOB_ENV): (0) PATH=/general/biostat/jobs/gadam_rebuild_adam/dev/jobs/job_collect_generic_var_all.job
Setting refpath = &repevpath
DEBUG:(GEN_JOB_ENV): (1) REFPATH=/lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/biostat/jobs/gadam_ongoing_studies/prod/
DEBUG:(GEN_JOB_ENV): (2) REFENV=prod
DEBUG:(GEN_JOB_ENV): (3) REFENV=prod
                                                                                                                         The SAS System

DEBUG:(F_LSAF_EXISTS) - 2023-02-15T03:17:27 - Iteration: 1: slept = 0, exists = 1
DEBUG:(F_LSAF_EXISTS) - 2023-02-15T03:17:27 - Iteration: 1: slept = 0, exists = 1
DEBUG:(F_LSAF_EXISTS) - 2023-02-15T03:17:27 - Iteration: 1: slept = 0, exists = 1
MPRINT(LSAF_EXISTS):  ;
MPRINT(LSAF_EXISTS):   data _null_;
MPRINT(LSAF_EXISTS):   attrib returnCode length=8;
MPRINT(LSAF_EXISTS):   attrib message length=$200;
MPRINT(LSAF_EXISTS):   attrib logMsgPrefix length=$70;
MPRINT(LSAF_EXISTS):   attrib logMsg length=$300;
MPRINT(LSAF_EXISTS):   attrib exists length=3;
MPRINT(LSAF_EXISTS):   attrib logMsgPrimary length=$70;
MPRINT(LSAF_EXISTS):   declare javaobj srv("com/sas/lsaf/macro/content/repository/RepositoryService");
MPRINT(LSAF_EXISTS):   declare javaobj results("com/sas/lsaf/macro/common/result/Result");
MPRINT(LSAF_EXISTS):   srv.callStaticBooleanMethod("exists", "/general/biostat/jobs/gadam_rebuild_adam/prod/jobs/job_collect_generic_var_all.job", results, exists);
MPRINT(LSAF_EXISTS):   results.callIntMethod("getReturnCode", returnCode);
MPRINT(LSAF_EXISTS):   results.callStringMethod("getReturnMessage", message);
MPRINT(LSAF_EXISTS):   logMsgPrefix="NOTE: SAS Life Science Analytics Framework Macro: * ";
MPRINT(LSAF_EXISTS):   if (returnCode ne 0) then do;
MPRINT(LSAF_EXISTS):   logMsgPrimary="ERROR: SAS Life Science Analytics Framework Macro:";
MPRINT(LSAF_EXISTS):   logMsg=" Cannot determine if the item exists: /general/biostat/jobs/gadam_rebuild_adam/prod/jobs/job_collect_generic_var_all.job" ;
MPRINT(LSAF_EXISTS):   exists=-1;
MPRINT(LSAF_EXISTS):   end;
MPRINT(LSAF_EXISTS):   else do;
MPRINT(LSAF_EXISTS):   logMsgPrimary=logMsgPrefix;
MPRINT(LSAF_EXISTS):   if (exists) then do;
MPRINT(LSAF_EXISTS):   logMsg=" The item exists: /general/biostat/jobs/gadam_rebuild_adam/prod/jobs/job_collect_generic_var_all.job" ;
MPRINT(LSAF_EXISTS):   end;
MPRINT(LSAF_EXISTS):   else do;
MPRINT(LSAF_EXISTS):   logMsg=" The item does not exist: /general/biostat/jobs/gadam_rebuild_adam/prod/jobs/job_collect_generic_var_all.job" ;
MPRINT(LSAF_EXISTS):   end;
MPRINT(LSAF_EXISTS):   end;
MPRINT(LSAF_EXISTS):   put;
MPRINT(LSAF_EXISTS):   put logMsgPrimary " " logMsg;
MPRINT(LSAF_EXISTS):   put logMsgPrefix " " "lsaf_exists";
MPRINT(LSAF_EXISTS):   put logMsgPrefix " _lsafMsg_= " message;
MPRINT(LSAF_EXISTS):   put logMsgPrefix " _lsafRC_= " returnCode;
MPRINT(LSAF_EXISTS):   put logMsgPrefix " _lsafExists_= " exists;
MPRINT(LSAF_EXISTS):   put;
MPRINT(LSAF_EXISTS):   call symputx("_lsafRC_", returnCode);
MPRINT(LSAF_EXISTS):   call symputx("_lsafMsg_", message);
MPRINT(LSAF_EXISTS):   call symputx("_lsafExists_", exists) ;
MPRINT(LSAF_EXISTS):   run;


NOTE: SAS Life Science Analytics Framework Macro: *  The item exists: /general/biostat/jobs/gadam_rebuild_adam/prod/jobs/job_collect_generic_var_all.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_exists
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafExists_= 1
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

MPRINT(SUBMIT_JOB):  ;
Notice:(SUBMIT_JOB): LSAF Job Path exists: /general/biostat/jobs/gadam_rebuild_adam/prod/jobs/job_collect_generic_var_all.job.
MPRINT(SUBMIT_JOB):   proc format;
MPRINT(SUBMIT_JOB):   value $jobabbr "job_gadam_ongoing_studies.job"= "gos" "job_studies_status.job"= "ss" "job_gadam_sdtm_key_core_vars.job"= "gskcv" "job_unzip_sdtm_sources.job"= "uss" "job_zip_extract_files.job"= "zef" "job_lsaf_get_last_sdtm.job"= 
                                                                                                                         The SAS System

"lgls" "setup_reporting_event_folder.job"= "sref" "job_gadam_refresh_sdtm_last.job"= "grsl" "job_gadam_update_refresh_info.job"= "guri" "convert_definetosas.job"= "cdts" "job_gadam_studysetup.job"= "gss" "job_gadam_rebuild_adam.job"= "gra" "job_adAAA" - 
"job_adzzz"= "adx" "job_qcstudyadams.job"= "qcsa" "job_qc_gadam_vs_study.job"= "qcgvs" "job_qc_gadam_vs_study-overview.job"= "qcgvso" "job_check_and_load.job"= "cal" "job_tAAA" - "job_tzzz"= "txx" "job_gadam_qc_overviews.job"= "gqco" 
"job_make_sdtm_pool_jobs.job"= "mspj" "job_lsaf_pool_last_sdtm.job"= "lpls" "sdtm_pool-AAA" - "sdtm_pool-zzz"= "pci" "job_gadam_refresh_sdtm_overview.job"= "grso" "getdata.job"= "gd" OTHER = "***" ;
NOTE: Format $JOBABBR is already on the library WORK.FORMATS.
NOTE: Format $JOBABBR has been output.
MPRINT(SUBMIT_JOB):   run;

NOTE: PROCEDURE FORMAT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SUBMIT_JOB):   quit;
job_instance=>Ngos117Prod_6<
MPRINT(LSAF_GETJOBPARAMETERS):  ;
MPRINT(LSAF_GETJOBPARAMETERS):   data work.job_Parameters (label="Created by LSAF_GETJOBPARAMETERS" KEEP=jobPath jobVersion name label type defaultValue fileVersion includeSubFolders );
MPRINT(LSAF_GETJOBPARAMETERS):   attrib returnCode length=8 message length=$200 logMsgPrefix length=$70 logMsgPrimary length=$70 logMsg length=$300 rowCount length=8 jobPath length=$2048 label="Job Path" jobVersion length=$32 label="Job Version" name 
length=$256 label="Parameter Name" label length=$256 label="Parameter Label" type length=$32 label="Parameter Type" defaultValue length=$2048 label="Parameter Default Value" fileVersion length=$32 label="File Version if File Type" includeSubFolders 
length=8 label="Include Container SubFolders" includesSubFolders length=$5 label="FOR INTERNAL PROCESSING ONLY.  WILL BE DROPPED." ;
MPRINT(LSAF_GETJOBPARAMETERS):   rowCount=0;
MPRINT(LSAF_GETJOBPARAMETERS):   declare javaobj srv("com/sas/lsaf/macro/execution/job/JobService") ;
MPRINT(LSAF_GETJOBPARAMETERS):   declare javaobj results("com/sas/lsaf/macro/execution/job/SasJobParametersResult");
MPRINT(LSAF_GETJOBPARAMETERS):   srv.callStaticVoidMethod("getRepositoryJobParameters", "/general/biostat/jobs/gadam_rebuild_adam/prod/jobs/job_collect_generic_var_all.job", "", results) ;
MPRINT(LSAF_GETJOBPARAMETERS):   results.callIntMethod("getReturnCode", returnCode);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getReturnMessage", message);
MPRINT(LSAF_GETJOBPARAMETERS):   logMsgPrefix="NOTE: SAS Life Science Analytics Framework Macro: * ";
MPRINT(LSAF_GETJOBPARAMETERS):   if (returnCode ne 0) then do;
MPRINT(LSAF_GETJOBPARAMETERS):   logMsgPrimary="ERROR: SAS Life Science Analytics Framework Macro:";
MPRINT(LSAF_GETJOBPARAMETERS):   if "" NE "" then logMsg=" Cannot retrieve parameters for job /general/biostat/jobs/gadam_rebuild_adam/prod/jobs/job_collect_generic_var_all.job, version " ;
MPRINT(LSAF_GETJOBPARAMETERS):   else logMsg=" Cannot retrieve parameters for job /general/biostat/jobs/gadam_rebuild_adam/prod/jobs/job_collect_generic_var_all.job" ;
MPRINT(LSAF_GETJOBPARAMETERS):   end;
MPRINT(LSAF_GETJOBPARAMETERS):   else do;
MPRINT(LSAF_GETJOBPARAMETERS):   logMsgPrimary=logMsgPrefix;
MPRINT(LSAF_GETJOBPARAMETERS):   logMsg=" Parameters were returned for job /general/biostat/jobs/gadam_rebuild_adam/prod/jobs/job_collect_generic_var_all.job" ;
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getJobPath", jobPath);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getJobVersion", jobVersion);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callIntMethod("getSize", rowCount);
MPRINT(LSAF_GETJOBPARAMETERS):   do row=0 to rowCount - 1;
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getName", row, name);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getLabel", row, label);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getType", row, type);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getDefaultValue", row, defaultValue);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getFileVersion", row, fileVersion);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getContainerIncludeSubfolders", row, includesSubFolders);
MPRINT(LSAF_GETJOBPARAMETERS):   includeSubFolders=input(includesSubFolders,best.);
MPRINT(LSAF_GETJOBPARAMETERS):   output;
MPRINT(LSAF_GETJOBPARAMETERS):   end;
MPRINT(LSAF_GETJOBPARAMETERS):   end;
MPRINT(LSAF_GETJOBPARAMETERS):   put;
MPRINT(LSAF_GETJOBPARAMETERS):   put logMsgPrimary " " logMsg;
MPRINT(LSAF_GETJOBPARAMETERS):   put logMsgPrefix " " "lsaf_getjobparameters";
MPRINT(LSAF_GETJOBPARAMETERS):   if (rowCount=0) then put logMsgPrefix " No parameters were found.";
MPRINT(LSAF_GETJOBPARAMETERS):   else put logMsgPrefix " " rowCount " records written to data set work.job_Parameters";
MPRINT(LSAF_GETJOBPARAMETERS):   put logMsgPrefix " _lsafMsg_= " message ;
MPRINT(LSAF_GETJOBPARAMETERS):   put logMsgPrefix " _lsafRC_= " returnCode ;
MPRINT(LSAF_GETJOBPARAMETERS):   put;
MPRINT(LSAF_GETJOBPARAMETERS):   call symputx("_lsafRC_", returnCode);
MPRINT(LSAF_GETJOBPARAMETERS):   call symputx("_lsafMsg_", message);
                                                                                                                         The SAS System

MPRINT(LSAF_GETJOBPARAMETERS):   run;


NOTE: SAS Life Science Analytics Framework Macro: *  Parameters were returned for job /general/biostat/jobs/gadam_rebuild_adam/prod/jobs/job_collect_generic_var_all.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_getjobparameters
NOTE: SAS Life Science Analytics Framework Macro: *  4  records written to data set work.job_Parameters
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: The data set WORK.JOB_PARAMETERS has 4 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      

MPRINT(SUBMIT_JOB):  ;
NOTE: The dataset WORK.JOB_PARAMETERS has 4 observations and 8 variables.
MPRINT(SUBMIT_JOB):   ;
MPRINT(SUBMIT_JOB):   *- dataset to specify job parameters (from macro parameters values) -*;
MPRINT(SUBMIT_JOB):   data lsaf_job_params(index=(name));
MPRINT(SUBMIT_JOB):   set work.job_Parameters(rename=(defaultValue = value));
MPRINT(SUBMIT_JOB):   if upcase(name) = "_PARENTJOB_WS_" then do;
MPRINT(SUBMIT_JOB):   if symexist("_SASWS_") and type = "CHARACTER" then value = symget("_SASWS_");
MPRINT(SUBMIT_JOB):   else value = " ";
MPRINT(SUBMIT_JOB):   end;
MPRINT(SUBMIT_JOB):   else if upcase(name) = "_PARENTJOB_WRK_" then do;
MPRINT(SUBMIT_JOB):   value = pathname("WORK", "L");
MPRINT(SUBMIT_JOB):   end;
MPRINT(SUBMIT_JOB):   else if symexist(name) then do;
MPRINT(SUBMIT_JOB):   if symget(name) ^= ' ' then value = symget(name);
MPRINT(SUBMIT_JOB):   end;
MPRINT(SUBMIT_JOB):   new_value = translate(value, ' ', ',;()"''&%');
MPRINT(SUBMIT_JOB):   if new_value ne value then put "NOTE:(SUBMIT_JOB): Special characters may be removed from parameter value:" / @2 "parameter: " name /@2 "old value: " value /@2 "new value: " new_value;
MPRINT(SUBMIT_JOB):   if _n_=1 then put "Not" "ice:(SUBMIT_JOB): Updated Job parameters:";
MPRINT(SUBMIT_JOB):   if type = "FOLDER" then put " - " name @+(-1) "=" value "[" type= @+(-1) ", " includeSubFolders= @+(-1) "]" /;
MPRINT(SUBMIT_JOB):   else if TYPE = "FILE" then put " - " name @+(-1) "=" value "[" type= @+(-1) ", " fileversion= @+(-1) "]" /;
MPRINT(SUBMIT_JOB):   else put " - " name @+(-1) "=" value "[" type= @+(-1) "]" /;
MPRINT(SUBMIT_JOB):   run;

Notice:(SUBMIT_JOB): Updated Job parameters:
 - job_instance=Ngos117Prod_6 [type=CHARACTER]
 - _PARENTJOB_WS_=/lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba [type=CHARACTER]
 - _PARENTJOB_WRK_=/saswork/sas_tmp/SAS_work89DD00193DB6_xar08auv.vsp.sas.com/SAS_work944F00193DB6_xar08auv.vsp.sas.com [type=CHARACTER]
 - USE_SAS_WORKSPACE_MACROS=  [type=CHARACTER]
NOTE: There were 4 observations read from the data set WORK.JOB_PARAMETERS.
NOTE: The data set WORK.LSAF_JOB_PARAMS has 4 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

N_PARAMS=4
MPRINT(SUBMIT_JOB):   data lsaf_job_params(index=(name));
MPRINT(SUBMIT_JOB):   set lsaf_job_params;
MPRINT(SUBMIT_JOB):   by name;
MPRINT(SUBMIT_JOB):   if (not first.name) or (not last.name) then do;
MPRINT(SUBMIT_JOB):   if last.name then action = "(kept)   ";
MPRINT(SUBMIT_JOB):   else action = "(dropped)";
MPRINT(SUBMIT_JOB):   drop action;
                                                                                                                         The SAS System

MPRINT(SUBMIT_JOB):   put "Not" "ice:(SUBMIT_JOB): duplicate parameter " name " = " value @+(3) action;
MPRINT(SUBMIT_JOB):   end;
MPRINT(SUBMIT_JOB):   if last.name;
MPRINT(SUBMIT_JOB):   run;

NOTE: There were 4 observations read from the data set WORK.LSAF_JOB_PARAMS.
NOTE: The data set WORK.LSAF_JOB_PARAMS has 4 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(SUBMIT_JOB):   data _null_;
MPRINT(SUBMIT_JOB):   file print;
MPRINT(SUBMIT_JOB):   set lsaf_job_params(where=(prxmatch('/^(FOLDER|FILE)$/', trim(type))) in=a) lsaf_job_params(where=(prxmatch('/^(FOLDER|FILE)$/', trim(type))=0 and value ^= ' ')) end=last;
MPRINT(SUBMIT_JOB):   if _n_=1 then putlog "=== 2023-02-15T03:17:28 - Submit job: /general/biostat/jobs/gadam_rebuild_adam/prod/jobs/job_collect_generic_var_all.job (with parameters: " @;
MPRINT(SUBMIT_JOB):   _n_a+a;
MPRINT(SUBMIT_JOB):   if _n_-1 = _n_a then do;
MPRINT(SUBMIT_JOB):   putlog / @8 @;
MPRINT(SUBMIT_JOB):   put / @8 @;
MPRINT(SUBMIT_JOB):   end;
MPRINT(SUBMIT_JOB):   if a then putlog / @8 name @+(-1) "=" value ' (' type= includeSubFolders= @+(-1) ')   ' @;
MPRINT(SUBMIT_JOB):   else putlog name @+(-1) "=" value "  " @ ;
MPRINT(SUBMIT_JOB):   if last then putlog @+8 ") ===";
MPRINT(SUBMIT_JOB):   if _n_=1 then put "=== 2023-02-15T03:17:28 - Submit job: /general/biostat/jobs/gadam_rebuild_adam/prod/jobs/job_collect_generic_var_all.job (with parameters: " @;
MPRINT(SUBMIT_JOB):   if a then put / @8 name @+(-1) "=" value ' (' type= includeSubFolders= @+(-1) ')   ' @;
MPRINT(SUBMIT_JOB):   else put name @+(-1) "=" value "  " @ ;
MPRINT(SUBMIT_JOB):   if last then put @+8 ") ===";
MPRINT(SUBMIT_JOB):   run;

=== 2023-02-15T03:17:28 - Submit job: /general/biostat/jobs/gadam_rebuild_adam/prod/jobs/job_collect_generic_var_all.job (with parameters: 
       _PARENTJOB_WRK_=/saswork/sas_tmp/SAS_work89DD00193DB6_xar08auv.vsp.sas.com/SAS_work944F00193DB6_xar08auv.vsp.sas.com   _PARENTJOB_WS_=/lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba   
job_instance=Ngos117Prod_6           ) ===
NOTE: 3 lines were written to file PRINT.
NOTE: There were 0 observations read from the data set WORK.LSAF_JOB_PARAMS.
      WHERE PRXMATCH('/^(FOLDER|FILE)$/', TRIM(type));
NOTE: There were 3 observations read from the data set WORK.LSAF_JOB_PARAMS.
      WHERE (PRXMATCH('/^(FOLDER|FILE)$/', TRIM(type))=0) and (value not = ' ');
NOTE: The DATA step printed page 11.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(LSAF_SUBMITJOB):  ;
NOTE: lsaf_submitjob: Validating dataset lsaf_job_params
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   options nonotes;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   proc datasets library=work nolist;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   delete __SASMacro_submitJobtemp__;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   quit;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   run;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   options nonotes;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   data _null_;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   length message $45 libName $8 dsName $300;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   providedDatasetName=kstrip("lsaf_job_params");
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   dsName="INVALID";
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   dsNameIsValid=0;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   dotCount=countc(providedDatasetName,".");
                                                                                                                         The SAS System

MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   dotPosition=kindexc(providedDatasetName,".");
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   *put dotPosition=;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   if (dotPosition=1 or dotPosition=length(providedDatasetName)) then do;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   message=" Missing either LIBNAME or data set.";
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   GOTO SETVARS;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   end;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   select (dotCount);
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   when (0) dsName=providedDatasetName;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   when (1) do;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   if (dotPosition le 9) then do;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   libName = (ksubstr(providedDatasetName, 1, dotPosition-1));
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   *put libName=;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   dsName = (ksubstr(providedDatasetName, dotPosition+1));
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   end;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   else do;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   message="Libname longer than 8 characters.";
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   GOTO SETVARS;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   end;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   end;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   otherwise do;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   message="Invalid data set name structure.";
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   GOTO SETVARS;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   end;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   end;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   firstchar=ksubstr(kleft(dsName), 1, 1);
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   if (anydigit(firstchar)) then do;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   message="Data set name must start with a character.";
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   GOTO SETVARS;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   end;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   if (length(dsName) > 32) then do;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   message="Data set name longer than 32 characters.";
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   GOTO SETVARS;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   end;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   dsNameIsValid=1;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   SETVARS: call symput("_lsafvaliddsn_", strip(put(dsNameIsValid, best.)));
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   call symput("dsnMsg", message);
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   call symput("specifiedLib", strip(libName));
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   run;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   options NONOTES;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   * CHECK EXISTS: Also getting errors for data set name.;
MPRINT(LSAF_VALIDATE_SASDATASET):  ;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):  ;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   proc sort data=lsaf_job_params out=__SASMacro_submitJobtemp__;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   by name;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   run;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   data _null_;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   set __SASMacro_submitJobtemp__;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   by name;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   if (first.name AND NOT(last.name)) then do;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   call symput("_lsafMsg_", "Input data set has duplicate values for parameter name " || name || ".");
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   STOP;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   end;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   call symput("_lsafRC_", "0");
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   run;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   option notes;
MPRINT(LSAF_SUBMITJOB):  ;
MPRINT(LSAF_SUBMITJOB):   option notes;
MPRINT(LSAF_SUBMITJOB):   data _null_;
                                                                                                                         The SAS System

MPRINT(LSAF_SUBMITJOB):   attrib returnCode length=8 message length=$200 jobSubmissionId length=$525 logMsgPrefix length=$70 logMsgPrimary length=$70 logMsg length=$300 ;
MPRINT(LSAF_SUBMITJOB):   set lsaf_job_params end=eof;
MPRINT(LSAF_SUBMITJOB):   if (_n_ = 1) then do;
MPRINT(LSAF_SUBMITJOB):   declare javaobj params("com/sas/lsaf/macro/execution/job/SasParameterValues");
MPRINT(LSAF_SUBMITJOB):   declare javaobj srv("com/sas/lsaf/macro/execution/jobsubmission/JobSubmissionService");
MPRINT(LSAF_SUBMITJOB):   declare javaobj results("com/sas/lsaf/macro/common/result/Result");
MPRINT(LSAF_SUBMITJOB):   end;
MPRINT(LSAF_SUBMITJOB):   params.callVoidMethod("addValue", kstrip(name), kstrip(value), kstrip(type), kstrip(fileVersion), includeSubFolders);
MPRINT(LSAF_SUBMITJOB):   if (eof);
MPRINT(LSAF_SUBMITJOB):   declare javaobj job("com/sas/lsaf/macro/execution/jobsubmission/SasSubmittableJob", "/general/biostat/jobs/gadam_rebuild_adam/prod/jobs/job_collect_generic_var_all.job", "", params);
MPRINT(LSAF_SUBMITJOB):   srv.callStaticStringMethod("submitRepositoryJob", job, results, jobSubmissionId);
MPRINT(LSAF_SUBMITJOB):   results.callIntMethod("getReturnCode", returnCode);
MPRINT(LSAF_SUBMITJOB):   results.callStringMethod("getReturnMessage", message);
MPRINT(LSAF_SUBMITJOB):   logMsgPrefix="NOTE: SAS Life Science Analytics Framework Macro: * ";
MPRINT(LSAF_SUBMITJOB):   if (returnCode ne 0) then do;
MPRINT(LSAF_SUBMITJOB):   logMsgPrimary="ERROR: SAS Life Science Analytics Framework Macro:";
MPRINT(LSAF_SUBMITJOB):   logMsg=" Cannot submit job /general/biostat/jobs/gadam_rebuild_adam/prod/jobs/job_collect_generic_var_all.job";
MPRINT(LSAF_SUBMITJOB):   end;
MPRINT(LSAF_SUBMITJOB):   else do;
MPRINT(LSAF_SUBMITJOB):   logMsgPrimary=logMsgPrefix;
MPRINT(LSAF_SUBMITJOB):   logMsg=" Submitted job /general/biostat/jobs/gadam_rebuild_adam/prod/jobs/job_collect_generic_var_all.job";
MPRINT(LSAF_SUBMITJOB):   end;
MPRINT(LSAF_SUBMITJOB):   put;
MPRINT(LSAF_SUBMITJOB):   put logMsgPrimary " " logMsg;
MPRINT(LSAF_SUBMITJOB):   put logMsgPrefix " " "lsaf_submitjob";
MPRINT(LSAF_SUBMITJOB):   put logMsgPrefix " _lsafMsg_= " message ;
MPRINT(LSAF_SUBMITJOB):   put logMsgPrefix " _lsafRC_= " returnCode ;
MPRINT(LSAF_SUBMITJOB):   if "lsaf_job_params" = "" then put logMsgPrefix "No job parameters were supplied.";
MPRINT(LSAF_SUBMITJOB):   else put logMsgPrefix "sas_dsname = lsaf_job_params";
MPRINT(LSAF_SUBMITJOB):   put logMsgPrefix "_lsafJobSubmissionId_= " jobSubmissionId;
MPRINT(LSAF_SUBMITJOB):   put;
MPRINT(LSAF_SUBMITJOB):   call symputx("_lsafRC_", returnCode);
MPRINT(LSAF_SUBMITJOB):   call symputx("_lsafMsg_", message);
MPRINT(LSAF_SUBMITJOB):   call symputx("_lsafJobSubmissionId_", strip(jobSubmissionId));
MPRINT(LSAF_SUBMITJOB):   run;


NOTE: SAS Life Science Analytics Framework Macro: *  Submitted job /general/biostat/jobs/gadam_rebuild_adam/prod/jobs/job_collect_generic_var_all.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_submitjob
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: SAS Life Science Analytics Framework Macro: * sas_dsname = lsaf_job_params
NOTE: SAS Life Science Analytics Framework Macro: * _lsafJobSubmissionId_= a0bad325-b1f7-40c3-b7c0-447aa9bc57fe
NOTE: There were 4 observations read from the data set WORK.LSAF_JOB_PARAMS.
NOTE: DATA statement used (Total process time):
      real time           1.35 seconds
      cpu time            0.01 seconds
      

MPRINT(LSAF_SUBMITJOB):   options NONOTES;
MPRINT(SUBMIT_JOB):  ;
MPRINT(SUBMIT_JOB):   *- Job submission succeeded -*;
MPRINT(SUBMIT_JOB):   option nomprint nonotes
Calling %lsaf_getitemid(lsaf_path=/general/biostat/jobs/gadam_rebuild_adam/prod/jobs/job_collect_generic_var_all.job) ...
_LSAFMSG_=Success.  _LSAFRC_=0  _LSAFITEMID_=35810e4b-be5f-4445-a5b3-dc0cc38f147d
Calling %step_lsaf_getjobsubmissioninfos(job_subm_id=a0bad325-b1f7-40c3-b7c0-447aa9bc57fe) ...
Notice: SYSDATASTEPPHASE= IN_DATA_STEP=N
                                                                                                                         The SAS System

Ignoring record: submissionId=30678109-1661-4a87-858f-1bc1b0d581fa jobPath=/general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_lsaf_get_last_sdtm.job jobVersion=0.1 jobId=abcfa448-6829-4513-8bef-3d8418207d45
Ignoring record: submissionId=c4fb4991-9137-4374-8d55-32ed9002f3d8 jobPath=/general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_gadam_ongoing_studies.job jobVersion=0.1 jobId=c762f385-9376-49c8-8cec-d19326e7e18e
Ignoring record: submissionId=f00d2b52-d9f1-4ef1-8922-181d934626e0 jobPath=/general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_gadam_ongoing_studies.job jobVersion=0.1 jobId=c762f385-9376-49c8-8cec-d19326e7e18e
Notice: _LSAFJOBSUBMISSIONID_=a0bad325-b1f7-40c3-b7c0-447aa9bc57fe SESSIONID=53d9e05f-c3e9-46f4-9d5c-24a42e8686ad JOB=/general/biostat/jobs/gadam_rebuild_adam/prod/jobs/job_collect_generic_var_all.job JOBID=35810e4b-be5f-4445-a5b3-dc0cc38f147d
(SUBMIT_JOB): 2023-02-15T03:17:29 - Submitted REPOSITORY Job /general/biostat/jobs/gadam_rebuild_adam/prod/jobs/job_collect_generic_var_all.job          with Submission ID: a0bad325-b1f7-40c3-b7c0-447aa9bc57fe, Status: STARTED
(SUBMIT_JOB): 03:17:29.33 Elapsed: 00:00:02.00 Job Submission Status: STARTED
(SUBMIT_JOB): 03:17:31.88 Elapsed: 00:00:04.54 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:17:34.42 Elapsed: 00:00:07.08 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:17:36.95 Elapsed: 00:00:09.61 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:17:39.48 Elapsed: 00:00:12.15 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:17:42.03 Elapsed: 00:00:14.69 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:17:44.56 Elapsed: 00:00:17.22 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:17:47.08 Elapsed: 00:00:19.75 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:17:49.61 Elapsed: 00:00:22.28 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:17:52.16 Elapsed: 00:00:24.82 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:17:54.69 Elapsed: 00:00:27.36 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:17:57.22 Elapsed: 00:00:29.89 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:17:59.78 Elapsed: 00:00:32.44 Job Submission Status: COMPLETED_SUCCESSFUL
(SUBMIT_JOB): 2023-02-15T03:18:07 - Submitted REPOSITORY job: /general/biostat/jobs/gadam_rebuild_adam/prod/jobs/job_collect_generic_var_all.job has completed with status: COMPLETED_SUCCESSFUL
MPRINT(SUBMIT_JOB):  ;
job_collect_generic_var_all.job: get job status: 0: Success.:       Elapsed: 00:00:39.94       REPOSITORY Job /general/biostat/jobs/gadam_rebuild_adam/prod/jobs/job_collect_generic_var_all.job with Submission ID: a0bad325-b1f7-40c3-b7c0-447aa9bc57fe, 
Status: COMPLETED_SUCCESSFUL
638        
639        %end;
640        
641        
642        %if %qsysfunc(upcase(%superq(pool_sdtm)), $1.) = Y
643        %then %do;
644           %let refresh_pool = &pool_sdtm;
645        
646           %*- Make SDTM pooling jobs within and across indications -*;
647           %submit_job(/general/biostat/jobs/gadam_ongoing_studies/dev/jobs/job_make_sdtm_pool_jobs.job, parent_job_instance = &job_instance);
NUM_JOBS_SPAWNED=7
MACROAPIVER=2.6
MPRINT(SUBMIT_JOB):   proc sql noprint;
MPRINT(SUBMIT_JOB):   drop table work.job_Parameters;
NOTE: Table WORK.JOB_PARAMETERS has been dropped.
MPRINT(SUBMIT_JOB):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

DEBUG:(GEN_JOB_ENV): PRX=43
DEBUG:(GEN_JOB_ENV): prxmatch(43, /general/biostat/jobs/gadam_ongoing_studies/dev/jobs/job_make_sdtm_pool_jobs.job) = 1
DEBUG:(GEN_JOB_ENV): (0) REFPATH=
DEBUG:(GEN_JOB_ENV): (0) REPEVPATH=/lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/biostat/jobs/gadam_ongoing_studies/prod/
DEBUG:(GEN_JOB_ENV): (0) RELREPEVPATH=/general/biostat/jobs/gadam_ongoing_studies/prod/
DEBUG:(GEN_JOB_ENV): (0) _SASFILEPATH_=/general/biostat/jobs/gadam_ongoing_studies/prod/programs/gadam_ongoing_studies.sas
DEBUG:(GEN_JOB_ENV): (0) PROGPATH=/general/biostat/jobs/gadam_ongoing_studies/prod/programs/
DEBUG:(GEN_JOB_ENV): (0) PATH=/general/biostat/jobs/gadam_ongoing_studies/dev/jobs/job_make_sdtm_pool_jobs.job
Setting refpath = &repevpath
DEBUG:(GEN_JOB_ENV): (1) REFPATH=/lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/biostat/jobs/gadam_ongoing_studies/prod/
DEBUG:(GEN_JOB_ENV): (2) REFENV=prod
DEBUG:(GEN_JOB_ENV): (3) REFENV=prod
DEBUG:(F_LSAF_EXISTS) - 2023-02-15T03:18:07 - Iteration: 1: slept = 0, exists = 1
DEBUG:(F_LSAF_EXISTS) - 2023-02-15T03:18:07 - Iteration: 1: slept = 0, exists = 1
DEBUG:(F_LSAF_EXISTS) - 2023-02-15T03:18:08 - Iteration: 1: slept = 0, exists = 1
                                                                                                                         The SAS System

MPRINT(LSAF_EXISTS):  ;
MPRINT(LSAF_EXISTS):   data _null_;
MPRINT(LSAF_EXISTS):   attrib returnCode length=8;
MPRINT(LSAF_EXISTS):   attrib message length=$200;
MPRINT(LSAF_EXISTS):   attrib logMsgPrefix length=$70;
MPRINT(LSAF_EXISTS):   attrib logMsg length=$300;
MPRINT(LSAF_EXISTS):   attrib exists length=3;
MPRINT(LSAF_EXISTS):   attrib logMsgPrimary length=$70;
MPRINT(LSAF_EXISTS):   declare javaobj srv("com/sas/lsaf/macro/content/repository/RepositoryService");
MPRINT(LSAF_EXISTS):   declare javaobj results("com/sas/lsaf/macro/common/result/Result");
MPRINT(LSAF_EXISTS):   srv.callStaticBooleanMethod("exists", "/general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_make_sdtm_pool_jobs.job", results, exists);
MPRINT(LSAF_EXISTS):   results.callIntMethod("getReturnCode", returnCode);
MPRINT(LSAF_EXISTS):   results.callStringMethod("getReturnMessage", message);
MPRINT(LSAF_EXISTS):   logMsgPrefix="NOTE: SAS Life Science Analytics Framework Macro: * ";
MPRINT(LSAF_EXISTS):   if (returnCode ne 0) then do;
MPRINT(LSAF_EXISTS):   logMsgPrimary="ERROR: SAS Life Science Analytics Framework Macro:";
MPRINT(LSAF_EXISTS):   logMsg=" Cannot determine if the item exists: /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_make_sdtm_pool_jobs.job" ;
MPRINT(LSAF_EXISTS):   exists=-1;
MPRINT(LSAF_EXISTS):   end;
MPRINT(LSAF_EXISTS):   else do;
MPRINT(LSAF_EXISTS):   logMsgPrimary=logMsgPrefix;
MPRINT(LSAF_EXISTS):   if (exists) then do;
MPRINT(LSAF_EXISTS):   logMsg=" The item exists: /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_make_sdtm_pool_jobs.job" ;
MPRINT(LSAF_EXISTS):   end;
MPRINT(LSAF_EXISTS):   else do;
MPRINT(LSAF_EXISTS):   logMsg=" The item does not exist: /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_make_sdtm_pool_jobs.job" ;
MPRINT(LSAF_EXISTS):   end;
MPRINT(LSAF_EXISTS):   end;
MPRINT(LSAF_EXISTS):   put;
MPRINT(LSAF_EXISTS):   put logMsgPrimary " " logMsg;
MPRINT(LSAF_EXISTS):   put logMsgPrefix " " "lsaf_exists";
MPRINT(LSAF_EXISTS):   put logMsgPrefix " _lsafMsg_= " message;
MPRINT(LSAF_EXISTS):   put logMsgPrefix " _lsafRC_= " returnCode;
MPRINT(LSAF_EXISTS):   put logMsgPrefix " _lsafExists_= " exists;
MPRINT(LSAF_EXISTS):   put;
MPRINT(LSAF_EXISTS):   call symputx("_lsafRC_", returnCode);
MPRINT(LSAF_EXISTS):   call symputx("_lsafMsg_", message);
MPRINT(LSAF_EXISTS):   call symputx("_lsafExists_", exists) ;
MPRINT(LSAF_EXISTS):   run;


NOTE: SAS Life Science Analytics Framework Macro: *  The item exists: /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_make_sdtm_pool_jobs.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_exists
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafExists_= 1
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

MPRINT(SUBMIT_JOB):  ;
Notice:(SUBMIT_JOB): LSAF Job Path exists: /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_make_sdtm_pool_jobs.job.
MPRINT(SUBMIT_JOB):   proc format;
MPRINT(SUBMIT_JOB):   value $jobabbr "job_gadam_ongoing_studies.job"= "gos" "job_studies_status.job"= "ss" "job_gadam_sdtm_key_core_vars.job"= "gskcv" "job_unzip_sdtm_sources.job"= "uss" "job_zip_extract_files.job"= "zef" "job_lsaf_get_last_sdtm.job"= 
"lgls" "setup_reporting_event_folder.job"= "sref" "job_gadam_refresh_sdtm_last.job"= "grsl" "job_gadam_update_refresh_info.job"= "guri" "convert_definetosas.job"= "cdts" "job_gadam_studysetup.job"= "gss" "job_gadam_rebuild_adam.job"= "gra" "job_adAAA" - 
"job_adzzz"= "adx" "job_qcstudyadams.job"= "qcsa" "job_qc_gadam_vs_study.job"= "qcgvs" "job_qc_gadam_vs_study-overview.job"= "qcgvso" "job_check_and_load.job"= "cal" "job_tAAA" - "job_tzzz"= "txx" "job_gadam_qc_overviews.job"= "gqco" 
"job_make_sdtm_pool_jobs.job"= "mspj" "job_lsaf_pool_last_sdtm.job"= "lpls" "sdtm_pool-AAA" - "sdtm_pool-zzz"= "pci" "job_gadam_refresh_sdtm_overview.job"= "grso" "getdata.job"= "gd" OTHER = "***" ;
                                                                                                                         The SAS System

NOTE: Format $JOBABBR is already on the library WORK.FORMATS.
NOTE: Format $JOBABBR has been output.
MPRINT(SUBMIT_JOB):   run;

NOTE: PROCEDURE FORMAT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SUBMIT_JOB):   quit;
job_instance=>Ngos117Prod_7<
MPRINT(LSAF_GETJOBPARAMETERS):  ;
MPRINT(LSAF_GETJOBPARAMETERS):   data work.job_Parameters (label="Created by LSAF_GETJOBPARAMETERS" KEEP=jobPath jobVersion name label type defaultValue fileVersion includeSubFolders );
MPRINT(LSAF_GETJOBPARAMETERS):   attrib returnCode length=8 message length=$200 logMsgPrefix length=$70 logMsgPrimary length=$70 logMsg length=$300 rowCount length=8 jobPath length=$2048 label="Job Path" jobVersion length=$32 label="Job Version" name 
length=$256 label="Parameter Name" label length=$256 label="Parameter Label" type length=$32 label="Parameter Type" defaultValue length=$2048 label="Parameter Default Value" fileVersion length=$32 label="File Version if File Type" includeSubFolders 
length=8 label="Include Container SubFolders" includesSubFolders length=$5 label="FOR INTERNAL PROCESSING ONLY.  WILL BE DROPPED." ;
MPRINT(LSAF_GETJOBPARAMETERS):   rowCount=0;
MPRINT(LSAF_GETJOBPARAMETERS):   declare javaobj srv("com/sas/lsaf/macro/execution/job/JobService") ;
MPRINT(LSAF_GETJOBPARAMETERS):   declare javaobj results("com/sas/lsaf/macro/execution/job/SasJobParametersResult");
MPRINT(LSAF_GETJOBPARAMETERS):   srv.callStaticVoidMethod("getRepositoryJobParameters", "/general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_make_sdtm_pool_jobs.job", "", results) ;
MPRINT(LSAF_GETJOBPARAMETERS):   results.callIntMethod("getReturnCode", returnCode);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getReturnMessage", message);
MPRINT(LSAF_GETJOBPARAMETERS):   logMsgPrefix="NOTE: SAS Life Science Analytics Framework Macro: * ";
MPRINT(LSAF_GETJOBPARAMETERS):   if (returnCode ne 0) then do;
MPRINT(LSAF_GETJOBPARAMETERS):   logMsgPrimary="ERROR: SAS Life Science Analytics Framework Macro:";
MPRINT(LSAF_GETJOBPARAMETERS):   if "" NE "" then logMsg=" Cannot retrieve parameters for job /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_make_sdtm_pool_jobs.job, version " ;
MPRINT(LSAF_GETJOBPARAMETERS):   else logMsg=" Cannot retrieve parameters for job /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_make_sdtm_pool_jobs.job" ;
MPRINT(LSAF_GETJOBPARAMETERS):   end;
MPRINT(LSAF_GETJOBPARAMETERS):   else do;
MPRINT(LSAF_GETJOBPARAMETERS):   logMsgPrimary=logMsgPrefix;
MPRINT(LSAF_GETJOBPARAMETERS):   logMsg=" Parameters were returned for job /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_make_sdtm_pool_jobs.job" ;
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getJobPath", jobPath);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getJobVersion", jobVersion);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callIntMethod("getSize", rowCount);
MPRINT(LSAF_GETJOBPARAMETERS):   do row=0 to rowCount - 1;
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getName", row, name);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getLabel", row, label);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getType", row, type);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getDefaultValue", row, defaultValue);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getFileVersion", row, fileVersion);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getContainerIncludeSubfolders", row, includesSubFolders);
MPRINT(LSAF_GETJOBPARAMETERS):   includeSubFolders=input(includesSubFolders,best.);
MPRINT(LSAF_GETJOBPARAMETERS):   output;
MPRINT(LSAF_GETJOBPARAMETERS):   end;
MPRINT(LSAF_GETJOBPARAMETERS):   end;
MPRINT(LSAF_GETJOBPARAMETERS):   put;
MPRINT(LSAF_GETJOBPARAMETERS):   put logMsgPrimary " " logMsg;
MPRINT(LSAF_GETJOBPARAMETERS):   put logMsgPrefix " " "lsaf_getjobparameters";
MPRINT(LSAF_GETJOBPARAMETERS):   if (rowCount=0) then put logMsgPrefix " No parameters were found.";
MPRINT(LSAF_GETJOBPARAMETERS):   else put logMsgPrefix " " rowCount " records written to data set work.job_Parameters";
MPRINT(LSAF_GETJOBPARAMETERS):   put logMsgPrefix " _lsafMsg_= " message ;
MPRINT(LSAF_GETJOBPARAMETERS):   put logMsgPrefix " _lsafRC_= " returnCode ;
MPRINT(LSAF_GETJOBPARAMETERS):   put;
MPRINT(LSAF_GETJOBPARAMETERS):   call symputx("_lsafRC_", returnCode);
MPRINT(LSAF_GETJOBPARAMETERS):   call symputx("_lsafMsg_", message);
MPRINT(LSAF_GETJOBPARAMETERS):   run;

                                                                                                                         The SAS System

NOTE: SAS Life Science Analytics Framework Macro: *  Parameters were returned for job /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_make_sdtm_pool_jobs.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_getjobparameters
NOTE: SAS Life Science Analytics Framework Macro: *  15  records written to data set work.job_Parameters
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: The data set WORK.JOB_PARAMETERS has 15 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.02 seconds
      

MPRINT(SUBMIT_JOB):  ;
NOTE: The dataset WORK.JOB_PARAMETERS has 15 observations and 8 variables.
MPRINT(SUBMIT_JOB):   ;
MPRINT(SUBMIT_JOB):   *- dataset to specify job parameters (from macro parameters values) -*;
MPRINT(SUBMIT_JOB):   data lsaf_job_params(index=(name));
MPRINT(SUBMIT_JOB):   set work.job_Parameters(rename=(defaultValue = value));
MPRINT(SUBMIT_JOB):   if upcase(name) = "_PARENTJOB_WS_" then do;
MPRINT(SUBMIT_JOB):   if symexist("_SASWS_") and type = "CHARACTER" then value = symget("_SASWS_");
MPRINT(SUBMIT_JOB):   else value = " ";
MPRINT(SUBMIT_JOB):   end;
MPRINT(SUBMIT_JOB):   else if upcase(name) = "_PARENTJOB_WRK_" then do;
MPRINT(SUBMIT_JOB):   value = pathname("WORK", "L");
MPRINT(SUBMIT_JOB):   end;
MPRINT(SUBMIT_JOB):   else if symexist(name) then do;
MPRINT(SUBMIT_JOB):   if symget(name) ^= ' ' then value = symget(name);
MPRINT(SUBMIT_JOB):   end;
MPRINT(SUBMIT_JOB):   new_value = translate(value, ' ', ',;()"''&%');
MPRINT(SUBMIT_JOB):   if new_value ne value then put "NOTE:(SUBMIT_JOB): Special characters may be removed from parameter value:" / @2 "parameter: " name /@2 "old value: " value /@2 "new value: " new_value;
MPRINT(SUBMIT_JOB):   if _n_=1 then put "Not" "ice:(SUBMIT_JOB): Updated Job parameters:";
MPRINT(SUBMIT_JOB):   if type = "FOLDER" then put " - " name @+(-1) "=" value "[" type= @+(-1) ", " includeSubFolders= @+(-1) "]" /;
MPRINT(SUBMIT_JOB):   else if TYPE = "FILE" then put " - " name @+(-1) "=" value "[" type= @+(-1) ", " fileversion= @+(-1) "]" /;
MPRINT(SUBMIT_JOB):   else put " - " name @+(-1) "=" value "[" type= @+(-1) "]" /;
MPRINT(SUBMIT_JOB):   run;

Notice:(SUBMIT_JOB): Updated Job parameters:
 - create_folder=Y [type=CHARACTER]
 - create_gadam_folder=Y [type=CHARACTER]
 - setup_gadam_folder=N [type=CHARACTER]
 - gadam_files_source=/general/biostat/gadam [type=CHARACTER]
 - run_gadam_tables=Y [type=CHARACTER]
 - force=N [type=CHARACTER]
 - mock=N [type=CHARACTER]
 - wait=Y [type=CHARACTER]
 - compounds=argx-117 [type=CHARACTER]
 - indications=  [type=CHARACTER]
 - studies=  [type=CHARACTER]
 - job_instance=Ngos117Prod_7 [type=CHARACTER]
 - _PARENTJOB_WS_=/lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba [type=CHARACTER]
 - _PARENTJOB_WRK_=/saswork/sas_tmp/SAS_work89DD00193DB6_xar08auv.vsp.sas.com/SAS_work944F00193DB6_xar08auv.vsp.sas.com [type=CHARACTER]
 - USE_SAS_WORKSPACE_MACROS=  [type=CHARACTER]
NOTE: There were 15 observations read from the data set WORK.JOB_PARAMETERS.
NOTE: The data set WORK.LSAF_JOB_PARAMS has 15 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

                                                                                                                         The SAS System

N_PARAMS=15
MPRINT(SUBMIT_JOB):   data lsaf_job_params(index=(name));
MPRINT(SUBMIT_JOB):   set lsaf_job_params;
MPRINT(SUBMIT_JOB):   by name;
MPRINT(SUBMIT_JOB):   if (not first.name) or (not last.name) then do;
MPRINT(SUBMIT_JOB):   if last.name then action = "(kept)   ";
MPRINT(SUBMIT_JOB):   else action = "(dropped)";
MPRINT(SUBMIT_JOB):   drop action;
MPRINT(SUBMIT_JOB):   put "Not" "ice:(SUBMIT_JOB): duplicate parameter " name " = " value @+(3) action;
MPRINT(SUBMIT_JOB):   end;
MPRINT(SUBMIT_JOB):   if last.name;
MPRINT(SUBMIT_JOB):   run;

NOTE: There were 15 observations read from the data set WORK.LSAF_JOB_PARAMS.
NOTE: The data set WORK.LSAF_JOB_PARAMS has 15 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SUBMIT_JOB):   data _null_;
MPRINT(SUBMIT_JOB):   file print;
MPRINT(SUBMIT_JOB):   set lsaf_job_params(where=(prxmatch('/^(FOLDER|FILE)$/', trim(type))) in=a) lsaf_job_params(where=(prxmatch('/^(FOLDER|FILE)$/', trim(type))=0 and value ^= ' ')) end=last;
MPRINT(SUBMIT_JOB):   if _n_=1 then putlog "=== 2023-02-15T03:18:08 - Submit job: /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_make_sdtm_pool_jobs.job (with parameters: " @;
MPRINT(SUBMIT_JOB):   _n_a+a;
MPRINT(SUBMIT_JOB):   if _n_-1 = _n_a then do;
MPRINT(SUBMIT_JOB):   putlog / @8 @;
MPRINT(SUBMIT_JOB):   put / @8 @;
MPRINT(SUBMIT_JOB):   end;
MPRINT(SUBMIT_JOB):   if a then putlog / @8 name @+(-1) "=" value ' (' type= includeSubFolders= @+(-1) ')   ' @;
MPRINT(SUBMIT_JOB):   else putlog name @+(-1) "=" value "  " @ ;
MPRINT(SUBMIT_JOB):   if last then putlog @+8 ") ===";
MPRINT(SUBMIT_JOB):   if _n_=1 then put "=== 2023-02-15T03:18:08 - Submit job: /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_make_sdtm_pool_jobs.job (with parameters: " @;
MPRINT(SUBMIT_JOB):   if a then put / @8 name @+(-1) "=" value ' (' type= includeSubFolders= @+(-1) ')   ' @;
MPRINT(SUBMIT_JOB):   else put name @+(-1) "=" value "  " @ ;
MPRINT(SUBMIT_JOB):   if last then put @+8 ") ===";
MPRINT(SUBMIT_JOB):   run;

=== 2023-02-15T03:18:08 - Submit job: /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_make_sdtm_pool_jobs.job (with parameters: 
       _PARENTJOB_WRK_=/saswork/sas_tmp/SAS_work89DD00193DB6_xar08auv.vsp.sas.com/SAS_work944F00193DB6_xar08auv.vsp.sas.com   _PARENTJOB_WS_=/lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba   compounds
=argx-117   create_folder=Y   create_gadam_folder=Y   force=N   gadam_files_source=/general/biostat/gadam   job_instance=Ngos117Prod_7   mock=N   run_gadam_tables=Y   setup_gadam_folder=N   wait=Y           ) ===
NOTE: 3 lines were written to file PRINT.
NOTE: There were 0 observations read from the data set WORK.LSAF_JOB_PARAMS.
      WHERE PRXMATCH('/^(FOLDER|FILE)$/', TRIM(type));
NOTE: There were 12 observations read from the data set WORK.LSAF_JOB_PARAMS.
      WHERE (PRXMATCH('/^(FOLDER|FILE)$/', TRIM(type))=0) and (value not = ' ');
NOTE: The DATA step printed page 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(LSAF_SUBMITJOB):  ;
NOTE: lsaf_submitjob: Validating dataset lsaf_job_params
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   options nonotes;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   proc datasets library=work nolist;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   delete __SASMacro_submitJobtemp__;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   quit;
                                                                                                                         The SAS System

MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   run;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   options nonotes;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   data _null_;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   length message $45 libName $8 dsName $300;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   providedDatasetName=kstrip("lsaf_job_params");
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   dsName="INVALID";
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   dsNameIsValid=0;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   dotCount=countc(providedDatasetName,".");
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   dotPosition=kindexc(providedDatasetName,".");
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   *put dotPosition=;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   if (dotPosition=1 or dotPosition=length(providedDatasetName)) then do;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   message=" Missing either LIBNAME or data set.";
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   GOTO SETVARS;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   end;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   select (dotCount);
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   when (0) dsName=providedDatasetName;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   when (1) do;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   if (dotPosition le 9) then do;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   libName = (ksubstr(providedDatasetName, 1, dotPosition-1));
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   *put libName=;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   dsName = (ksubstr(providedDatasetName, dotPosition+1));
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   end;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   else do;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   message="Libname longer than 8 characters.";
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   GOTO SETVARS;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   end;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   end;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   otherwise do;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   message="Invalid data set name structure.";
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   GOTO SETVARS;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   end;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   end;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   firstchar=ksubstr(kleft(dsName), 1, 1);
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   if (anydigit(firstchar)) then do;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   message="Data set name must start with a character.";
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   GOTO SETVARS;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   end;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   if (length(dsName) > 32) then do;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   message="Data set name longer than 32 characters.";
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   GOTO SETVARS;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   end;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   dsNameIsValid=1;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   SETVARS: call symput("_lsafvaliddsn_", strip(put(dsNameIsValid, best.)));
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   call symput("dsnMsg", message);
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   call symput("specifiedLib", strip(libName));
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   run;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   options NONOTES;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   * CHECK EXISTS: Also getting errors for data set name.;
MPRINT(LSAF_VALIDATE_SASDATASET):  ;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):  ;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   proc sort data=lsaf_job_params out=__SASMacro_submitJobtemp__;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   by name;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   run;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   data _null_;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   set __SASMacro_submitJobtemp__;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   by name;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   if (first.name AND NOT(last.name)) then do;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   call symput("_lsafMsg_", "Input data set has duplicate values for parameter name " || name || ".");
                                                                                                                         The SAS System

MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   STOP;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   end;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   call symput("_lsafRC_", "0");
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   run;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   option notes;
MPRINT(LSAF_SUBMITJOB):  ;
MPRINT(LSAF_SUBMITJOB):   option notes;
MPRINT(LSAF_SUBMITJOB):   data _null_;
MPRINT(LSAF_SUBMITJOB):   attrib returnCode length=8 message length=$200 jobSubmissionId length=$525 logMsgPrefix length=$70 logMsgPrimary length=$70 logMsg length=$300 ;
MPRINT(LSAF_SUBMITJOB):   set lsaf_job_params end=eof;
MPRINT(LSAF_SUBMITJOB):   if (_n_ = 1) then do;
MPRINT(LSAF_SUBMITJOB):   declare javaobj params("com/sas/lsaf/macro/execution/job/SasParameterValues");
MPRINT(LSAF_SUBMITJOB):   declare javaobj srv("com/sas/lsaf/macro/execution/jobsubmission/JobSubmissionService");
MPRINT(LSAF_SUBMITJOB):   declare javaobj results("com/sas/lsaf/macro/common/result/Result");
MPRINT(LSAF_SUBMITJOB):   end;
MPRINT(LSAF_SUBMITJOB):   params.callVoidMethod("addValue", kstrip(name), kstrip(value), kstrip(type), kstrip(fileVersion), includeSubFolders);
MPRINT(LSAF_SUBMITJOB):   if (eof);
MPRINT(LSAF_SUBMITJOB):   declare javaobj job("com/sas/lsaf/macro/execution/jobsubmission/SasSubmittableJob", "/general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_make_sdtm_pool_jobs.job", "", params);
MPRINT(LSAF_SUBMITJOB):   srv.callStaticStringMethod("submitRepositoryJob", job, results, jobSubmissionId);
MPRINT(LSAF_SUBMITJOB):   results.callIntMethod("getReturnCode", returnCode);
MPRINT(LSAF_SUBMITJOB):   results.callStringMethod("getReturnMessage", message);
MPRINT(LSAF_SUBMITJOB):   logMsgPrefix="NOTE: SAS Life Science Analytics Framework Macro: * ";
MPRINT(LSAF_SUBMITJOB):   if (returnCode ne 0) then do;
MPRINT(LSAF_SUBMITJOB):   logMsgPrimary="ERROR: SAS Life Science Analytics Framework Macro:";
MPRINT(LSAF_SUBMITJOB):   logMsg=" Cannot submit job /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_make_sdtm_pool_jobs.job";
MPRINT(LSAF_SUBMITJOB):   end;
MPRINT(LSAF_SUBMITJOB):   else do;
MPRINT(LSAF_SUBMITJOB):   logMsgPrimary=logMsgPrefix;
MPRINT(LSAF_SUBMITJOB):   logMsg=" Submitted job /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_make_sdtm_pool_jobs.job";
MPRINT(LSAF_SUBMITJOB):   end;
MPRINT(LSAF_SUBMITJOB):   put;
MPRINT(LSAF_SUBMITJOB):   put logMsgPrimary " " logMsg;
MPRINT(LSAF_SUBMITJOB):   put logMsgPrefix " " "lsaf_submitjob";
MPRINT(LSAF_SUBMITJOB):   put logMsgPrefix " _lsafMsg_= " message ;
MPRINT(LSAF_SUBMITJOB):   put logMsgPrefix " _lsafRC_= " returnCode ;
MPRINT(LSAF_SUBMITJOB):   if "lsaf_job_params" = "" then put logMsgPrefix "No job parameters were supplied.";
MPRINT(LSAF_SUBMITJOB):   else put logMsgPrefix "sas_dsname = lsaf_job_params";
MPRINT(LSAF_SUBMITJOB):   put logMsgPrefix "_lsafJobSubmissionId_= " jobSubmissionId;
MPRINT(LSAF_SUBMITJOB):   put;
MPRINT(LSAF_SUBMITJOB):   call symputx("_lsafRC_", returnCode);
MPRINT(LSAF_SUBMITJOB):   call symputx("_lsafMsg_", message);
MPRINT(LSAF_SUBMITJOB):   call symputx("_lsafJobSubmissionId_", strip(jobSubmissionId));
MPRINT(LSAF_SUBMITJOB):   run;


NOTE: SAS Life Science Analytics Framework Macro: *  Submitted job /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_make_sdtm_pool_jobs.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_submitjob
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: SAS Life Science Analytics Framework Macro: * sas_dsname = lsaf_job_params
NOTE: SAS Life Science Analytics Framework Macro: * _lsafJobSubmissionId_= 06e79e70-8091-4608-b26b-d8aad0a9ae3a
NOTE: There were 15 observations read from the data set WORK.LSAF_JOB_PARAMS.
NOTE: DATA statement used (Total process time):
      real time           1.56 seconds
      cpu time            0.01 seconds
      

MPRINT(LSAF_SUBMITJOB):   options NONOTES;
                                                                                                                         The SAS System

MPRINT(SUBMIT_JOB):  ;
MPRINT(SUBMIT_JOB):   *- Job submission succeeded -*;
MPRINT(SUBMIT_JOB):   option nomprint nonotes
Calling %lsaf_getitemid(lsaf_path=/general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_make_sdtm_pool_jobs.job) ...
_LSAFMSG_=Success.  _LSAFRC_=0  _LSAFITEMID_=25e6f5ae-156b-44c7-8533-b7f3964c8eb1
Calling %step_lsaf_getjobsubmissioninfos(job_subm_id=06e79e70-8091-4608-b26b-d8aad0a9ae3a) ...
Notice: SYSDATASTEPPHASE= IN_DATA_STEP=N
Ignoring record: submissionId=30678109-1661-4a87-858f-1bc1b0d581fa jobPath=/general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_lsaf_get_last_sdtm.job jobVersion=0.1 jobId=abcfa448-6829-4513-8bef-3d8418207d45
Ignoring record: submissionId=c4fb4991-9137-4374-8d55-32ed9002f3d8 jobPath=/general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_gadam_ongoing_studies.job jobVersion=0.1 jobId=c762f385-9376-49c8-8cec-d19326e7e18e
Ignoring record: submissionId=f00d2b52-d9f1-4ef1-8922-181d934626e0 jobPath=/general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_gadam_ongoing_studies.job jobVersion=0.1 jobId=c762f385-9376-49c8-8cec-d19326e7e18e
Ignoring record: submissionId=41a2d679-1518-4419-989f-80abf8612c52 jobPath=/general/biostat/jobs/gadam_rebuild_adam/prod/jobs/job_gadam_rebuild_adam.job jobVersion=  jobId=02b06e4d-7777-4a59-b2f9-2fc165603216
Notice: _LSAFJOBSUBMISSIONID_=06e79e70-8091-4608-b26b-d8aad0a9ae3a SESSIONID=9d2896c5-086d-4527-abdf-3d0f2eb4b413 JOB=/general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_make_sdtm_pool_jobs.job JOBID=25e6f5ae-156b-44c7-8533-b7f3964c8eb1
(SUBMIT_JOB): 2023-02-15T03:18:10 - Submitted REPOSITORY Job /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_make_sdtm_pool_jobs.job          with Submission ID: 06e79e70-8091-4608-b26b-d8aad0a9ae3a, Status: STARTED
(SUBMIT_JOB): 03:18:09.72 Elapsed: 00:00:02.44 Job Submission Status: STARTED
(SUBMIT_JOB): 03:18:12.25 Elapsed: 00:00:04.97 Job Submission Status: STARTED
(SUBMIT_JOB): 03:18:14.78 Elapsed: 00:00:07.50 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:18:17.31 Elapsed: 00:00:10.03 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:18:19.84 Elapsed: 00:00:12.56 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:18:22.38 Elapsed: 00:00:15.09 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:18:24.91 Elapsed: 00:00:17.62 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:18:27.44 Elapsed: 00:00:20.15 Job Submission Status: COMPLETED_SUCCESSFUL
(SUBMIT_JOB): 2023-02-15T03:18:30 - Submitted REPOSITORY job: /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_make_sdtm_pool_jobs.job has completed with status: COMPLETED_SUCCESSFUL
MPRINT(SUBMIT_JOB):  ;
job_make_sdtm_pool_jobs.job: get job status: 0: Success.:       Elapsed: 00:00:22.65       REPOSITORY Job /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_make_sdtm_pool_jobs.job with Submission ID: 06e79e70-8091-4608-b26b-d8aad0a9ae3a, Status: 
COMPLETED_SUCCESSFUL
648        
649           %*- run jobs to pool sdtm_last data within and across indications -*;
650           %submit_job(/general/biostat/jobs/gadam_ongoing_studies/dev/jobs/job_lsaf_pool_last_sdtm.job, parent_job_instance = &job_instance);
NUM_JOBS_SPAWNED=8
MACROAPIVER=2.6
MPRINT(SUBMIT_JOB):   proc sql noprint;
MPRINT(SUBMIT_JOB):   drop table work.job_Parameters;
NOTE: Table WORK.JOB_PARAMETERS has been dropped.
MPRINT(SUBMIT_JOB):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

DEBUG:(GEN_JOB_ENV): PRX=50
DEBUG:(GEN_JOB_ENV): prxmatch(50, /general/biostat/jobs/gadam_ongoing_studies/dev/jobs/job_lsaf_pool_last_sdtm.job) = 1
DEBUG:(GEN_JOB_ENV): (0) REFPATH=
DEBUG:(GEN_JOB_ENV): (0) REPEVPATH=/lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/biostat/jobs/gadam_ongoing_studies/prod/
DEBUG:(GEN_JOB_ENV): (0) RELREPEVPATH=/general/biostat/jobs/gadam_ongoing_studies/prod/
DEBUG:(GEN_JOB_ENV): (0) _SASFILEPATH_=/general/biostat/jobs/gadam_ongoing_studies/prod/programs/gadam_ongoing_studies.sas
DEBUG:(GEN_JOB_ENV): (0) PROGPATH=/general/biostat/jobs/gadam_ongoing_studies/prod/programs/
DEBUG:(GEN_JOB_ENV): (0) PATH=/general/biostat/jobs/gadam_ongoing_studies/dev/jobs/job_lsaf_pool_last_sdtm.job
Setting refpath = &repevpath
DEBUG:(GEN_JOB_ENV): (1) REFPATH=/lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/biostat/jobs/gadam_ongoing_studies/prod/
DEBUG:(GEN_JOB_ENV): (2) REFENV=prod
DEBUG:(GEN_JOB_ENV): (3) REFENV=prod
DEBUG:(F_LSAF_EXISTS) - 2023-02-15T03:18:30 - Iteration: 1: slept = 0, exists = 1
DEBUG:(F_LSAF_EXISTS) - 2023-02-15T03:18:30 - Iteration: 1: slept = 0, exists = 1
DEBUG:(F_LSAF_EXISTS) - 2023-02-15T03:18:30 - Iteration: 1: slept = 0, exists = 1
MPRINT(LSAF_EXISTS):  ;
MPRINT(LSAF_EXISTS):   data _null_;
MPRINT(LSAF_EXISTS):   attrib returnCode length=8;
                                                                                                                         The SAS System

MPRINT(LSAF_EXISTS):   attrib message length=$200;
MPRINT(LSAF_EXISTS):   attrib logMsgPrefix length=$70;
MPRINT(LSAF_EXISTS):   attrib logMsg length=$300;
MPRINT(LSAF_EXISTS):   attrib exists length=3;
MPRINT(LSAF_EXISTS):   attrib logMsgPrimary length=$70;
MPRINT(LSAF_EXISTS):   declare javaobj srv("com/sas/lsaf/macro/content/repository/RepositoryService");
MPRINT(LSAF_EXISTS):   declare javaobj results("com/sas/lsaf/macro/common/result/Result");
MPRINT(LSAF_EXISTS):   srv.callStaticBooleanMethod("exists", "/general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_lsaf_pool_last_sdtm.job", results, exists);
MPRINT(LSAF_EXISTS):   results.callIntMethod("getReturnCode", returnCode);
MPRINT(LSAF_EXISTS):   results.callStringMethod("getReturnMessage", message);
MPRINT(LSAF_EXISTS):   logMsgPrefix="NOTE: SAS Life Science Analytics Framework Macro: * ";
MPRINT(LSAF_EXISTS):   if (returnCode ne 0) then do;
MPRINT(LSAF_EXISTS):   logMsgPrimary="ERROR: SAS Life Science Analytics Framework Macro:";
MPRINT(LSAF_EXISTS):   logMsg=" Cannot determine if the item exists: /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_lsaf_pool_last_sdtm.job" ;
MPRINT(LSAF_EXISTS):   exists=-1;
MPRINT(LSAF_EXISTS):   end;
MPRINT(LSAF_EXISTS):   else do;
MPRINT(LSAF_EXISTS):   logMsgPrimary=logMsgPrefix;
MPRINT(LSAF_EXISTS):   if (exists) then do;
MPRINT(LSAF_EXISTS):   logMsg=" The item exists: /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_lsaf_pool_last_sdtm.job" ;
MPRINT(LSAF_EXISTS):   end;
MPRINT(LSAF_EXISTS):   else do;
MPRINT(LSAF_EXISTS):   logMsg=" The item does not exist: /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_lsaf_pool_last_sdtm.job" ;
MPRINT(LSAF_EXISTS):   end;
MPRINT(LSAF_EXISTS):   end;
MPRINT(LSAF_EXISTS):   put;
MPRINT(LSAF_EXISTS):   put logMsgPrimary " " logMsg;
MPRINT(LSAF_EXISTS):   put logMsgPrefix " " "lsaf_exists";
MPRINT(LSAF_EXISTS):   put logMsgPrefix " _lsafMsg_= " message;
MPRINT(LSAF_EXISTS):   put logMsgPrefix " _lsafRC_= " returnCode;
MPRINT(LSAF_EXISTS):   put logMsgPrefix " _lsafExists_= " exists;
MPRINT(LSAF_EXISTS):   put;
MPRINT(LSAF_EXISTS):   call symputx("_lsafRC_", returnCode);
MPRINT(LSAF_EXISTS):   call symputx("_lsafMsg_", message);
MPRINT(LSAF_EXISTS):   call symputx("_lsafExists_", exists) ;
MPRINT(LSAF_EXISTS):   run;


NOTE: SAS Life Science Analytics Framework Macro: *  The item exists: /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_lsaf_pool_last_sdtm.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_exists
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafExists_= 1
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(SUBMIT_JOB):  ;
Notice:(SUBMIT_JOB): LSAF Job Path exists: /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_lsaf_pool_last_sdtm.job.
MPRINT(SUBMIT_JOB):   proc format;
MPRINT(SUBMIT_JOB):   value $jobabbr "job_gadam_ongoing_studies.job"= "gos" "job_studies_status.job"= "ss" "job_gadam_sdtm_key_core_vars.job"= "gskcv" "job_unzip_sdtm_sources.job"= "uss" "job_zip_extract_files.job"= "zef" "job_lsaf_get_last_sdtm.job"= 
"lgls" "setup_reporting_event_folder.job"= "sref" "job_gadam_refresh_sdtm_last.job"= "grsl" "job_gadam_update_refresh_info.job"= "guri" "convert_definetosas.job"= "cdts" "job_gadam_studysetup.job"= "gss" "job_gadam_rebuild_adam.job"= "gra" "job_adAAA" - 
"job_adzzz"= "adx" "job_qcstudyadams.job"= "qcsa" "job_qc_gadam_vs_study.job"= "qcgvs" "job_qc_gadam_vs_study-overview.job"= "qcgvso" "job_check_and_load.job"= "cal" "job_tAAA" - "job_tzzz"= "txx" "job_gadam_qc_overviews.job"= "gqco" 
"job_make_sdtm_pool_jobs.job"= "mspj" "job_lsaf_pool_last_sdtm.job"= "lpls" "sdtm_pool-AAA" - "sdtm_pool-zzz"= "pci" "job_gadam_refresh_sdtm_overview.job"= "grso" "getdata.job"= "gd" OTHER = "***" ;
NOTE: Format $JOBABBR is already on the library WORK.FORMATS.
NOTE: Format $JOBABBR has been output.
MPRINT(SUBMIT_JOB):   run;
                                                                                                                         The SAS System


NOTE: PROCEDURE FORMAT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SUBMIT_JOB):   quit;
job_instance=>Ngos117Prod_8<
MPRINT(LSAF_GETJOBPARAMETERS):  ;
MPRINT(LSAF_GETJOBPARAMETERS):   data work.job_Parameters (label="Created by LSAF_GETJOBPARAMETERS" KEEP=jobPath jobVersion name label type defaultValue fileVersion includeSubFolders );
MPRINT(LSAF_GETJOBPARAMETERS):   attrib returnCode length=8 message length=$200 logMsgPrefix length=$70 logMsgPrimary length=$70 logMsg length=$300 rowCount length=8 jobPath length=$2048 label="Job Path" jobVersion length=$32 label="Job Version" name 
length=$256 label="Parameter Name" label length=$256 label="Parameter Label" type length=$32 label="Parameter Type" defaultValue length=$2048 label="Parameter Default Value" fileVersion length=$32 label="File Version if File Type" includeSubFolders 
length=8 label="Include Container SubFolders" includesSubFolders length=$5 label="FOR INTERNAL PROCESSING ONLY.  WILL BE DROPPED." ;
MPRINT(LSAF_GETJOBPARAMETERS):   rowCount=0;
MPRINT(LSAF_GETJOBPARAMETERS):   declare javaobj srv("com/sas/lsaf/macro/execution/job/JobService") ;
MPRINT(LSAF_GETJOBPARAMETERS):   declare javaobj results("com/sas/lsaf/macro/execution/job/SasJobParametersResult");
MPRINT(LSAF_GETJOBPARAMETERS):   srv.callStaticVoidMethod("getRepositoryJobParameters", "/general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_lsaf_pool_last_sdtm.job", "", results) ;
MPRINT(LSAF_GETJOBPARAMETERS):   results.callIntMethod("getReturnCode", returnCode);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getReturnMessage", message);
MPRINT(LSAF_GETJOBPARAMETERS):   logMsgPrefix="NOTE: SAS Life Science Analytics Framework Macro: * ";
MPRINT(LSAF_GETJOBPARAMETERS):   if (returnCode ne 0) then do;
MPRINT(LSAF_GETJOBPARAMETERS):   logMsgPrimary="ERROR: SAS Life Science Analytics Framework Macro:";
MPRINT(LSAF_GETJOBPARAMETERS):   if "" NE "" then logMsg=" Cannot retrieve parameters for job /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_lsaf_pool_last_sdtm.job, version " ;
MPRINT(LSAF_GETJOBPARAMETERS):   else logMsg=" Cannot retrieve parameters for job /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_lsaf_pool_last_sdtm.job" ;
MPRINT(LSAF_GETJOBPARAMETERS):   end;
MPRINT(LSAF_GETJOBPARAMETERS):   else do;
MPRINT(LSAF_GETJOBPARAMETERS):   logMsgPrimary=logMsgPrefix;
MPRINT(LSAF_GETJOBPARAMETERS):   logMsg=" Parameters were returned for job /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_lsaf_pool_last_sdtm.job" ;
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getJobPath", jobPath);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getJobVersion", jobVersion);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callIntMethod("getSize", rowCount);
MPRINT(LSAF_GETJOBPARAMETERS):   do row=0 to rowCount - 1;
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getName", row, name);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getLabel", row, label);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getType", row, type);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getDefaultValue", row, defaultValue);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getFileVersion", row, fileVersion);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getContainerIncludeSubfolders", row, includesSubFolders);
MPRINT(LSAF_GETJOBPARAMETERS):   includeSubFolders=input(includesSubFolders,best.);
MPRINT(LSAF_GETJOBPARAMETERS):   output;
MPRINT(LSAF_GETJOBPARAMETERS):   end;
MPRINT(LSAF_GETJOBPARAMETERS):   end;
MPRINT(LSAF_GETJOBPARAMETERS):   put;
MPRINT(LSAF_GETJOBPARAMETERS):   put logMsgPrimary " " logMsg;
MPRINT(LSAF_GETJOBPARAMETERS):   put logMsgPrefix " " "lsaf_getjobparameters";
MPRINT(LSAF_GETJOBPARAMETERS):   if (rowCount=0) then put logMsgPrefix " No parameters were found.";
MPRINT(LSAF_GETJOBPARAMETERS):   else put logMsgPrefix " " rowCount " records written to data set work.job_Parameters";
MPRINT(LSAF_GETJOBPARAMETERS):   put logMsgPrefix " _lsafMsg_= " message ;
MPRINT(LSAF_GETJOBPARAMETERS):   put logMsgPrefix " _lsafRC_= " returnCode ;
MPRINT(LSAF_GETJOBPARAMETERS):   put;
MPRINT(LSAF_GETJOBPARAMETERS):   call symputx("_lsafRC_", returnCode);
MPRINT(LSAF_GETJOBPARAMETERS):   call symputx("_lsafMsg_", message);
MPRINT(LSAF_GETJOBPARAMETERS):   run;


NOTE: SAS Life Science Analytics Framework Macro: *  Parameters were returned for job /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_lsaf_pool_last_sdtm.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_getjobparameters
NOTE: SAS Life Science Analytics Framework Macro: *  19  records written to data set work.job_Parameters
                                                                                                                         The SAS System

NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: The data set WORK.JOB_PARAMETERS has 19 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      

MPRINT(SUBMIT_JOB):  ;
NOTE: The dataset WORK.JOB_PARAMETERS has 19 observations and 8 variables.
MPRINT(SUBMIT_JOB):   ;
MPRINT(SUBMIT_JOB):   *- dataset to specify job parameters (from macro parameters values) -*;
MPRINT(SUBMIT_JOB):   data lsaf_job_params(index=(name));
MPRINT(SUBMIT_JOB):   set work.job_Parameters(rename=(defaultValue = value));
MPRINT(SUBMIT_JOB):   if upcase(name) = "_PARENTJOB_WS_" then do;
MPRINT(SUBMIT_JOB):   if symexist("_SASWS_") and type = "CHARACTER" then value = symget("_SASWS_");
MPRINT(SUBMIT_JOB):   else value = " ";
MPRINT(SUBMIT_JOB):   end;
MPRINT(SUBMIT_JOB):   else if upcase(name) = "_PARENTJOB_WRK_" then do;
MPRINT(SUBMIT_JOB):   value = pathname("WORK", "L");
MPRINT(SUBMIT_JOB):   end;
MPRINT(SUBMIT_JOB):   else if symexist(name) then do;
MPRINT(SUBMIT_JOB):   if symget(name) ^= ' ' then value = symget(name);
MPRINT(SUBMIT_JOB):   end;
MPRINT(SUBMIT_JOB):   new_value = translate(value, ' ', ',;()"''&%');
MPRINT(SUBMIT_JOB):   if new_value ne value then put "NOTE:(SUBMIT_JOB): Special characters may be removed from parameter value:" / @2 "parameter: " name /@2 "old value: " value /@2 "new value: " new_value;
MPRINT(SUBMIT_JOB):   if _n_=1 then put "Not" "ice:(SUBMIT_JOB): Updated Job parameters:";
MPRINT(SUBMIT_JOB):   if type = "FOLDER" then put " - " name @+(-1) "=" value "[" type= @+(-1) ", " includeSubFolders= @+(-1) "]" /;
MPRINT(SUBMIT_JOB):   else if TYPE = "FILE" then put " - " name @+(-1) "=" value "[" type= @+(-1) ", " fileversion= @+(-1) "]" /;
MPRINT(SUBMIT_JOB):   else put " - " name @+(-1) "=" value "[" type= @+(-1) "]" /;
MPRINT(SUBMIT_JOB):   run;

Notice:(SUBMIT_JOB): Updated Job parameters:
 - refresh_pool=Y [type=CHARACTER]
 - create_gadam_folder=Y [type=CHARACTER]
 - setup_gadam_folder=N [type=CHARACTER]
 - rebuild_gadam_datasets=Y [type=CHARACTER]
 - run_gadam_tables=Y [type=CHARACTER]
 - check_and_load_gadam=Y [type=CHARACTER]
 - gadam_files_source=/general/biostat/gadam [type=CHARACTER]
 - force=N [type=CHARACTER]
 - mock=N [type=CHARACTER]
 - wait=Y [type=CHARACTER]
 - run_next_job=N [type=CHARACTER]
 - next_job=/general/biostat/jobs/gadam_rebuild_adam/dev/jobs/job_gadam_rebuild_adam.job [type=CHARACTER]
 - compounds=argx-117 [type=CHARACTER]
 - indications=  [type=CHARACTER]
 - studies=  [type=CHARACTER]
 - job_instance=Ngos117Prod_8 [type=CHARACTER]
 - _PARENTJOB_WS_=/lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba [type=CHARACTER]
 - _PARENTJOB_WRK_=/saswork/sas_tmp/SAS_work89DD00193DB6_xar08auv.vsp.sas.com/SAS_work944F00193DB6_xar08auv.vsp.sas.com [type=CHARACTER]
 - USE_SAS_WORKSPACE_MACROS=  [type=CHARACTER]
NOTE: There were 19 observations read from the data set WORK.JOB_PARAMETERS.
NOTE: The data set WORK.LSAF_JOB_PARAMS has 19 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      
                                                                                                                         The SAS System


N_PARAMS=19
MPRINT(SUBMIT_JOB):   data lsaf_job_params(index=(name));
MPRINT(SUBMIT_JOB):   set lsaf_job_params;
MPRINT(SUBMIT_JOB):   by name;
MPRINT(SUBMIT_JOB):   if (not first.name) or (not last.name) then do;
MPRINT(SUBMIT_JOB):   if last.name then action = "(kept)   ";
MPRINT(SUBMIT_JOB):   else action = "(dropped)";
MPRINT(SUBMIT_JOB):   drop action;
MPRINT(SUBMIT_JOB):   put "Not" "ice:(SUBMIT_JOB): duplicate parameter " name " = " value @+(3) action;
MPRINT(SUBMIT_JOB):   end;
MPRINT(SUBMIT_JOB):   if last.name;
MPRINT(SUBMIT_JOB):   run;

NOTE: There were 19 observations read from the data set WORK.LSAF_JOB_PARAMS.
NOTE: The data set WORK.LSAF_JOB_PARAMS has 19 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SUBMIT_JOB):   data _null_;
MPRINT(SUBMIT_JOB):   file print;
MPRINT(SUBMIT_JOB):   set lsaf_job_params(where=(prxmatch('/^(FOLDER|FILE)$/', trim(type))) in=a) lsaf_job_params(where=(prxmatch('/^(FOLDER|FILE)$/', trim(type))=0 and value ^= ' ')) end=last;
MPRINT(SUBMIT_JOB):   if _n_=1 then putlog "=== 2023-02-15T03:18:30 - Submit job: /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_lsaf_pool_last_sdtm.job (with parameters: " @;
MPRINT(SUBMIT_JOB):   _n_a+a;
MPRINT(SUBMIT_JOB):   if _n_-1 = _n_a then do;
MPRINT(SUBMIT_JOB):   putlog / @8 @;
MPRINT(SUBMIT_JOB):   put / @8 @;
MPRINT(SUBMIT_JOB):   end;
MPRINT(SUBMIT_JOB):   if a then putlog / @8 name @+(-1) "=" value ' (' type= includeSubFolders= @+(-1) ')   ' @;
MPRINT(SUBMIT_JOB):   else putlog name @+(-1) "=" value "  " @ ;
MPRINT(SUBMIT_JOB):   if last then putlog @+8 ") ===";
MPRINT(SUBMIT_JOB):   if _n_=1 then put "=== 2023-02-15T03:18:30 - Submit job: /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_lsaf_pool_last_sdtm.job (with parameters: " @;
MPRINT(SUBMIT_JOB):   if a then put / @8 name @+(-1) "=" value ' (' type= includeSubFolders= @+(-1) ')   ' @;
MPRINT(SUBMIT_JOB):   else put name @+(-1) "=" value "  " @ ;
MPRINT(SUBMIT_JOB):   if last then put @+8 ") ===";
MPRINT(SUBMIT_JOB):   run;

=== 2023-02-15T03:18:30 - Submit job: /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_lsaf_pool_last_sdtm.job (with parameters: 
       _PARENTJOB_WRK_=/saswork/sas_tmp/SAS_work89DD00193DB6_xar08auv.vsp.sas.com/SAS_work944F00193DB6_xar08auv.vsp.sas.com   _PARENTJOB_WS_=/lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba   
check_and_load_gadam=Y   compounds=argx-117   create_gadam_folder=Y   force=N   gadam_files_source=/general/biostat/gadam   job_instance=Ngos117Prod_8   mock=N   next_job=/general/biostat/jobs/gadam_rebuild_adam/dev/jobs/job_gadam_rebuild_adam.job   
rebuild_gadam_datasets=Y   refresh_pool=Y   run_gadam_tables=Y   run_next_job=N   setup_gadam_folder=N   wait=Y           ) ===
NOTE: 4 lines were written to file PRINT.
NOTE: There were 0 observations read from the data set WORK.LSAF_JOB_PARAMS.
      WHERE PRXMATCH('/^(FOLDER|FILE)$/', TRIM(type));
NOTE: There were 16 observations read from the data set WORK.LSAF_JOB_PARAMS.
      WHERE (PRXMATCH('/^(FOLDER|FILE)$/', TRIM(type))=0) and (value not = ' ');
NOTE: The DATA step printed page 15.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(LSAF_SUBMITJOB):  ;
NOTE: lsaf_submitjob: Validating dataset lsaf_job_params
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   options nonotes;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   proc datasets library=work nolist;
                                                                                                                         The SAS System

MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   delete __SASMacro_submitJobtemp__;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   quit;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   run;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   options nonotes;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   data _null_;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   length message $45 libName $8 dsName $300;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   providedDatasetName=kstrip("lsaf_job_params");
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   dsName="INVALID";
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   dsNameIsValid=0;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   dotCount=countc(providedDatasetName,".");
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   dotPosition=kindexc(providedDatasetName,".");
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   *put dotPosition=;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   if (dotPosition=1 or dotPosition=length(providedDatasetName)) then do;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   message=" Missing either LIBNAME or data set.";
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   GOTO SETVARS;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   end;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   select (dotCount);
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   when (0) dsName=providedDatasetName;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   when (1) do;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   if (dotPosition le 9) then do;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   libName = (ksubstr(providedDatasetName, 1, dotPosition-1));
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   *put libName=;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   dsName = (ksubstr(providedDatasetName, dotPosition+1));
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   end;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   else do;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   message="Libname longer than 8 characters.";
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   GOTO SETVARS;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   end;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   end;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   otherwise do;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   message="Invalid data set name structure.";
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   GOTO SETVARS;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   end;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   end;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   firstchar=ksubstr(kleft(dsName), 1, 1);
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   if (anydigit(firstchar)) then do;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   message="Data set name must start with a character.";
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   GOTO SETVARS;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   end;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   if (length(dsName) > 32) then do;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   message="Data set name longer than 32 characters.";
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   GOTO SETVARS;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   end;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   dsNameIsValid=1;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   SETVARS: call symput("_lsafvaliddsn_", strip(put(dsNameIsValid, best.)));
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   call symput("dsnMsg", message);
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   call symput("specifiedLib", strip(libName));
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   run;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   options NONOTES;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   * CHECK EXISTS: Also getting errors for data set name.;
MPRINT(LSAF_VALIDATE_SASDATASET):  ;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):  ;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   proc sort data=lsaf_job_params out=__SASMacro_submitJobtemp__;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   by name;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   run;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   data _null_;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   set __SASMacro_submitJobtemp__;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   by name;
                                                                                                                         The SAS System

MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   if (first.name AND NOT(last.name)) then do;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   call symput("_lsafMsg_", "Input data set has duplicate values for parameter name " || name || ".");
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   STOP;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   end;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   call symput("_lsafRC_", "0");
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   run;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   option notes;
MPRINT(LSAF_SUBMITJOB):  ;
MPRINT(LSAF_SUBMITJOB):   option notes;
MPRINT(LSAF_SUBMITJOB):   data _null_;
MPRINT(LSAF_SUBMITJOB):   attrib returnCode length=8 message length=$200 jobSubmissionId length=$525 logMsgPrefix length=$70 logMsgPrimary length=$70 logMsg length=$300 ;
MPRINT(LSAF_SUBMITJOB):   set lsaf_job_params end=eof;
MPRINT(LSAF_SUBMITJOB):   if (_n_ = 1) then do;
MPRINT(LSAF_SUBMITJOB):   declare javaobj params("com/sas/lsaf/macro/execution/job/SasParameterValues");
MPRINT(LSAF_SUBMITJOB):   declare javaobj srv("com/sas/lsaf/macro/execution/jobsubmission/JobSubmissionService");
MPRINT(LSAF_SUBMITJOB):   declare javaobj results("com/sas/lsaf/macro/common/result/Result");
MPRINT(LSAF_SUBMITJOB):   end;
MPRINT(LSAF_SUBMITJOB):   params.callVoidMethod("addValue", kstrip(name), kstrip(value), kstrip(type), kstrip(fileVersion), includeSubFolders);
MPRINT(LSAF_SUBMITJOB):   if (eof);
MPRINT(LSAF_SUBMITJOB):   declare javaobj job("com/sas/lsaf/macro/execution/jobsubmission/SasSubmittableJob", "/general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_lsaf_pool_last_sdtm.job", "", params);
MPRINT(LSAF_SUBMITJOB):   srv.callStaticStringMethod("submitRepositoryJob", job, results, jobSubmissionId);
MPRINT(LSAF_SUBMITJOB):   results.callIntMethod("getReturnCode", returnCode);
MPRINT(LSAF_SUBMITJOB):   results.callStringMethod("getReturnMessage", message);
MPRINT(LSAF_SUBMITJOB):   logMsgPrefix="NOTE: SAS Life Science Analytics Framework Macro: * ";
MPRINT(LSAF_SUBMITJOB):   if (returnCode ne 0) then do;
MPRINT(LSAF_SUBMITJOB):   logMsgPrimary="ERROR: SAS Life Science Analytics Framework Macro:";
MPRINT(LSAF_SUBMITJOB):   logMsg=" Cannot submit job /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_lsaf_pool_last_sdtm.job";
MPRINT(LSAF_SUBMITJOB):   end;
MPRINT(LSAF_SUBMITJOB):   else do;
MPRINT(LSAF_SUBMITJOB):   logMsgPrimary=logMsgPrefix;
MPRINT(LSAF_SUBMITJOB):   logMsg=" Submitted job /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_lsaf_pool_last_sdtm.job";
MPRINT(LSAF_SUBMITJOB):   end;
MPRINT(LSAF_SUBMITJOB):   put;
MPRINT(LSAF_SUBMITJOB):   put logMsgPrimary " " logMsg;
MPRINT(LSAF_SUBMITJOB):   put logMsgPrefix " " "lsaf_submitjob";
MPRINT(LSAF_SUBMITJOB):   put logMsgPrefix " _lsafMsg_= " message ;
MPRINT(LSAF_SUBMITJOB):   put logMsgPrefix " _lsafRC_= " returnCode ;
MPRINT(LSAF_SUBMITJOB):   if "lsaf_job_params" = "" then put logMsgPrefix "No job parameters were supplied.";
MPRINT(LSAF_SUBMITJOB):   else put logMsgPrefix "sas_dsname = lsaf_job_params";
MPRINT(LSAF_SUBMITJOB):   put logMsgPrefix "_lsafJobSubmissionId_= " jobSubmissionId;
MPRINT(LSAF_SUBMITJOB):   put;
MPRINT(LSAF_SUBMITJOB):   call symputx("_lsafRC_", returnCode);
MPRINT(LSAF_SUBMITJOB):   call symputx("_lsafMsg_", message);
MPRINT(LSAF_SUBMITJOB):   call symputx("_lsafJobSubmissionId_", strip(jobSubmissionId));
MPRINT(LSAF_SUBMITJOB):   run;


NOTE: SAS Life Science Analytics Framework Macro: *  Submitted job /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_lsaf_pool_last_sdtm.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_submitjob
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: SAS Life Science Analytics Framework Macro: * sas_dsname = lsaf_job_params
NOTE: SAS Life Science Analytics Framework Macro: * _lsafJobSubmissionId_= 5ccc859e-7ed8-49ab-adc0-52af7f90c17d
NOTE: There were 19 observations read from the data set WORK.LSAF_JOB_PARAMS.
NOTE: DATA statement used (Total process time):
      real time           1.34 seconds
      cpu time            0.01 seconds
      
                                                                                                                         The SAS System


MPRINT(LSAF_SUBMITJOB):   options NONOTES;
MPRINT(SUBMIT_JOB):  ;
MPRINT(SUBMIT_JOB):   *- Job submission succeeded -*;
MPRINT(SUBMIT_JOB):   option nomprint nonotes
Calling %lsaf_getitemid(lsaf_path=/general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_lsaf_pool_last_sdtm.job) ...
_LSAFMSG_=Success.  _LSAFRC_=0  _LSAFITEMID_=c5451017-906e-4294-a626-718f6efa7caa
Calling %step_lsaf_getjobsubmissioninfos(job_subm_id=5ccc859e-7ed8-49ab-adc0-52af7f90c17d) ...
Notice: SYSDATASTEPPHASE= IN_DATA_STEP=N
Ignoring record: submissionId=30678109-1661-4a87-858f-1bc1b0d581fa jobPath=/general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_lsaf_get_last_sdtm.job jobVersion=0.1 jobId=abcfa448-6829-4513-8bef-3d8418207d45
Ignoring record: submissionId=c4fb4991-9137-4374-8d55-32ed9002f3d8 jobPath=/general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_gadam_ongoing_studies.job jobVersion=0.1 jobId=c762f385-9376-49c8-8cec-d19326e7e18e
Ignoring record: submissionId=f00d2b52-d9f1-4ef1-8922-181d934626e0 jobPath=/general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_gadam_ongoing_studies.job jobVersion=0.1 jobId=c762f385-9376-49c8-8cec-d19326e7e18e
Ignoring record: submissionId=f4165e41-4ec8-4356-9cc3-a85734358efe jobPath=/clinical/argx-113/hv/argx-113-1907/biostat/staging/generic_adam/jobs/job_gadam_rebuild_adam.job jobVersion=  jobId=628b42d7-061f-462e-92d5-31e91dad4bba
Ignoring record: submissionId=a736f7a1-9be5-40f7-b93e-b52346012f00 jobPath=/clinical/argx-113/hv/argx-113-1907/biostat/staging/generic_adam/jobs/job_adsl.job jobVersion=  jobId=55c2db3a-96df-4376-aa3e-32fb7a609398
Ignoring record: submissionId=41a2d679-1518-4419-989f-80abf8612c52 jobPath=/general/biostat/jobs/gadam_rebuild_adam/prod/jobs/job_gadam_rebuild_adam.job jobVersion=  jobId=02b06e4d-7777-4a59-b2f9-2fc165603216
Notice: _LSAFJOBSUBMISSIONID_=5ccc859e-7ed8-49ab-adc0-52af7f90c17d SESSIONID=a02a5619-a238-4d65-bc6b-e67ccec7f016 JOB=/general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_lsaf_pool_last_sdtm.job JOBID=c5451017-906e-4294-a626-718f6efa7caa
(SUBMIT_JOB): 2023-02-15T03:18:32 - Submitted REPOSITORY Job /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_lsaf_pool_last_sdtm.job          with Submission ID: 5ccc859e-7ed8-49ab-adc0-52af7f90c17d, Status: STARTED
(SUBMIT_JOB): 03:18:32.01 Elapsed: 00:00:02.07 Job Submission Status: STARTED
(SUBMIT_JOB): 03:18:34.54 Elapsed: 00:00:04.60 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:18:37.08 Elapsed: 00:00:07.14 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:18:39.61 Elapsed: 00:00:09.67 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:18:42.14 Elapsed: 00:00:12.20 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:18:44.68 Elapsed: 00:00:14.74 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:18:47.21 Elapsed: 00:00:17.27 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:18:49.74 Elapsed: 00:00:19.80 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:18:52.27 Elapsed: 00:00:22.33 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:18:54.80 Elapsed: 00:00:24.86 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:18:57.33 Elapsed: 00:00:27.39 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:18:59.87 Elapsed: 00:00:29.93 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:19:02.40 Elapsed: 00:00:32.46 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:19:09.93 Elapsed: 00:00:39.99 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:19:17.46 Elapsed: 00:00:47.52 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:19:24.99 Elapsed: 00:00:55.05 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:19:32.53 Elapsed: 00:01:02.59 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:19:55.07 Elapsed: 00:01:25.13 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:20:17.60 Elapsed: 00:01:47.66 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:20:47.63 Elapsed: 00:02:17.69 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:21:17.67 Elapsed: 00:02:47.73 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:21:47.71 Elapsed: 00:03:17.77 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:22:17.74 Elapsed: 00:03:47.80 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:22:47.78 Elapsed: 00:04:17.84 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:23:17.81 Elapsed: 00:04:47.87 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:23:47.85 Elapsed: 00:05:17.91 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:24:17.88 Elapsed: 00:05:47.94 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:24:47.92 Elapsed: 00:06:17.98 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:25:17.96 Elapsed: 00:06:48.02 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:25:47.99 Elapsed: 00:07:18.05 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:26:18.03 Elapsed: 00:07:48.09 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:26:48.06 Elapsed: 00:08:18.12 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:27:18.10 Elapsed: 00:08:48.16 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:27:48.13 Elapsed: 00:09:18.19 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:28:18.17 Elapsed: 00:09:48.23 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:28:48.21 Elapsed: 00:10:18.27 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:29:18.24 Elapsed: 00:10:48.30 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:29:48.28 Elapsed: 00:11:18.34 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:30:18.31 Elapsed: 00:11:48.37 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:30:48.35 Elapsed: 00:12:18.41 Job Submission Status: RUNNING_TASKS
                                                                                                                         The SAS System

(SUBMIT_JOB): 03:31:18.38 Elapsed: 00:12:48.44 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:31:48.44 Elapsed: 00:13:18.50 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:32:18.48 Elapsed: 00:13:48.54 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:32:48.51 Elapsed: 00:14:18.57 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:33:18.55 Elapsed: 00:14:48.61 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:33:48.59 Elapsed: 00:15:18.65 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:34:18.62 Elapsed: 00:15:48.68 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:34:48.66 Elapsed: 00:16:18.72 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:35:18.69 Elapsed: 00:16:48.75 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:35:48.74 Elapsed: 00:17:18.80 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:36:18.77 Elapsed: 00:17:48.83 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:36:48.80 Elapsed: 00:18:18.86 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:37:18.84 Elapsed: 00:18:48.90 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:37:48.89 Elapsed: 00:19:18.95 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:38:18.93 Elapsed: 00:19:48.99 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:38:48.97 Elapsed: 00:20:19.03 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:39:19.00 Elapsed: 00:20:49.06 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:39:49.04 Elapsed: 00:21:19.10 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:40:19.09 Elapsed: 00:21:49.15 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:40:49.12 Elapsed: 00:22:19.18 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:41:19.16 Elapsed: 00:22:49.22 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:41:49.24 Elapsed: 00:23:19.30 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:42:19.27 Elapsed: 00:23:49.33 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:42:49.31 Elapsed: 00:24:19.37 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:43:19.35 Elapsed: 00:24:49.41 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:43:49.39 Elapsed: 00:25:19.45 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:44:19.43 Elapsed: 00:25:49.49 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:44:49.47 Elapsed: 00:26:19.53 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:45:19.51 Elapsed: 00:26:49.57 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:45:49.55 Elapsed: 00:27:19.61 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:46:19.58 Elapsed: 00:27:49.64 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:46:49.62 Elapsed: 00:28:19.68 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:47:19.67 Elapsed: 00:28:49.73 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:47:49.71 Elapsed: 00:29:19.77 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:48:19.75 Elapsed: 00:29:49.81 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:48:49.79 Elapsed: 00:30:19.85 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:49:19.82 Elapsed: 00:30:49.88 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:49:49.86 Elapsed: 00:31:19.92 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:50:19.90 Elapsed: 00:31:49.96 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:50:49.94 Elapsed: 00:32:20.00 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:51:19.98 Elapsed: 00:32:50.04 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:51:50.02 Elapsed: 00:33:20.08 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:52:20.06 Elapsed: 00:33:50.12 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:52:50.15 Elapsed: 00:34:20.21 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:53:20.18 Elapsed: 00:34:50.24 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:53:50.23 Elapsed: 00:35:20.29 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:54:20.27 Elapsed: 00:35:50.33 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:54:50.31 Elapsed: 00:36:20.37 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:55:20.37 Elapsed: 00:36:50.43 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:55:50.40 Elapsed: 00:37:20.46 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:56:20.44 Elapsed: 00:37:50.50 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:56:50.50 Elapsed: 00:38:20.56 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:57:20.54 Elapsed: 00:38:50.60 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:57:50.57 Elapsed: 00:39:20.63 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:58:20.60 Elapsed: 00:39:50.66 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:58:50.64 Elapsed: 00:40:20.70 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:59:20.67 Elapsed: 00:40:50.73 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 03:59:50.71 Elapsed: 00:41:20.77 Job Submission Status: RUNNING_TASKS
                                                                                                                         The SAS System

(SUBMIT_JOB): 04:00:20.74 Elapsed: 00:41:50.80 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:00:50.77 Elapsed: 00:42:20.83 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:01:20.80 Elapsed: 00:42:50.86 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:01:50.83 Elapsed: 00:43:20.89 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:02:20.87 Elapsed: 00:43:50.93 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:02:50.90 Elapsed: 00:44:20.96 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:03:20.93 Elapsed: 00:44:50.99 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:03:50.98 Elapsed: 00:45:21.04 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:04:21.01 Elapsed: 00:45:51.07 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:04:51.05 Elapsed: 00:46:21.11 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:05:21.08 Elapsed: 00:46:51.14 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:05:51.11 Elapsed: 00:47:21.17 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:06:21.16 Elapsed: 00:47:51.22 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:06:51.19 Elapsed: 00:48:21.25 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:07:21.23 Elapsed: 00:48:51.29 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:07:51.26 Elapsed: 00:49:21.32 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:08:21.30 Elapsed: 00:49:51.36 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:08:51.33 Elapsed: 00:50:21.39 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:09:21.36 Elapsed: 00:50:51.42 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:09:51.40 Elapsed: 00:51:21.46 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:10:21.44 Elapsed: 00:51:51.50 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:10:51.48 Elapsed: 00:52:21.54 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:11:21.51 Elapsed: 00:52:51.57 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:11:51.54 Elapsed: 00:53:21.60 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:12:21.58 Elapsed: 00:53:51.64 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:12:51.61 Elapsed: 00:54:21.67 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:13:21.65 Elapsed: 00:54:51.71 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:13:51.70 Elapsed: 00:55:21.76 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:14:21.81 Elapsed: 00:55:51.87 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:14:51.89 Elapsed: 00:56:21.95 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:15:21.96 Elapsed: 00:56:52.02 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:15:52.04 Elapsed: 00:57:22.10 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:16:22.08 Elapsed: 00:57:52.14 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:16:52.11 Elapsed: 00:58:22.17 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:17:22.15 Elapsed: 00:58:52.21 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:17:52.18 Elapsed: 00:59:22.24 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:18:22.22 Elapsed: 00:59:52.28 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:18:52.26 Elapsed: 01:00:22.32 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:19:22.30 Elapsed: 01:00:52.36 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:19:52.33 Elapsed: 01:01:22.39 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:20:22.38 Elapsed: 01:01:52.44 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:20:52.43 Elapsed: 01:02:22.49 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:21:22.48 Elapsed: 01:02:52.54 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:21:52.55 Elapsed: 01:03:22.61 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:22:22.59 Elapsed: 01:03:52.65 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:22:52.62 Elapsed: 01:04:22.68 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:23:22.66 Elapsed: 01:04:52.72 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:23:52.69 Elapsed: 01:05:22.75 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:24:22.74 Elapsed: 01:05:52.80 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:24:52.78 Elapsed: 01:06:22.84 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:25:22.81 Elapsed: 01:06:52.87 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:25:52.84 Elapsed: 01:07:22.90 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:26:22.89 Elapsed: 01:07:52.95 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:26:52.92 Elapsed: 01:08:22.98 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:27:22.96 Elapsed: 01:08:53.02 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:27:53.01 Elapsed: 01:09:23.07 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:28:23.05 Elapsed: 01:09:53.11 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:28:53.08 Elapsed: 01:10:23.14 Job Submission Status: RUNNING_TASKS
                                                                                                                         The SAS System

(SUBMIT_JOB): 04:29:23.11 Elapsed: 01:10:53.17 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:29:53.15 Elapsed: 01:11:23.21 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:30:23.19 Elapsed: 01:11:53.25 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:30:53.22 Elapsed: 01:12:23.28 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:31:23.26 Elapsed: 01:12:53.32 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:31:53.30 Elapsed: 01:13:23.36 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:32:23.33 Elapsed: 01:13:53.39 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:32:53.37 Elapsed: 01:14:23.43 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:33:23.40 Elapsed: 01:14:53.46 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:33:53.44 Elapsed: 01:15:23.50 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:34:23.47 Elapsed: 01:15:53.53 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:34:53.51 Elapsed: 01:16:23.57 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:35:23.56 Elapsed: 01:16:53.62 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:35:53.60 Elapsed: 01:17:23.66 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:36:23.64 Elapsed: 01:17:53.70 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:36:53.68 Elapsed: 01:18:23.74 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:37:23.71 Elapsed: 01:18:53.77 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:37:53.75 Elapsed: 01:19:23.81 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:38:23.81 Elapsed: 01:19:53.87 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:38:53.84 Elapsed: 01:20:23.90 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:39:23.88 Elapsed: 01:20:53.94 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:39:53.96 Elapsed: 01:21:24.02 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:40:23.99 Elapsed: 01:21:54.05 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:40:54.03 Elapsed: 01:22:24.09 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:41:24.06 Elapsed: 01:22:54.12 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:41:54.09 Elapsed: 01:23:24.15 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:42:24.13 Elapsed: 01:23:54.19 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:42:54.17 Elapsed: 01:24:24.23 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:43:24.22 Elapsed: 01:24:54.28 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:43:54.25 Elapsed: 01:25:24.32 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:44:24.29 Elapsed: 01:25:54.35 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:44:54.32 Elapsed: 01:26:24.38 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:45:24.36 Elapsed: 01:26:54.42 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:45:54.40 Elapsed: 01:27:24.46 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:46:24.45 Elapsed: 01:27:54.51 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:46:54.51 Elapsed: 01:28:24.57 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:47:24.55 Elapsed: 01:28:54.61 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:47:54.58 Elapsed: 01:29:24.64 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:48:24.61 Elapsed: 01:29:54.67 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:48:54.65 Elapsed: 01:30:24.71 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:49:24.69 Elapsed: 01:30:54.75 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:49:54.72 Elapsed: 01:31:24.78 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:50:24.76 Elapsed: 01:31:54.82 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:50:54.79 Elapsed: 01:32:24.85 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:51:24.83 Elapsed: 01:32:54.89 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:51:54.87 Elapsed: 01:33:24.93 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:52:24.90 Elapsed: 01:33:54.96 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:52:54.94 Elapsed: 01:34:25.00 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:53:24.98 Elapsed: 01:34:55.04 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:53:55.02 Elapsed: 01:35:25.08 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:54:25.06 Elapsed: 01:35:55.12 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:54:55.10 Elapsed: 01:36:25.16 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:55:25.14 Elapsed: 01:36:55.20 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:55:55.17 Elapsed: 01:37:25.23 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:56:25.21 Elapsed: 01:37:55.27 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:56:55.24 Elapsed: 01:38:25.30 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:57:25.28 Elapsed: 01:38:55.34 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:57:55.32 Elapsed: 01:39:25.38 Job Submission Status: RUNNING_TASKS
                                                                                                                         The SAS System

(SUBMIT_JOB): 04:58:25.36 Elapsed: 01:39:55.42 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:58:55.40 Elapsed: 01:40:25.46 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:59:25.43 Elapsed: 01:40:55.49 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 04:59:55.49 Elapsed: 01:41:25.55 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:00:25.56 Elapsed: 01:41:55.62 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:00:55.59 Elapsed: 01:42:25.65 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:01:25.63 Elapsed: 01:42:55.69 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:01:55.66 Elapsed: 01:43:25.72 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:02:25.80 Elapsed: 01:43:55.86 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:02:55.83 Elapsed: 01:44:25.89 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:03:25.87 Elapsed: 01:44:55.93 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:03:55.91 Elapsed: 01:45:25.97 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:04:25.94 Elapsed: 01:45:56.00 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:04:56.00 Elapsed: 01:46:26.06 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:05:26.03 Elapsed: 01:46:56.09 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:05:56.08 Elapsed: 01:47:26.14 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:06:26.11 Elapsed: 01:47:56.17 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:06:56.15 Elapsed: 01:48:26.21 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:07:26.18 Elapsed: 01:48:56.24 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:07:56.22 Elapsed: 01:49:26.28 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:08:26.25 Elapsed: 01:49:56.31 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:08:56.29 Elapsed: 01:50:26.35 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:09:26.33 Elapsed: 01:50:56.39 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:09:56.37 Elapsed: 01:51:26.43 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:10:26.41 Elapsed: 01:51:56.47 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:10:56.45 Elapsed: 01:52:26.51 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:11:26.48 Elapsed: 01:52:56.54 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:11:56.54 Elapsed: 01:53:26.60 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:12:26.63 Elapsed: 01:53:56.69 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:12:56.67 Elapsed: 01:54:26.73 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:13:26.76 Elapsed: 01:54:56.82 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:13:56.80 Elapsed: 01:55:26.86 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:14:26.83 Elapsed: 01:55:56.89 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:14:56.87 Elapsed: 01:56:26.93 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:15:26.91 Elapsed: 01:56:56.97 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:15:56.95 Elapsed: 01:57:27.01 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:16:26.98 Elapsed: 01:57:57.04 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:16:57.02 Elapsed: 01:58:27.08 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:17:27.05 Elapsed: 01:58:57.11 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:17:57.09 Elapsed: 01:59:27.15 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:18:27.12 Elapsed: 01:59:57.18 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:18:57.16 Elapsed: 02:00:27.22 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:19:27.19 Elapsed: 02:00:57.25 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:19:57.23 Elapsed: 02:01:27.29 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:20:27.29 Elapsed: 02:01:57.35 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:20:57.32 Elapsed: 02:02:27.38 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:21:27.36 Elapsed: 02:02:57.42 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:21:57.40 Elapsed: 02:03:27.46 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:22:27.44 Elapsed: 02:03:57.50 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:22:57.48 Elapsed: 02:04:27.54 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:23:27.52 Elapsed: 02:04:57.58 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:23:57.55 Elapsed: 02:05:27.61 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:24:27.59 Elapsed: 02:05:57.65 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:24:57.62 Elapsed: 02:06:27.68 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:25:27.66 Elapsed: 02:06:57.72 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:25:57.70 Elapsed: 02:07:27.76 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:26:27.73 Elapsed: 02:07:57.79 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:26:57.78 Elapsed: 02:08:27.84 Job Submission Status: RUNNING_TASKS
                                                                                                                         The SAS System

(SUBMIT_JOB): 05:27:27.81 Elapsed: 02:08:57.87 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:27:57.85 Elapsed: 02:09:27.91 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:28:27.89 Elapsed: 02:09:57.95 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:28:57.94 Elapsed: 02:10:28.00 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:29:27.98 Elapsed: 02:10:58.04 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:29:58.01 Elapsed: 02:11:28.07 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:30:28.07 Elapsed: 02:11:58.13 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:30:58.10 Elapsed: 02:12:28.16 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:31:28.14 Elapsed: 02:12:58.20 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:31:58.18 Elapsed: 02:13:28.24 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:32:28.22 Elapsed: 02:13:58.28 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:32:58.25 Elapsed: 02:14:28.31 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:33:28.29 Elapsed: 02:14:58.35 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:33:58.34 Elapsed: 02:15:28.40 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:34:28.38 Elapsed: 02:15:58.44 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:34:58.42 Elapsed: 02:16:28.48 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:35:28.46 Elapsed: 02:16:58.52 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:35:58.50 Elapsed: 02:17:28.56 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:36:28.53 Elapsed: 02:17:58.59 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:36:58.80 Elapsed: 02:18:28.86 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:37:28.83 Elapsed: 02:18:58.89 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:37:58.87 Elapsed: 02:19:28.93 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:38:28.91 Elapsed: 02:19:58.97 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:38:58.94 Elapsed: 02:20:29.00 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:39:28.98 Elapsed: 02:20:59.04 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:39:59.02 Elapsed: 02:21:29.08 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:40:29.07 Elapsed: 02:21:59.13 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:40:59.10 Elapsed: 02:22:29.16 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:41:29.14 Elapsed: 02:22:59.20 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:41:59.18 Elapsed: 02:23:29.24 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:42:29.22 Elapsed: 02:23:59.28 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:42:59.25 Elapsed: 02:24:29.31 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:43:29.29 Elapsed: 02:24:59.35 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:43:59.32 Elapsed: 02:25:29.38 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:44:29.36 Elapsed: 02:25:59.42 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:44:59.40 Elapsed: 02:26:29.46 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:45:29.44 Elapsed: 02:26:59.50 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:45:59.49 Elapsed: 02:27:29.55 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:46:29.52 Elapsed: 02:27:59.58 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:46:59.56 Elapsed: 02:28:29.62 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:47:29.59 Elapsed: 02:28:59.65 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:47:59.63 Elapsed: 02:29:29.69 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:48:29.66 Elapsed: 02:29:59.72 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:48:59.72 Elapsed: 02:30:29.78 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:49:29.76 Elapsed: 02:30:59.82 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:49:59.79 Elapsed: 02:31:29.85 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:50:29.82 Elapsed: 02:31:59.88 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:50:59.86 Elapsed: 02:32:29.92 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:51:29.89 Elapsed: 02:32:59.95 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:51:59.93 Elapsed: 02:33:29.99 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:52:29.97 Elapsed: 02:34:00.03 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:53:00.00 Elapsed: 02:34:30.06 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:53:30.04 Elapsed: 02:35:00.10 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:54:00.08 Elapsed: 02:35:30.14 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:54:30.12 Elapsed: 02:36:00.18 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:55:00.16 Elapsed: 02:36:30.22 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:55:30.19 Elapsed: 02:37:00.25 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:56:00.22 Elapsed: 02:37:30.28 Job Submission Status: RUNNING_TASKS
                                                                                                                         The SAS System

(SUBMIT_JOB): 05:56:30.26 Elapsed: 02:38:00.32 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:57:00.30 Elapsed: 02:38:30.36 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:57:30.34 Elapsed: 02:39:00.40 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:58:00.39 Elapsed: 02:39:30.45 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:58:30.43 Elapsed: 02:40:00.49 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 05:59:00.47 Elapsed: 02:40:30.53 Job Submission Status: RUNNING_TASKS
WARNING:(GET_LSAF_JOB_SUBMISSION_STATUS): job has status: COMPLETED_WARNINGS
(SUBMIT_JOB): 05:59:30.60 Elapsed: 02:41:00.66 Job Submission Status: COMPLETED_WARNINGS
(SUBMIT_JOB): 2023-02-15T06:00:01 - Submitted REPOSITORY job: /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_lsaf_pool_last_sdtm.job has completed with status: COMPLETED_WARNINGS
WARNING:(SUBMIT_JOB): REPOSITORY job job_lsaf_pool_last_sdtm.job has status: COMPLETED_WARNINGS
MPRINT(SUBMIT_JOB):  ;
job_lsaf_pool_last_sdtm.job: get job status: 0: Success.:       Elapsed: 02:41:30.67       REPOSITORY Job /general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_lsaf_pool_last_sdtm.job with Submission ID: 5ccc859e-7ed8-49ab-adc0-52af7f90c17d, Status: 
COMPLETED_WARNINGS
651        
652        %end;
653        
654        %if %qsysfunc(upcase(%superq(refresh_sdtm)), $1.) = Y
655         or %qsysfunc(upcase(%superq(pool_sdtm)), $1.) = Y
656        %then %do;
657           %*- call next job(s) and wait until completion -*;
658           %submit_job(/general/biostat/jobs/gadam_refresh_sdtm_last/dev/jobs/job_gadam_refresh_sdtm_overview.job, parent_job_instance = &job_instance);
NUM_JOBS_SPAWNED=9
MACROAPIVER=2.6
MPRINT(SUBMIT_JOB):   proc sql noprint;
MPRINT(SUBMIT_JOB):   drop table work.job_Parameters;
NOTE: Table WORK.JOB_PARAMETERS has been dropped.
MPRINT(SUBMIT_JOB):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

DEBUG:(GEN_JOB_ENV): PRX=57
DEBUG:(GEN_JOB_ENV): prxmatch(57, /general/biostat/jobs/gadam_refresh_sdtm_last/dev/jobs/job_gadam_refresh_sdtm_overview.job) = 1
DEBUG:(GEN_JOB_ENV): (0) REFPATH=
DEBUG:(GEN_JOB_ENV): (0) REPEVPATH=/lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/biostat/jobs/gadam_ongoing_studies/prod/
DEBUG:(GEN_JOB_ENV): (0) RELREPEVPATH=/general/biostat/jobs/gadam_ongoing_studies/prod/
DEBUG:(GEN_JOB_ENV): (0) _SASFILEPATH_=/general/biostat/jobs/gadam_ongoing_studies/prod/programs/gadam_ongoing_studies.sas
DEBUG:(GEN_JOB_ENV): (0) PROGPATH=/general/biostat/jobs/gadam_ongoing_studies/prod/programs/
DEBUG:(GEN_JOB_ENV): (0) PATH=/general/biostat/jobs/gadam_refresh_sdtm_last/dev/jobs/job_gadam_refresh_sdtm_overview.job
Setting refpath = &repevpath
DEBUG:(GEN_JOB_ENV): (1) REFPATH=/lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/biostat/jobs/gadam_ongoing_studies/prod/
DEBUG:(GEN_JOB_ENV): (2) REFENV=prod
DEBUG:(GEN_JOB_ENV): (3) REFENV=prod
DEBUG:(F_LSAF_EXISTS) - 2023-02-15T06:00:01 - Iteration: 1: slept = 0, exists = 1
DEBUG:(F_LSAF_EXISTS) - 2023-02-15T06:00:01 - Iteration: 1: slept = 0, exists = 1
DEBUG:(F_LSAF_EXISTS) - 2023-02-15T06:00:01 - Iteration: 1: slept = 0, exists = 1
MPRINT(LSAF_EXISTS):  ;
MPRINT(LSAF_EXISTS):   data _null_;
MPRINT(LSAF_EXISTS):   attrib returnCode length=8;
MPRINT(LSAF_EXISTS):   attrib message length=$200;
MPRINT(LSAF_EXISTS):   attrib logMsgPrefix length=$70;
MPRINT(LSAF_EXISTS):   attrib logMsg length=$300;
MPRINT(LSAF_EXISTS):   attrib exists length=3;
MPRINT(LSAF_EXISTS):   attrib logMsgPrimary length=$70;
MPRINT(LSAF_EXISTS):   declare javaobj srv("com/sas/lsaf/macro/content/repository/RepositoryService");
MPRINT(LSAF_EXISTS):   declare javaobj results("com/sas/lsaf/macro/common/result/Result");
MPRINT(LSAF_EXISTS):   srv.callStaticBooleanMethod("exists", "/general/biostat/jobs/gadam_refresh_sdtm_last/prod/jobs/job_gadam_refresh_sdtm_overview.job", results, exists);
                                                                                                                         The SAS System

MPRINT(LSAF_EXISTS):   results.callIntMethod("getReturnCode", returnCode);
MPRINT(LSAF_EXISTS):   results.callStringMethod("getReturnMessage", message);
MPRINT(LSAF_EXISTS):   logMsgPrefix="NOTE: SAS Life Science Analytics Framework Macro: * ";
MPRINT(LSAF_EXISTS):   if (returnCode ne 0) then do;
MPRINT(LSAF_EXISTS):   logMsgPrimary="ERROR: SAS Life Science Analytics Framework Macro:";
MPRINT(LSAF_EXISTS):   logMsg=" Cannot determine if the item exists: /general/biostat/jobs/gadam_refresh_sdtm_last/prod/jobs/job_gadam_refresh_sdtm_overview.job" ;
MPRINT(LSAF_EXISTS):   exists=-1;
MPRINT(LSAF_EXISTS):   end;
MPRINT(LSAF_EXISTS):   else do;
MPRINT(LSAF_EXISTS):   logMsgPrimary=logMsgPrefix;
MPRINT(LSAF_EXISTS):   if (exists) then do;
MPRINT(LSAF_EXISTS):   logMsg=" The item exists: /general/biostat/jobs/gadam_refresh_sdtm_last/prod/jobs/job_gadam_refresh_sdtm_overview.job" ;
MPRINT(LSAF_EXISTS):   end;
MPRINT(LSAF_EXISTS):   else do;
MPRINT(LSAF_EXISTS):   logMsg=" The item does not exist: /general/biostat/jobs/gadam_refresh_sdtm_last/prod/jobs/job_gadam_refresh_sdtm_overview.job" ;
MPRINT(LSAF_EXISTS):   end;
MPRINT(LSAF_EXISTS):   end;
MPRINT(LSAF_EXISTS):   put;
MPRINT(LSAF_EXISTS):   put logMsgPrimary " " logMsg;
MPRINT(LSAF_EXISTS):   put logMsgPrefix " " "lsaf_exists";
MPRINT(LSAF_EXISTS):   put logMsgPrefix " _lsafMsg_= " message;
MPRINT(LSAF_EXISTS):   put logMsgPrefix " _lsafRC_= " returnCode;
MPRINT(LSAF_EXISTS):   put logMsgPrefix " _lsafExists_= " exists;
MPRINT(LSAF_EXISTS):   put;
MPRINT(LSAF_EXISTS):   call symputx("_lsafRC_", returnCode);
MPRINT(LSAF_EXISTS):   call symputx("_lsafMsg_", message);
MPRINT(LSAF_EXISTS):   call symputx("_lsafExists_", exists) ;
MPRINT(LSAF_EXISTS):   run;


NOTE: SAS Life Science Analytics Framework Macro: *  The item exists: /general/biostat/jobs/gadam_refresh_sdtm_last/prod/jobs/job_gadam_refresh_sdtm_overview.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_exists
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafExists_= 1
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(SUBMIT_JOB):  ;
Notice:(SUBMIT_JOB): LSAF Job Path exists: /general/biostat/jobs/gadam_refresh_sdtm_last/prod/jobs/job_gadam_refresh_sdtm_overview.job.
MPRINT(SUBMIT_JOB):   proc format;
MPRINT(SUBMIT_JOB):   value $jobabbr "job_gadam_ongoing_studies.job"= "gos" "job_studies_status.job"= "ss" "job_gadam_sdtm_key_core_vars.job"= "gskcv" "job_unzip_sdtm_sources.job"= "uss" "job_zip_extract_files.job"= "zef" "job_lsaf_get_last_sdtm.job"= 
"lgls" "setup_reporting_event_folder.job"= "sref" "job_gadam_refresh_sdtm_last.job"= "grsl" "job_gadam_update_refresh_info.job"= "guri" "convert_definetosas.job"= "cdts" "job_gadam_studysetup.job"= "gss" "job_gadam_rebuild_adam.job"= "gra" "job_adAAA" - 
"job_adzzz"= "adx" "job_qcstudyadams.job"= "qcsa" "job_qc_gadam_vs_study.job"= "qcgvs" "job_qc_gadam_vs_study-overview.job"= "qcgvso" "job_check_and_load.job"= "cal" "job_tAAA" - "job_tzzz"= "txx" "job_gadam_qc_overviews.job"= "gqco" 
"job_make_sdtm_pool_jobs.job"= "mspj" "job_lsaf_pool_last_sdtm.job"= "lpls" "sdtm_pool-AAA" - "sdtm_pool-zzz"= "pci" "job_gadam_refresh_sdtm_overview.job"= "grso" "getdata.job"= "gd" OTHER = "***" ;
NOTE: Format $JOBABBR is already on the library WORK.FORMATS.
NOTE: Format $JOBABBR has been output.
MPRINT(SUBMIT_JOB):   run;

NOTE: PROCEDURE FORMAT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SUBMIT_JOB):   quit;
job_instance=>Ngos117Prod_9<
                                                                                                                         The SAS System

MPRINT(LSAF_GETJOBPARAMETERS):  ;
MPRINT(LSAF_GETJOBPARAMETERS):   data work.job_Parameters (label="Created by LSAF_GETJOBPARAMETERS" KEEP=jobPath jobVersion name label type defaultValue fileVersion includeSubFolders );
MPRINT(LSAF_GETJOBPARAMETERS):   attrib returnCode length=8 message length=$200 logMsgPrefix length=$70 logMsgPrimary length=$70 logMsg length=$300 rowCount length=8 jobPath length=$2048 label="Job Path" jobVersion length=$32 label="Job Version" name 
length=$256 label="Parameter Name" label length=$256 label="Parameter Label" type length=$32 label="Parameter Type" defaultValue length=$2048 label="Parameter Default Value" fileVersion length=$32 label="File Version if File Type" includeSubFolders 
length=8 label="Include Container SubFolders" includesSubFolders length=$5 label="FOR INTERNAL PROCESSING ONLY.  WILL BE DROPPED." ;
MPRINT(LSAF_GETJOBPARAMETERS):   rowCount=0;
MPRINT(LSAF_GETJOBPARAMETERS):   declare javaobj srv("com/sas/lsaf/macro/execution/job/JobService") ;
MPRINT(LSAF_GETJOBPARAMETERS):   declare javaobj results("com/sas/lsaf/macro/execution/job/SasJobParametersResult");
MPRINT(LSAF_GETJOBPARAMETERS):   srv.callStaticVoidMethod("getRepositoryJobParameters", "/general/biostat/jobs/gadam_refresh_sdtm_last/prod/jobs/job_gadam_refresh_sdtm_overview.job", "", results) ;
MPRINT(LSAF_GETJOBPARAMETERS):   results.callIntMethod("getReturnCode", returnCode);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getReturnMessage", message);
MPRINT(LSAF_GETJOBPARAMETERS):   logMsgPrefix="NOTE: SAS Life Science Analytics Framework Macro: * ";
MPRINT(LSAF_GETJOBPARAMETERS):   if (returnCode ne 0) then do;
MPRINT(LSAF_GETJOBPARAMETERS):   logMsgPrimary="ERROR: SAS Life Science Analytics Framework Macro:";
MPRINT(LSAF_GETJOBPARAMETERS):   if "" NE "" then logMsg=" Cannot retrieve parameters for job /general/biostat/jobs/gadam_refresh_sdtm_last/prod/jobs/job_gadam_refresh_sdtm_overview.job, version " ;
MPRINT(LSAF_GETJOBPARAMETERS):   else logMsg=" Cannot retrieve parameters for job /general/biostat/jobs/gadam_refresh_sdtm_last/prod/jobs/job_gadam_refresh_sdtm_overview.job" ;
MPRINT(LSAF_GETJOBPARAMETERS):   end;
MPRINT(LSAF_GETJOBPARAMETERS):   else do;
MPRINT(LSAF_GETJOBPARAMETERS):   logMsgPrimary=logMsgPrefix;
MPRINT(LSAF_GETJOBPARAMETERS):   logMsg=" Parameters were returned for job /general/biostat/jobs/gadam_refresh_sdtm_last/prod/jobs/job_gadam_refresh_sdtm_overview.job" ;
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getJobPath", jobPath);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getJobVersion", jobVersion);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callIntMethod("getSize", rowCount);
MPRINT(LSAF_GETJOBPARAMETERS):   do row=0 to rowCount - 1;
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getName", row, name);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getLabel", row, label);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getType", row, type);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getDefaultValue", row, defaultValue);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getFileVersion", row, fileVersion);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getContainerIncludeSubfolders", row, includesSubFolders);
MPRINT(LSAF_GETJOBPARAMETERS):   includeSubFolders=input(includesSubFolders,best.);
MPRINT(LSAF_GETJOBPARAMETERS):   output;
MPRINT(LSAF_GETJOBPARAMETERS):   end;
MPRINT(LSAF_GETJOBPARAMETERS):   end;
MPRINT(LSAF_GETJOBPARAMETERS):   put;
MPRINT(LSAF_GETJOBPARAMETERS):   put logMsgPrimary " " logMsg;
MPRINT(LSAF_GETJOBPARAMETERS):   put logMsgPrefix " " "lsaf_getjobparameters";
MPRINT(LSAF_GETJOBPARAMETERS):   if (rowCount=0) then put logMsgPrefix " No parameters were found.";
MPRINT(LSAF_GETJOBPARAMETERS):   else put logMsgPrefix " " rowCount " records written to data set work.job_Parameters";
MPRINT(LSAF_GETJOBPARAMETERS):   put logMsgPrefix " _lsafMsg_= " message ;
MPRINT(LSAF_GETJOBPARAMETERS):   put logMsgPrefix " _lsafRC_= " returnCode ;
MPRINT(LSAF_GETJOBPARAMETERS):   put;
MPRINT(LSAF_GETJOBPARAMETERS):   call symputx("_lsafRC_", returnCode);
MPRINT(LSAF_GETJOBPARAMETERS):   call symputx("_lsafMsg_", message);
MPRINT(LSAF_GETJOBPARAMETERS):   run;


NOTE: SAS Life Science Analytics Framework Macro: *  Parameters were returned for job /general/biostat/jobs/gadam_refresh_sdtm_last/prod/jobs/job_gadam_refresh_sdtm_overview.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_getjobparameters
NOTE: SAS Life Science Analytics Framework Macro: *  4  records written to data set work.job_Parameters
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: The data set WORK.JOB_PARAMETERS has 4 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.01 seconds
      

                                                                                                                         The SAS System

MPRINT(SUBMIT_JOB):  ;
NOTE: The dataset WORK.JOB_PARAMETERS has 4 observations and 8 variables.
MPRINT(SUBMIT_JOB):   ;
MPRINT(SUBMIT_JOB):   *- dataset to specify job parameters (from macro parameters values) -*;
MPRINT(SUBMIT_JOB):   data lsaf_job_params(index=(name));
MPRINT(SUBMIT_JOB):   set work.job_Parameters(rename=(defaultValue = value));
MPRINT(SUBMIT_JOB):   if upcase(name) = "_PARENTJOB_WS_" then do;
MPRINT(SUBMIT_JOB):   if symexist("_SASWS_") and type = "CHARACTER" then value = symget("_SASWS_");
MPRINT(SUBMIT_JOB):   else value = " ";
MPRINT(SUBMIT_JOB):   end;
MPRINT(SUBMIT_JOB):   else if upcase(name) = "_PARENTJOB_WRK_" then do;
MPRINT(SUBMIT_JOB):   value = pathname("WORK", "L");
MPRINT(SUBMIT_JOB):   end;
MPRINT(SUBMIT_JOB):   else if symexist(name) then do;
MPRINT(SUBMIT_JOB):   if symget(name) ^= ' ' then value = symget(name);
MPRINT(SUBMIT_JOB):   end;
MPRINT(SUBMIT_JOB):   new_value = translate(value, ' ', ',;()"''&%');
MPRINT(SUBMIT_JOB):   if new_value ne value then put "NOTE:(SUBMIT_JOB): Special characters may be removed from parameter value:" / @2 "parameter: " name /@2 "old value: " value /@2 "new value: " new_value;
MPRINT(SUBMIT_JOB):   if _n_=1 then put "Not" "ice:(SUBMIT_JOB): Updated Job parameters:";
MPRINT(SUBMIT_JOB):   if type = "FOLDER" then put " - " name @+(-1) "=" value "[" type= @+(-1) ", " includeSubFolders= @+(-1) "]" /;
MPRINT(SUBMIT_JOB):   else if TYPE = "FILE" then put " - " name @+(-1) "=" value "[" type= @+(-1) ", " fileversion= @+(-1) "]" /;
MPRINT(SUBMIT_JOB):   else put " - " name @+(-1) "=" value "[" type= @+(-1) "]" /;
MPRINT(SUBMIT_JOB):   run;

Notice:(SUBMIT_JOB): Updated Job parameters:
 - job_instance=Ngos117Prod_9 [type=CHARACTER]
 - _PARENTJOB_WS_=/lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba [type=CHARACTER]
 - _PARENTJOB_WRK_=/saswork/sas_tmp/SAS_work89DD00193DB6_xar08auv.vsp.sas.com/SAS_work944F00193DB6_xar08auv.vsp.sas.com [type=CHARACTER]
 - USE_SAS_WORKSPACE_MACROS=  [type=CHARACTER]
NOTE: There were 4 observations read from the data set WORK.JOB_PARAMETERS.
NOTE: The data set WORK.LSAF_JOB_PARAMS has 4 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

N_PARAMS=4
MPRINT(SUBMIT_JOB):   data lsaf_job_params(index=(name));
MPRINT(SUBMIT_JOB):   set lsaf_job_params;
MPRINT(SUBMIT_JOB):   by name;
MPRINT(SUBMIT_JOB):   if (not first.name) or (not last.name) then do;
MPRINT(SUBMIT_JOB):   if last.name then action = "(kept)   ";
MPRINT(SUBMIT_JOB):   else action = "(dropped)";
MPRINT(SUBMIT_JOB):   drop action;
MPRINT(SUBMIT_JOB):   put "Not" "ice:(SUBMIT_JOB): duplicate parameter " name " = " value @+(3) action;
MPRINT(SUBMIT_JOB):   end;
MPRINT(SUBMIT_JOB):   if last.name;
MPRINT(SUBMIT_JOB):   run;

NOTE: There were 4 observations read from the data set WORK.LSAF_JOB_PARAMS.
NOTE: The data set WORK.LSAF_JOB_PARAMS has 4 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SUBMIT_JOB):   data _null_;
MPRINT(SUBMIT_JOB):   file print;
                                                                                                                         The SAS System

MPRINT(SUBMIT_JOB):   set lsaf_job_params(where=(prxmatch('/^(FOLDER|FILE)$/', trim(type))) in=a) lsaf_job_params(where=(prxmatch('/^(FOLDER|FILE)$/', trim(type))=0 and value ^= ' ')) end=last;
MPRINT(SUBMIT_JOB):   if _n_=1 then putlog "=== 2023-02-15T06:00:01 - Submit job: /general/biostat/jobs/gadam_refresh_sdtm_last/prod/jobs/job_gadam_refresh_sdtm_overview.job (with parameters: " @;
MPRINT(SUBMIT_JOB):   _n_a+a;
MPRINT(SUBMIT_JOB):   if _n_-1 = _n_a then do;
MPRINT(SUBMIT_JOB):   putlog / @8 @;
MPRINT(SUBMIT_JOB):   put / @8 @;
MPRINT(SUBMIT_JOB):   end;
MPRINT(SUBMIT_JOB):   if a then putlog / @8 name @+(-1) "=" value ' (' type= includeSubFolders= @+(-1) ')   ' @;
MPRINT(SUBMIT_JOB):   else putlog name @+(-1) "=" value "  " @ ;
MPRINT(SUBMIT_JOB):   if last then putlog @+8 ") ===";
MPRINT(SUBMIT_JOB):   if _n_=1 then put "=== 2023-02-15T06:00:01 - Submit job: /general/biostat/jobs/gadam_refresh_sdtm_last/prod/jobs/job_gadam_refresh_sdtm_overview.job (with parameters: " @;
MPRINT(SUBMIT_JOB):   if a then put / @8 name @+(-1) "=" value ' (' type= includeSubFolders= @+(-1) ')   ' @;
MPRINT(SUBMIT_JOB):   else put name @+(-1) "=" value "  " @ ;
MPRINT(SUBMIT_JOB):   if last then put @+8 ") ===";
MPRINT(SUBMIT_JOB):   run;

=== 2023-02-15T06:00:01 - Submit job: /general/biostat/jobs/gadam_refresh_sdtm_last/prod/jobs/job_gadam_refresh_sdtm_overview.job (with parameters: 
       _PARENTJOB_WRK_=/saswork/sas_tmp/SAS_work89DD00193DB6_xar08auv.vsp.sas.com/SAS_work944F00193DB6_xar08auv.vsp.sas.com   _PARENTJOB_WS_=/lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba   
job_instance=Ngos117Prod_9           ) ===
NOTE: 3 lines were written to file PRINT.
NOTE: There were 0 observations read from the data set WORK.LSAF_JOB_PARAMS.
      WHERE PRXMATCH('/^(FOLDER|FILE)$/', TRIM(type));
NOTE: There were 3 observations read from the data set WORK.LSAF_JOB_PARAMS.
      WHERE (PRXMATCH('/^(FOLDER|FILE)$/', TRIM(type))=0) and (value not = ' ');
NOTE: The DATA step printed page 17.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(LSAF_SUBMITJOB):  ;
NOTE: lsaf_submitjob: Validating dataset lsaf_job_params
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   options nonotes;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   proc datasets library=work nolist;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   delete __SASMacro_submitJobtemp__;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   quit;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   run;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   options nonotes;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   data _null_;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   length message $45 libName $8 dsName $300;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   providedDatasetName=kstrip("lsaf_job_params");
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   dsName="INVALID";
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   dsNameIsValid=0;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   dotCount=countc(providedDatasetName,".");
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   dotPosition=kindexc(providedDatasetName,".");
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   *put dotPosition=;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   if (dotPosition=1 or dotPosition=length(providedDatasetName)) then do;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   message=" Missing either LIBNAME or data set.";
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   GOTO SETVARS;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   end;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   select (dotCount);
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   when (0) dsName=providedDatasetName;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   when (1) do;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   if (dotPosition le 9) then do;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   libName = (ksubstr(providedDatasetName, 1, dotPosition-1));
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   *put libName=;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   dsName = (ksubstr(providedDatasetName, dotPosition+1));
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   end;
                                                                                                                         The SAS System

MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   else do;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   message="Libname longer than 8 characters.";
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   GOTO SETVARS;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   end;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   end;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   otherwise do;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   message="Invalid data set name structure.";
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   GOTO SETVARS;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   end;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   end;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   firstchar=ksubstr(kleft(dsName), 1, 1);
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   if (anydigit(firstchar)) then do;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   message="Data set name must start with a character.";
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   GOTO SETVARS;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   end;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   if (length(dsName) > 32) then do;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   message="Data set name longer than 32 characters.";
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   GOTO SETVARS;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   end;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   dsNameIsValid=1;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   SETVARS: call symput("_lsafvaliddsn_", strip(put(dsNameIsValid, best.)));
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   call symput("dsnMsg", message);
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   call symput("specifiedLib", strip(libName));
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   run;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   options NONOTES;
MPRINT(LSAF_VALIDATE_SASDATASET_NAME):   * CHECK EXISTS: Also getting errors for data set name.;
MPRINT(LSAF_VALIDATE_SASDATASET):  ;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):  ;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   proc sort data=lsaf_job_params out=__SASMacro_submitJobtemp__;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   by name;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   run;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   data _null_;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   set __SASMacro_submitJobtemp__;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   by name;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   if (first.name AND NOT(last.name)) then do;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   call symput("_lsafMsg_", "Input data set has duplicate values for parameter name " || name || ".");
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   STOP;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   end;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   call symput("_lsafRC_", "0");
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   run;
MPRINT(LSAF_VALIDATE_PARAMETERS_DATASET):   option notes;
MPRINT(LSAF_SUBMITJOB):  ;
MPRINT(LSAF_SUBMITJOB):   option notes;
MPRINT(LSAF_SUBMITJOB):   data _null_;
MPRINT(LSAF_SUBMITJOB):   attrib returnCode length=8 message length=$200 jobSubmissionId length=$525 logMsgPrefix length=$70 logMsgPrimary length=$70 logMsg length=$300 ;
MPRINT(LSAF_SUBMITJOB):   set lsaf_job_params end=eof;
MPRINT(LSAF_SUBMITJOB):   if (_n_ = 1) then do;
MPRINT(LSAF_SUBMITJOB):   declare javaobj params("com/sas/lsaf/macro/execution/job/SasParameterValues");
MPRINT(LSAF_SUBMITJOB):   declare javaobj srv("com/sas/lsaf/macro/execution/jobsubmission/JobSubmissionService");
MPRINT(LSAF_SUBMITJOB):   declare javaobj results("com/sas/lsaf/macro/common/result/Result");
MPRINT(LSAF_SUBMITJOB):   end;
MPRINT(LSAF_SUBMITJOB):   params.callVoidMethod("addValue", kstrip(name), kstrip(value), kstrip(type), kstrip(fileVersion), includeSubFolders);
MPRINT(LSAF_SUBMITJOB):   if (eof);
MPRINT(LSAF_SUBMITJOB):   declare javaobj job("com/sas/lsaf/macro/execution/jobsubmission/SasSubmittableJob", "/general/biostat/jobs/gadam_refresh_sdtm_last/prod/jobs/job_gadam_refresh_sdtm_overview.job", "", params);
MPRINT(LSAF_SUBMITJOB):   srv.callStaticStringMethod("submitRepositoryJob", job, results, jobSubmissionId);
MPRINT(LSAF_SUBMITJOB):   results.callIntMethod("getReturnCode", returnCode);
MPRINT(LSAF_SUBMITJOB):   results.callStringMethod("getReturnMessage", message);
MPRINT(LSAF_SUBMITJOB):   logMsgPrefix="NOTE: SAS Life Science Analytics Framework Macro: * ";
                                                                                                                         The SAS System

MPRINT(LSAF_SUBMITJOB):   if (returnCode ne 0) then do;
MPRINT(LSAF_SUBMITJOB):   logMsgPrimary="ERROR: SAS Life Science Analytics Framework Macro:";
MPRINT(LSAF_SUBMITJOB):   logMsg=" Cannot submit job /general/biostat/jobs/gadam_refresh_sdtm_last/prod/jobs/job_gadam_refresh_sdtm_overview.job";
MPRINT(LSAF_SUBMITJOB):   end;
MPRINT(LSAF_SUBMITJOB):   else do;
MPRINT(LSAF_SUBMITJOB):   logMsgPrimary=logMsgPrefix;
MPRINT(LSAF_SUBMITJOB):   logMsg=" Submitted job /general/biostat/jobs/gadam_refresh_sdtm_last/prod/jobs/job_gadam_refresh_sdtm_overview.job";
MPRINT(LSAF_SUBMITJOB):   end;
MPRINT(LSAF_SUBMITJOB):   put;
MPRINT(LSAF_SUBMITJOB):   put logMsgPrimary " " logMsg;
MPRINT(LSAF_SUBMITJOB):   put logMsgPrefix " " "lsaf_submitjob";
MPRINT(LSAF_SUBMITJOB):   put logMsgPrefix " _lsafMsg_= " message ;
MPRINT(LSAF_SUBMITJOB):   put logMsgPrefix " _lsafRC_= " returnCode ;
MPRINT(LSAF_SUBMITJOB):   if "lsaf_job_params" = "" then put logMsgPrefix "No job parameters were supplied.";
MPRINT(LSAF_SUBMITJOB):   else put logMsgPrefix "sas_dsname = lsaf_job_params";
MPRINT(LSAF_SUBMITJOB):   put logMsgPrefix "_lsafJobSubmissionId_= " jobSubmissionId;
MPRINT(LSAF_SUBMITJOB):   put;
MPRINT(LSAF_SUBMITJOB):   call symputx("_lsafRC_", returnCode);
MPRINT(LSAF_SUBMITJOB):   call symputx("_lsafMsg_", message);
MPRINT(LSAF_SUBMITJOB):   call symputx("_lsafJobSubmissionId_", strip(jobSubmissionId));
MPRINT(LSAF_SUBMITJOB):   run;


NOTE: SAS Life Science Analytics Framework Macro: *  Submitted job /general/biostat/jobs/gadam_refresh_sdtm_last/prod/jobs/job_gadam_refresh_sdtm_overview.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_submitjob
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: SAS Life Science Analytics Framework Macro: * sas_dsname = lsaf_job_params
NOTE: SAS Life Science Analytics Framework Macro: * _lsafJobSubmissionId_= fb0c7868-332d-4c03-b872-0747df7b9fed
NOTE: There were 4 observations read from the data set WORK.LSAF_JOB_PARAMS.
NOTE: DATA statement used (Total process time):
      real time           1.35 seconds
      cpu time            0.00 seconds
      

MPRINT(LSAF_SUBMITJOB):   options NONOTES;
MPRINT(SUBMIT_JOB):  ;
MPRINT(SUBMIT_JOB):   *- Job submission succeeded -*;
MPRINT(SUBMIT_JOB):   option nomprint nonotes
Calling %lsaf_getitemid(lsaf_path=/general/biostat/jobs/gadam_refresh_sdtm_last/prod/jobs/job_gadam_refresh_sdtm_overview.job) ...
_LSAFMSG_=Success.  _LSAFRC_=0  _LSAFITEMID_=29e4c2ab-6639-4712-9baf-663132404553
Calling %step_lsaf_getjobsubmissioninfos(job_subm_id=fb0c7868-332d-4c03-b872-0747df7b9fed) ...
Notice: SYSDATASTEPPHASE= IN_DATA_STEP=N
Ignoring record: submissionId=30678109-1661-4a87-858f-1bc1b0d581fa jobPath=/general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_lsaf_get_last_sdtm.job jobVersion=0.1 jobId=abcfa448-6829-4513-8bef-3d8418207d45
Ignoring record: submissionId=c4fb4991-9137-4374-8d55-32ed9002f3d8 jobPath=/general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_gadam_ongoing_studies.job jobVersion=0.1 jobId=c762f385-9376-49c8-8cec-d19326e7e18e
Ignoring record: submissionId=f00d2b52-d9f1-4ef1-8922-181d934626e0 jobPath=/general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_gadam_ongoing_studies.job jobVersion=0.1 jobId=c762f385-9376-49c8-8cec-d19326e7e18e
Ignoring record: submissionId=acabe788-96a4-4fc9-a3ad-11aa967c5008 jobPath=/clinical/argx-113/hv/argx-113-2201/biostat/staging/generic_adam/jobs/job_gadam_rebuild_adam.job jobVersion=  jobId=b3f7ff6e-7f63-4652-8d0c-fdf3b9c48772
Ignoring record: submissionId=63045c51-fc75-4685-ae82-75e8a0591b3a jobPath=/clinical/argx-113/hv/argx-113-2201/biostat/staging/generic_adam/jobs/job_qcstudyadams.job jobVersion=  jobId=718d11b7-7084-4935-84dc-86f43ee12351
Ignoring record: submissionId=3350e1cf-e27b-423e-9a21-7a01fd85bb26 jobPath=/general/biostat/jobs/gadam_rebuild_adam/prod/jobs/job_gadam_rebuild_adam.job jobVersion=  jobId=02b06e4d-7777-4a59-b2f9-2fc165603216
Ignoring record: submissionId=ca9c98ba-fc61-4b7e-9346-8e158e267b3c jobPath=/clinical/argx-113/hv/argx-113-2201/biostat/staging/generic_adam/jobs/job_qc_gadam_vs_study-overview.job jobVersion=  jobId=cfffe50b-f225-43c8-a8c1-4afe830f9f67
Notice: _LSAFJOBSUBMISSIONID_=fb0c7868-332d-4c03-b872-0747df7b9fed SESSIONID=a92888ff-0b9a-43bd-aa64-d4749ff13a93 JOB=/general/biostat/jobs/gadam_refresh_sdtm_last/prod/jobs/job_gadam_refresh_sdtm_overview.job JOBID=29e4c2ab-6639-4712-9baf-663132404553
(SUBMIT_JOB): 2023-02-15T06:00:03 - Submitted REPOSITORY Job /general/biostat/jobs/gadam_refresh_sdtm_last/prod/jobs/job_gadam_refresh_sdtm_overview.job          with Submission ID: fb0c7868-332d-4c03-b872-0747df7b9fed, Status: STARTED
(SUBMIT_JOB): 06:00:02.99 Elapsed: 00:00:02.38 Job Submission Status: STARTED
(SUBMIT_JOB): 06:00:05.52 Elapsed: 00:00:04.91 Job Submission Status: STARTED
(SUBMIT_JOB): 06:00:08.05 Elapsed: 00:00:07.44 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 06:00:10.69 Elapsed: 00:00:10.08 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 06:00:13.29 Elapsed: 00:00:12.68 Job Submission Status: RUNNING_TASKS
                                                                                                                         The SAS System

(SUBMIT_JOB): 06:00:15.96 Elapsed: 00:00:15.35 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 06:00:18.54 Elapsed: 00:00:17.93 Job Submission Status: RUNNING_TASKS
(SUBMIT_JOB): 06:00:21.08 Elapsed: 00:00:20.46 Job Submission Status: COMPLETED_SUCCESSFUL
(SUBMIT_JOB): 2023-02-15T06:00:24 - Submitted REPOSITORY job: /general/biostat/jobs/gadam_refresh_sdtm_last/prod/jobs/job_gadam_refresh_sdtm_overview.job has completed with status: COMPLETED_SUCCESSFUL
MPRINT(SUBMIT_JOB):  ;
job_gadam_refresh_sdtm_overview.job: get job status: 0: Success.:       Elapsed: 00:00:22.97       REPOSITORY Job /general/biostat/jobs/gadam_refresh_sdtm_last/prod/jobs/job_gadam_refresh_sdtm_overview.job with Submission ID: 
fb0c7868-332d-4c03-b872-0747df7b9fed, Status: COMPLETED_SUCCESSFUL
659           %submit_job(/general/biostat/gadam/documents/gadam_dshb/getdata.job, parent_job_instance = &job_instance);
NUM_JOBS_SPAWNED=10
MACROAPIVER=2.6
MPRINT(SUBMIT_JOB):   proc sql noprint;
MPRINT(SUBMIT_JOB):   drop table work.job_Parameters;
NOTE: Table WORK.JOB_PARAMETERS has been dropped.
MPRINT(SUBMIT_JOB):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

DEBUG:(GEN_JOB_ENV): PRX=64
DEBUG:(GEN_JOB_ENV): prxmatch(64, /general/biostat/gadam/documents/gadam_dshb/getdata.job) = 0
MPRINT(LSAF_EXISTS):  ;
MPRINT(LSAF_EXISTS):   data _null_;
MPRINT(LSAF_EXISTS):   attrib returnCode length=8;
MPRINT(LSAF_EXISTS):   attrib message length=$200;
MPRINT(LSAF_EXISTS):   attrib logMsgPrefix length=$70;
MPRINT(LSAF_EXISTS):   attrib logMsg length=$300;
MPRINT(LSAF_EXISTS):   attrib exists length=3;
MPRINT(LSAF_EXISTS):   attrib logMsgPrimary length=$70;
MPRINT(LSAF_EXISTS):   declare javaobj srv("com/sas/lsaf/macro/content/repository/RepositoryService");
MPRINT(LSAF_EXISTS):   declare javaobj results("com/sas/lsaf/macro/common/result/Result");
MPRINT(LSAF_EXISTS):   srv.callStaticBooleanMethod("exists", "/general/biostat/gadam/documents/gadam_dshb/getdata.job", results, exists);
MPRINT(LSAF_EXISTS):   results.callIntMethod("getReturnCode", returnCode);
MPRINT(LSAF_EXISTS):   results.callStringMethod("getReturnMessage", message);
MPRINT(LSAF_EXISTS):   logMsgPrefix="NOTE: SAS Life Science Analytics Framework Macro: * ";
MPRINT(LSAF_EXISTS):   if (returnCode ne 0) then do;
MPRINT(LSAF_EXISTS):   logMsgPrimary="ERROR: SAS Life Science Analytics Framework Macro:";
MPRINT(LSAF_EXISTS):   logMsg=" Cannot determine if the item exists: /general/biostat/gadam/documents/gadam_dshb/getdata.job" ;
MPRINT(LSAF_EXISTS):   exists=-1;
MPRINT(LSAF_EXISTS):   end;
MPRINT(LSAF_EXISTS):   else do;
MPRINT(LSAF_EXISTS):   logMsgPrimary=logMsgPrefix;
MPRINT(LSAF_EXISTS):   if (exists) then do;
MPRINT(LSAF_EXISTS):   logMsg=" The item exists: /general/biostat/gadam/documents/gadam_dshb/getdata.job" ;
MPRINT(LSAF_EXISTS):   end;
MPRINT(LSAF_EXISTS):   else do;
MPRINT(LSAF_EXISTS):   logMsg=" The item does not exist: /general/biostat/gadam/documents/gadam_dshb/getdata.job" ;
MPRINT(LSAF_EXISTS):   end;
MPRINT(LSAF_EXISTS):   end;
MPRINT(LSAF_EXISTS):   put;
MPRINT(LSAF_EXISTS):   put logMsgPrimary " " logMsg;
MPRINT(LSAF_EXISTS):   put logMsgPrefix " " "lsaf_exists";
MPRINT(LSAF_EXISTS):   put logMsgPrefix " _lsafMsg_= " message;
MPRINT(LSAF_EXISTS):   put logMsgPrefix " _lsafRC_= " returnCode;
MPRINT(LSAF_EXISTS):   put logMsgPrefix " _lsafExists_= " exists;
MPRINT(LSAF_EXISTS):   put;
MPRINT(LSAF_EXISTS):   call symputx("_lsafRC_", returnCode);
MPRINT(LSAF_EXISTS):   call symputx("_lsafMsg_", message);
                                                                                                                         The SAS System

MPRINT(LSAF_EXISTS):   call symputx("_lsafExists_", exists) ;
MPRINT(LSAF_EXISTS):   run;


NOTE: SAS Life Science Analytics Framework Macro: *  The item exists: /general/biostat/gadam/documents/gadam_dshb/getdata.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_exists
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafExists_= 1
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.00 seconds
      

MPRINT(SUBMIT_JOB):  ;
Notice:(SUBMIT_JOB): LSAF Job Path exists: /general/biostat/gadam/documents/gadam_dshb/getdata.job.
MPRINT(SUBMIT_JOB):   proc format;
MPRINT(SUBMIT_JOB):   value $jobabbr "job_gadam_ongoing_studies.job"= "gos" "job_studies_status.job"= "ss" "job_gadam_sdtm_key_core_vars.job"= "gskcv" "job_unzip_sdtm_sources.job"= "uss" "job_zip_extract_files.job"= "zef" "job_lsaf_get_last_sdtm.job"= 
"lgls" "setup_reporting_event_folder.job"= "sref" "job_gadam_refresh_sdtm_last.job"= "grsl" "job_gadam_update_refresh_info.job"= "guri" "convert_definetosas.job"= "cdts" "job_gadam_studysetup.job"= "gss" "job_gadam_rebuild_adam.job"= "gra" "job_adAAA" - 
"job_adzzz"= "adx" "job_qcstudyadams.job"= "qcsa" "job_qc_gadam_vs_study.job"= "qcgvs" "job_qc_gadam_vs_study-overview.job"= "qcgvso" "job_check_and_load.job"= "cal" "job_tAAA" - "job_tzzz"= "txx" "job_gadam_qc_overviews.job"= "gqco" 
"job_make_sdtm_pool_jobs.job"= "mspj" "job_lsaf_pool_last_sdtm.job"= "lpls" "sdtm_pool-AAA" - "sdtm_pool-zzz"= "pci" "job_gadam_refresh_sdtm_overview.job"= "grso" "getdata.job"= "gd" OTHER = "***" ;
NOTE: Format $JOBABBR is already on the library WORK.FORMATS.
NOTE: Format $JOBABBR has been output.
MPRINT(SUBMIT_JOB):   run;

NOTE: PROCEDURE FORMAT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SUBMIT_JOB):   quit;
job_instance=>Ngos117Prod_10<
MPRINT(LSAF_GETJOBPARAMETERS):  ;
MPRINT(LSAF_GETJOBPARAMETERS):   data work.job_Parameters (label="Created by LSAF_GETJOBPARAMETERS" KEEP=jobPath jobVersion name label type defaultValue fileVersion includeSubFolders );
MPRINT(LSAF_GETJOBPARAMETERS):   attrib returnCode length=8 message length=$200 logMsgPrefix length=$70 logMsgPrimary length=$70 logMsg length=$300 rowCount length=8 jobPath length=$2048 label="Job Path" jobVersion length=$32 label="Job Version" name 
length=$256 label="Parameter Name" label length=$256 label="Parameter Label" type length=$32 label="Parameter Type" defaultValue length=$2048 label="Parameter Default Value" fileVersion length=$32 label="File Version if File Type" includeSubFolders 
length=8 label="Include Container SubFolders" includesSubFolders length=$5 label="FOR INTERNAL PROCESSING ONLY.  WILL BE DROPPED." ;
MPRINT(LSAF_GETJOBPARAMETERS):   rowCount=0;
MPRINT(LSAF_GETJOBPARAMETERS):   declare javaobj srv("com/sas/lsaf/macro/execution/job/JobService") ;
MPRINT(LSAF_GETJOBPARAMETERS):   declare javaobj results("com/sas/lsaf/macro/execution/job/SasJobParametersResult");
MPRINT(LSAF_GETJOBPARAMETERS):   srv.callStaticVoidMethod("getRepositoryJobParameters", "/general/biostat/gadam/documents/gadam_dshb/getdata.job", "", results) ;
MPRINT(LSAF_GETJOBPARAMETERS):   results.callIntMethod("getReturnCode", returnCode);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getReturnMessage", message);
MPRINT(LSAF_GETJOBPARAMETERS):   logMsgPrefix="NOTE: SAS Life Science Analytics Framework Macro: * ";
MPRINT(LSAF_GETJOBPARAMETERS):   if (returnCode ne 0) then do;
MPRINT(LSAF_GETJOBPARAMETERS):   logMsgPrimary="ERROR: SAS Life Science Analytics Framework Macro:";
MPRINT(LSAF_GETJOBPARAMETERS):   if "" NE "" then logMsg=" Cannot retrieve parameters for job /general/biostat/gadam/documents/gadam_dshb/getdata.job, version " ;
MPRINT(LSAF_GETJOBPARAMETERS):   else logMsg=" Cannot retrieve parameters for job /general/biostat/gadam/documents/gadam_dshb/getdata.job" ;
MPRINT(LSAF_GETJOBPARAMETERS):   end;
MPRINT(LSAF_GETJOBPARAMETERS):   else do;
MPRINT(LSAF_GETJOBPARAMETERS):   logMsgPrimary=logMsgPrefix;
MPRINT(LSAF_GETJOBPARAMETERS):   logMsg=" Parameters were returned for job /general/biostat/gadam/documents/gadam_dshb/getdata.job" ;
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getJobPath", jobPath);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getJobVersion", jobVersion);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callIntMethod("getSize", rowCount);
MPRINT(LSAF_GETJOBPARAMETERS):   do row=0 to rowCount - 1;
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getName", row, name);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getLabel", row, label);
                                                                                                                         The SAS System

MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getType", row, type);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getDefaultValue", row, defaultValue);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getFileVersion", row, fileVersion);
MPRINT(LSAF_GETJOBPARAMETERS):   results.callStringMethod("getContainerIncludeSubfolders", row, includesSubFolders);
MPRINT(LSAF_GETJOBPARAMETERS):   includeSubFolders=input(includesSubFolders,best.);
MPRINT(LSAF_GETJOBPARAMETERS):   output;
MPRINT(LSAF_GETJOBPARAMETERS):   end;
MPRINT(LSAF_GETJOBPARAMETERS):   end;
MPRINT(LSAF_GETJOBPARAMETERS):   put;
MPRINT(LSAF_GETJOBPARAMETERS):   put logMsgPrimary " " logMsg;
MPRINT(LSAF_GETJOBPARAMETERS):   put logMsgPrefix " " "lsaf_getjobparameters";
MPRINT(LSAF_GETJOBPARAMETERS):   if (rowCount=0) then put logMsgPrefix " No parameters were found.";
MPRINT(LSAF_GETJOBPARAMETERS):   else put logMsgPrefix " " rowCount " records written to data set work.job_Parameters";
MPRINT(LSAF_GETJOBPARAMETERS):   put logMsgPrefix " _lsafMsg_= " message ;
MPRINT(LSAF_GETJOBPARAMETERS):   put logMsgPrefix " _lsafRC_= " returnCode ;
MPRINT(LSAF_GETJOBPARAMETERS):   put;
MPRINT(LSAF_GETJOBPARAMETERS):   call symputx("_lsafRC_", returnCode);
MPRINT(LSAF_GETJOBPARAMETERS):   call symputx("_lsafMsg_", message);
MPRINT(LSAF_GETJOBPARAMETERS):   run;


NOTE: SAS Life Science Analytics Framework Macro: *  Parameters were returned for job /general/biostat/gadam/documents/gadam_dshb/getdata.job
NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_getjobparameters
NOTE: SAS Life Science Analytics Framework Macro: *  No parameters were found.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: The data set WORK.JOB_PARAMETERS has 0 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(SUBMIT_JOB):  ;
NOTE: No observations in data set WORK.JOB_PARAMETERS.
NOTE: The dataset WORK.JOB_PARAMETERS has 0 observations and 8 variables.
MPRINT(SUBMIT_JOB):   ;
MPRINT(SUBMIT_JOB):   *- dataset to specify job parameters (from macro parameters values) -*;
MPRINT(SUBMIT_JOB):   data lsaf_job_params(index=(name));
MPRINT(SUBMIT_JOB):   set work.job_Parameters(rename=(defaultValue = value));
MPRINT(SUBMIT_JOB):   if upcase(name) = "_PARENTJOB_WS_" then do;
MPRINT(SUBMIT_JOB):   if symexist("_SASWS_") and type = "CHARACTER" then value = symget("_SASWS_");
MPRINT(SUBMIT_JOB):   else value = " ";
MPRINT(SUBMIT_JOB):   end;
MPRINT(SUBMIT_JOB):   else if upcase(name) = "_PARENTJOB_WRK_" then do;
MPRINT(SUBMIT_JOB):   value = pathname("WORK", "L");
MPRINT(SUBMIT_JOB):   end;
MPRINT(SUBMIT_JOB):   else if symexist(name) then do;
MPRINT(SUBMIT_JOB):   if symget(name) ^= ' ' then value = symget(name);
MPRINT(SUBMIT_JOB):   end;
MPRINT(SUBMIT_JOB):   new_value = translate(value, ' ', ',;()"''&%');
MPRINT(SUBMIT_JOB):   if new_value ne value then put "NOTE:(SUBMIT_JOB): Special characters may be removed from parameter value:" / @2 "parameter: " name /@2 "old value: " value /@2 "new value: " new_value;
MPRINT(SUBMIT_JOB):   if _n_=1 then put "Not" "ice:(SUBMIT_JOB): Updated Job parameters:";
MPRINT(SUBMIT_JOB):   if type = "FOLDER" then put " - " name @+(-1) "=" value "[" type= @+(-1) ", " includeSubFolders= @+(-1) "]" /;
MPRINT(SUBMIT_JOB):   else if TYPE = "FILE" then put " - " name @+(-1) "=" value "[" type= @+(-1) ", " fileversion= @+(-1) "]" /;
MPRINT(SUBMIT_JOB):   else put " - " name @+(-1) "=" value "[" type= @+(-1) "]" /;
MPRINT(SUBMIT_JOB):   run;

NOTE: There were 0 observations read from the data set WORK.JOB_PARAMETERS.
                                                                                                                         The SAS System

NOTE: The data set WORK.LSAF_JOB_PARAMS has 0 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

NOTE: No observations in data set WORK.LSAF_JOB_PARAMS.
N_PARAMS=0
MPRINT(SUBMIT_JOB):   data _null_;
MPRINT(SUBMIT_JOB):   file print;
MPRINT(SUBMIT_JOB):   putlog "=== 2023-02-15T06:00:24 - Submit job: /general/biostat/gadam/documents/gadam_dshb/getdata.job (with 0 parameters) ===";
MPRINT(SUBMIT_JOB):   put "=== 2023-02-15T06:00:24 - Submit job: /general/biostat/gadam/documents/gadam_dshb/getdata.job (with 0 parameters) ===";
MPRINT(SUBMIT_JOB):   run;

=== 2023-02-15T06:00:24 - Submit job: /general/biostat/gadam/documents/gadam_dshb/getdata.job (with 0 parameters) ===
NOTE: 1 lines were written to file PRINT.
NOTE: The DATA step printed page 19.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(LSAF_SUBMITJOB):  ;
MPRINT(LSAF_SUBMITJOB):   option notes;
MPRINT(LSAF_SUBMITJOB):   data _null_;
MPRINT(LSAF_SUBMITJOB):   attrib returnCode length=8 message length=$200 jobSubmissionId length=$525 logMsgPrefix length=$70 logMsgPrimary length=$70 logMsg length=$300 ;
MPRINT(LSAF_SUBMITJOB):   declare javaobj params("com/sas/lsaf/macro/execution/job/SasParameterValues");
MPRINT(LSAF_SUBMITJOB):   declare javaobj srv("com/sas/lsaf/macro/execution/jobsubmission/JobSubmissionService");
MPRINT(LSAF_SUBMITJOB):   declare javaobj results("com/sas/lsaf/macro/common/result/Result");
MPRINT(LSAF_SUBMITJOB):   declare javaobj job("com/sas/lsaf/macro/execution/jobsubmission/SasSubmittableJob", "/general/biostat/gadam/documents/gadam_dshb/getdata.job", "", params);
MPRINT(LSAF_SUBMITJOB):   srv.callStaticStringMethod("submitRepositoryJob", job, results, jobSubmissionId);
MPRINT(LSAF_SUBMITJOB):   results.callIntMethod("getReturnCode", returnCode);
MPRINT(LSAF_SUBMITJOB):   results.callStringMethod("getReturnMessage", message);
MPRINT(LSAF_SUBMITJOB):   logMsgPrefix="NOTE: SAS Life Science Analytics Framework Macro: * ";
MPRINT(LSAF_SUBMITJOB):   if (returnCode ne 0) then do;
MPRINT(LSAF_SUBMITJOB):   logMsgPrimary="ERROR: SAS Life Science Analytics Framework Macro:";
MPRINT(LSAF_SUBMITJOB):   logMsg=" Cannot submit job /general/biostat/gadam/documents/gadam_dshb/getdata.job";
MPRINT(LSAF_SUBMITJOB):   end;
MPRINT(LSAF_SUBMITJOB):   else do;
MPRINT(LSAF_SUBMITJOB):   logMsgPrimary=logMsgPrefix;
MPRINT(LSAF_SUBMITJOB):   logMsg=" Submitted job /general/biostat/gadam/documents/gadam_dshb/getdata.job";
MPRINT(LSAF_SUBMITJOB):   end;
MPRINT(LSAF_SUBMITJOB):   put;
MPRINT(LSAF_SUBMITJOB):   put logMsgPrimary " " logMsg;
MPRINT(LSAF_SUBMITJOB):   put logMsgPrefix " " "lsaf_submitjob";
MPRINT(LSAF_SUBMITJOB):   put logMsgPrefix " _lsafMsg_= " message ;
MPRINT(LSAF_SUBMITJOB):   put logMsgPrefix " _lsafRC_= " returnCode ;
MPRINT(LSAF_SUBMITJOB):   if "" = "" then put logMsgPrefix "No job parameters were supplied.";
MPRINT(LSAF_SUBMITJOB):   else put logMsgPrefix "sas_dsname = ";
MPRINT(LSAF_SUBMITJOB):   put logMsgPrefix "_lsafJobSubmissionId_= " jobSubmissionId;
MPRINT(LSAF_SUBMITJOB):   put;
MPRINT(LSAF_SUBMITJOB):   call symputx("_lsafRC_", returnCode);
MPRINT(LSAF_SUBMITJOB):   call symputx("_lsafMsg_", message);
MPRINT(LSAF_SUBMITJOB):   call symputx("_lsafJobSubmissionId_", strip(jobSubmissionId));
MPRINT(LSAF_SUBMITJOB):   run;


NOTE: SAS Life Science Analytics Framework Macro: *  Submitted job /general/biostat/gadam/documents/gadam_dshb/getdata.job
                                                                                                                         The SAS System

NOTE: SAS Life Science Analytics Framework Macro: *  lsaf_submitjob
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafMsg_= Success.
NOTE: SAS Life Science Analytics Framework Macro: *  _lsafRC_= 0
NOTE: SAS Life Science Analytics Framework Macro: * No job parameters were supplied.
NOTE: SAS Life Science Analytics Framework Macro: * _lsafJobSubmissionId_= e8760745-16a6-4728-ac1c-764da1f233d5
NOTE: DATA statement used (Total process time):
      real time           1.32 seconds
      cpu time            0.01 seconds
      

MPRINT(LSAF_SUBMITJOB):   options NOTES;
MPRINT(SUBMIT_JOB):  ;
MPRINT(SUBMIT_JOB):   *- Job submission succeeded -*;
MPRINT(SUBMIT_JOB):   option nomprint nonotes
Calling %lsaf_getitemid(lsaf_path=/general/biostat/gadam/documents/gadam_dshb/getdata.job) ...
_LSAFMSG_=Success.  _LSAFRC_=0  _LSAFITEMID_=b3436e47-192b-49e1-b14d-73ad5349d8a0
Calling %step_lsaf_getjobsubmissioninfos(job_subm_id=e8760745-16a6-4728-ac1c-764da1f233d5) ...
Notice: SYSDATASTEPPHASE= IN_DATA_STEP=N
Ignoring record: submissionId=30678109-1661-4a87-858f-1bc1b0d581fa jobPath=/general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_lsaf_get_last_sdtm.job jobVersion=0.1 jobId=abcfa448-6829-4513-8bef-3d8418207d45
Ignoring record: submissionId=c4fb4991-9137-4374-8d55-32ed9002f3d8 jobPath=/general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_gadam_ongoing_studies.job jobVersion=0.1 jobId=c762f385-9376-49c8-8cec-d19326e7e18e
Ignoring record: submissionId=f00d2b52-d9f1-4ef1-8922-181d934626e0 jobPath=/general/biostat/jobs/gadam_ongoing_studies/prod/jobs/job_gadam_ongoing_studies.job jobVersion=0.1 jobId=c762f385-9376-49c8-8cec-d19326e7e18e
Ignoring record: submissionId=acabe788-96a4-4fc9-a3ad-11aa967c5008 jobPath=/clinical/argx-113/hv/argx-113-2201/biostat/staging/generic_adam/jobs/job_gadam_rebuild_adam.job jobVersion=  jobId=b3f7ff6e-7f63-4652-8d0c-fdf3b9c48772
Ignoring record: submissionId=63045c51-fc75-4685-ae82-75e8a0591b3a jobPath=/clinical/argx-113/hv/argx-113-2201/biostat/staging/generic_adam/jobs/job_qcstudyadams.job jobVersion=  jobId=718d11b7-7084-4935-84dc-86f43ee12351
Ignoring record: submissionId=3350e1cf-e27b-423e-9a21-7a01fd85bb26 jobPath=/general/biostat/jobs/gadam_rebuild_adam/prod/jobs/job_gadam_rebuild_adam.job jobVersion=  jobId=02b06e4d-7777-4a59-b2f9-2fc165603216
Notice: _LSAFJOBSUBMISSIONID_=e8760745-16a6-4728-ac1c-764da1f233d5 SESSIONID=b8fd6c2c-de43-4a4e-a92a-ff7d824154c9 JOB=/general/biostat/gadam/documents/gadam_dshb/getdata.job JOBID=b3436e47-192b-49e1-b14d-73ad5349d8a0
(SUBMIT_JOB): 2023-02-15T06:00:26 - Submitted REPOSITORY Job /general/biostat/gadam/documents/gadam_dshb/getdata.job          with Submission ID: e8760745-16a6-4728-ac1c-764da1f233d5, Status: RUNNING_TASKS
(SUBMIT_JOB): 06:00:25.53 Elapsed: 00:00:01.94 Job Submission Status: RUNNING_TASKS
WARNING:(GET_LSAF_JOB_SUBMISSION_STATUS): job has status: COMPLETED_WARNINGS
(SUBMIT_JOB): 06:00:28.07 Elapsed: 00:00:04.49 Job Submission Status: COMPLETED_WARNINGS
(SUBMIT_JOB): 2023-02-15T06:00:31 - Submitted REPOSITORY job: /general/biostat/gadam/documents/gadam_dshb/getdata.job has completed with status: COMPLETED_WARNINGS
WARNING:(SUBMIT_JOB): REPOSITORY job getdata.job has status: COMPLETED_WARNINGS
MPRINT(SUBMIT_JOB):  ;
getdata.job: get job status: 0: Success.:       Elapsed: 00:00:06.99       REPOSITORY Job /general/biostat/gadam/documents/gadam_dshb/getdata.job with Submission ID: e8760745-16a6-4728-ac1c-764da1f233d5, Status: COMPLETED_WARNINGS
660        %end;
661        
662        
663        %*--------------------------------------------------------------------------------------------*;
664        
665        
666        option mprintnest MAUTOLOCDISPLAY;
667        %programend;
MAUTOCOMPLOC:  The autocall macro PROGRAMEND is compiling using the autocall source file /lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/biostat/macros/_library/programend.sas.
MAUTOLOCDISPLAY(PROGRAMEND):  This macro was compiled from the autocall file /lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/biostat/macros/_library/programend.sas
MPRINT(PROGRAMEND):   ;
MPRINT(PROGRAMEND):  *';
MPRINT(PROGRAMEND):  *";
MPRINT(PROGRAMEND):  */;
MPRINT(PROGRAMEND):  *);
MPRINT(PROGRAMEND):  run;
MPRINT(PROGRAMEND):  quit;
MPRINT(PROGRAMEND):  ;
MPRINT(PROGRAMEND):   option nosyntaxcheck obs=max;
MPRINT(PROGRAMEND):   option LS=180 PS=60;
MPRINT(PROGRAMEND):   option VALIDVARNAME=V7;
_PARENTJOB_WRK_= PARWRK_LIBREF_ASSIGNED=0

Notice: === (PROGRAMEND): Starting, 2023-02-15T06:00:30.58 - SYSMEXECDEPTH: 1 - DEBUG: 1 ===
                                                                                   The SAS System

Notice: === (PROGRAMEND): OUTPUTFILENAME=none ===
MAUTOCOMPLOC:  The autocall macro ODSDEST is compiling using the autocall source file 
            /lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/biostat/jobs/gadam_ongoing_studies/prod/macros/global_ma
            cros/odsdest.sas.
MAUTOLOCDISPLAY(ODSDEST):  This macro was compiled from the autocall file 
                           /lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/biostat/jobs/gadam_ongoing_studies/prod/m
                           acros/global_macros/odsdest.sas
Notice: === (PROGRAMEND): ODS LISTING is now OPEN. ===
Notice: === (PROGRAMEND): SYSPRINTTOLIST= ===
Notice: === (PROGRAMEND): SYSPRINTTOLOG= ===
MPRINT(PROGRAMEND):   ods listing;
MAUTOLOCDISPLAY(ODSDEST):  This macro was compiled from the autocall file 
                           /lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/biostat/jobs/gadam_ongoing_studies/prod/m
                           acros/global_macros/odsdest.sas
Notice: === (PROGRAMEND): ODS LISTING is now OPEN. ===
MAUTOLOCDISPLAY(ODSDEST):  This macro was compiled from the autocall file 
                           /lsafshared/SASWorkspaces/.transient/job_gadam_ongoing_studies.job-46e1f72b-2c77-4ab6-8028-33761e4697ba/general/biostat/jobs/gadam_ongoing_studies/prod/m
                           acros/global_macros/odsdest.sas
Current LISTING select list is set to default value (ALL).
Current OVERALL select list is: ALL
MPRINT(PROGRAMEND.ODSDEST):   ODS LISTING show ;
MPRINT(PROGRAMEND):   ;
MPRINT(PROGRAMEND):   ods rtf close;
MPRINT(PROGRAMEND):   ods pdf close;
MPRINT(PROGRAMEND):   proc printto print=print;
MPRINT(PROGRAMEND):   run;
NOTE: PROCEDURE PRINTTO used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(PROGRAMEND):   footnote;
MPRINT(PROGRAMEND):   *- resetting the footnotes so they do not appear in the Synopsis of Program Execution -*;
MPRINT(PROGRAMEND):   *- For Tables and Listings, systematically generate a TXT and a PDF file -*;
MPRINT(PROGRAMEND):   option nomautolocdisplay;
MPRINT(PROGRAMEND):   option nosyntaxcheck obs=max;
DEBUG=1 RUNENVIRONMENT=repository
MPRINT(PROGRAMEND):   proc printto log=log;
MPRINT(PROGRAMEND):   run;

NOTE: PROCEDURE PRINTTO used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

DEBUG=1 RUNENVIRONMENT=repository
fileref(logf) = 20004
(PROGRAMEND): SYSMEXECDEPTH =1
_PARENTJOB_WRK_= PARWRK_LIBREF_ASSIGNED=0
MPRINT(PROGRAMEND):   *- Process Job Messages Tracker data from child jobs (if any) -*;
MPRINT(PROGRAMEND):   *- Save Job Messages Tracker data to Library OUT if defined -*;
WEEKDAY=4
TRACKER=out.jobtrack0c6c5e63_d4 NEW_TRACKER=1 OUT_LIBREF_ASSIGNED=1
MPRINT(PROGRAMEND):   data out.jobtrack0c6c5e63_d4(label="gadam_ongoing_studies program job and subjobs tracker - 2023-02-15");
MPRINT(PROGRAMEND):   set work.__job_messages_tracker;
MPRINT(PROGRAMEND):   by parent_job_instance parent_job_stdtm job_path job_submission_id line;
MPRINT(PROGRAMEND):   run;

                                                                                   The SAS System

NOTE: There were 7 observations read from the data set WORK.__JOB_MESSAGES_TRACKER.
NOTE: The data set OUT.JOBTRACK0C6C5E63_D4 has 7 observations and 17 variables.
NOTE: Compressing data set OUT.JOBTRACK0C6C5E63_D4 increased size by 100.00 percent. 
      Compressed is 2 pages; un-compressed would require 1 pages.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(PROGRAMEND):   proc sql noprint;
MPRINT(PROGRAMEND):   create index _idx0_ on out.jobtrack0c6c5e63_d4(
MPRINT(PROGRAMEND.VARLIST):  parent_job_instance, parent_job_stdtm, job_path, job_submission_id, line
NOTE: Composite index _idx0_ has been defined.
MPRINT(PROGRAMEND):  ) quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(PROGRAMEND):   *- close active ods HTML destinations -*;
MPRINT(PROGRAMEND):   ;
MPRINT(PROGRAMEND):   *- launch dashboard job -*;
RELREPEVPATH=/general/biostat/jobs/gadam_ongoing_studies/prod
MPRINT(PROGRAMEND):   data _null_;
MPRINT(PROGRAMEND):   runinclinical = max(index("/general/biostat/jobs/gadam_ongoing_studies/prod", "/clinical/"), index("/general/biostat/jobs/gadam_ongoing_studies/prod", 
"\clinical\"));
MPRINT(PROGRAMEND):   call symputx("_runinclinical", strip(put(runinclinical, 8.)));
MPRINT(PROGRAMEND):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

_RUNINCLINICAL=0

Notice: === (PROGRAMEND): Done, 2023-02-15T06:00:30.66 - SYSMEXECDEPTH: 1 - DEBUG: 1 ===
668        option nomprintnest noMAUTOLOCDISPLAY;
669        
670        
671        
672        
673        ;*';*";*/;*); run; quit;
674        proc scaproc; write; run;

NOTE: PROCEDURE SCAPROC used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

675        options nonotes;
676        

/**********************************************************************************************************************
 * Submission End: gadam_ongoing_studies.sas
 * Feb 15, 2023 06:00:30 GMT
 *********************************************************************************************************************/
